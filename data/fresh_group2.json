{
    "repo_name": "fresh",
    "release_pr_map": {
        "1.7.3": [
            {
                "pr_number": 2708,
                "title": "fix: make `esbuild-deno-loader` work with Deno 2",
                "body": "Fixes https://github.com/denoland/fresh/issues/2701\r\nFixes https://github.com/denoland/fresh/issues/2698",
                "html_url": "https://github.com/denoland/fresh/pull/2708",
                "comments": [
                    "Thanks! @marvinhagemeister and @lucacasonato !"
                ]
            }
        ],
        "1.7.2": [
            {
                "pr_number": 2678,
                "title": "fix: `f-client-nav={false}` not working inside island",
                "body": "Fixes https://github.com/denoland/fresh/issues/2658",
                "html_url": "https://github.com/denoland/fresh/pull/2678",
                "comments": [
                    "Thanks a lot Marvin! It can't be easy finding time for these at the moment"
                ]
            },
            {
                "pr_number": 2669,
                "title": "fix: normalize URLPattern groups",
                "body": "Fixes https://github.com/denoland/fresh/issues/2627",
                "html_url": "https://github.com/denoland/fresh/pull/2669",
                "comments": []
            },
            {
                "pr_number": 2682,
                "title": "fix: SVG in links or buttons breaking partials",
                "body": "Fixes https://github.com/denoland/fresh/issues/2239",
                "html_url": "https://github.com/denoland/fresh/pull/2682",
                "comments": []
            },
            {
                "pr_number": 2683,
                "title": "chore: release 1.7.2",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2683",
                "comments": []
            }
        ],
        "1.7.1": [
            {
                "pr_number": 2679,
                "title": "chore: fix ci setup on 1.x",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2679",
                "comments": []
            }
        ],
        "1.7.0": [
            {
                "pr_number": 2383,
                "title": "showcase: add 'Echo-Echo'",
                "body": "Hello, Deno team!\r\n\r\nI have created a service using Fresh and would like you to register with showcase.\r\n[Echo-Echo](https://echo-echo.deno.dev/) \r\n\r\nBest regards.\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2383",
                "comments": []
            },
            {
                "pr_number": 2378,
                "title": "showcase: deno paste (updates to url, github repo, and screenshots)",
                "body": "Hello fresh team! \ud83d\udc4b \ud83e\udd95 \ud83c\udf4b \r\n\r\nI've registered a standalone domain for my showcase application, Deno Paste, and made a small change to the github repository name.\r\n\r\nThis pull request updates the `showcase.json` configuration accordingly and adds some more recent screenshots to boot.\r\n\r\nThanks!",
                "html_url": "https://github.com/denoland/fresh/pull/2378",
                "comments": []
            },
            {
                "pr_number": 2384,
                "title": "showcase: fix incorrect repository link + screenshot",
                "body": "Hello, Deno team!\r\n\r\nThe settings were not appropriate and have been corrected.\r\n\r\nBest regards.",
                "html_url": "https://github.com/denoland/fresh/pull/2384",
                "comments": []
            },
            {
                "pr_number": 2386,
                "title": "ci: only run lint and fmt on linux with Deno 1.x",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2386",
                "comments": []
            },
            {
                "pr_number": 2389,
                "title": "chore: satisfy use-import-type lint (biomejs)",
                "body": "https://biomejs.dev/linter/rules/use-import-type/\r\n\r\nFrom that page the argument is \r\n\r\n>The rule ensures that all imports used only as a type use a type-only import. It also groups inline type imports into a grouped import type.",
                "html_url": "https://github.com/denoland/fresh/pull/2389",
                "comments": []
            },
            {
                "pr_number": 2302,
                "title": "docs: add a PKCE authentication with Supabase example",
                "body": "Closes #1217\r\n\r\nAdds an example on how to implement the PKCE authentication flow with Supabase.\r\n\r\nI included a link to a repo of mine holding the code to a fully fleshed out example app as a more comprehensive point of reference, hope that is ok. In fact, I was thinking of deploying that app on Deno Deploy and add it to the Showcase section, lmk if that would be a good idea.",
                "html_url": "https://github.com/denoland/fresh/pull/2302",
                "comments": [
                    "> This is a great tutorial so far!\r\n\r\nThanks! Also for the prompt and thorough review. I'll be able to work on this tomorrow but before that, I have a couple of questions regarding the `--env` CLI option.\r\n\r\nIn my local testing, it does not seem to have any effect. In fact, I am suddenly able to run the app with neither using `@std/dotenv` nor the `--env` flag. I do have the `-A` option specified, which includes `--allow-env`, but that should not enable actual reading of .env files at runtime, right? What am I not seeing here?\r\n\r\nIn general, for educational content like this, should I include the most precise run command `deno run -r --unstable --allow-env --allow-read --allow-write --allow-run --allow-net --watch=static/,routes/ dev.ts` or is it fine to use the `-A` flag to make it shorter?",
                    "> In my local testing, it does not seem to have any effect. In fact, I am suddenly able to run the app with neither using `@std/dotenv` nor the `--env` flag. I do have the `-A` option specified, which includes `--allow-env`, but that should not enable actual reading of .env files at runtime, right? What am I not seeing here?\r\n\r\nYou understand correctly. `--allow-env` allows environment variables to be read and written but doesn't read `.env` files. `--env` does that, though. If you're using neither `load()` from `std/dotenv` or `--env`, I'd expect your example to fail somewhere. Try applying [this](https://github.com/denoland/fresh/pull/2302/files#r1483746271) and see if the issue persists. Also, just making sure, are you indeed using a `.env` file or setting environment variables in the CLI?\r\n\r\n> In general, for educational content like this, should I include the most precise run command `deno run -r --unstable --allow-env --allow-read --allow-write --allow-run --allow-net --watch=static/,routes/ dev.ts` or is it fine to use the `-A` flag to make it shorter?\r\n\r\nUsing specific permission flags instead of `-A`, in this case, is better as it's more explicit to the reader as to what permissions are required for this workflow.",
                    "@thorwebdev, feel free to review if you'd like.",
                    "Quick ping to see if this is still on the radar. Is there anything I can do to move this forward?",
                    "Just awaiting Marvin's review \ud83d\ude42",
                    "PTAL @marvinhagemeister"
                ]
            },
            {
                "pr_number": 2393,
                "title": "chore: minor cleanups",
                "body": "These changes occur by just running `deno task ok` on `main`.",
                "html_url": "https://github.com/denoland/fresh/pull/2393",
                "comments": []
            },
            {
                "pr_number": 2396,
                "title": "docs: Fix arguments for route component in Upload example",
                "body": "Closes #2395 ",
                "html_url": "https://github.com/denoland/fresh/pull/2396",
                "comments": []
            },
            {
                "pr_number": 2407,
                "title": "www: remov no build step from marketing",
                "body": "We've been moving away from that for a couple of months now, so featuring the \"no build step\" prominently in our marketing feels wrong.",
                "html_url": "https://github.com/denoland/fresh/pull/2407",
                "comments": [
                    "@marvinhagemeister Forgot to edit the introduction\r\n\r\n![image](https://github.com/denoland/fresh/assets/49933115/38dcb2f1-0e9c-4bde-860d-3761ab276ebf)\r\n\r\n"
                ]
            },
            {
                "pr_number": 2414,
                "title": "fix: add `.js` + `.jsx` extension to tailwind content glob",
                "body": "Whilst Deno supports Typescript by default, not everyone necessarily will want to write every file in Typescript. If using TailwindCSS, at the moment the files Tailwind searches for classes does not include `.js` and `.jsx` endings. Whilst you can manually add them via the `tailwind.config.ts`, it might be nice to have these added in by default for a better onboarding experience.\r\n\r\nCloses #2291 ",
                "html_url": "https://github.com/denoland/fresh/pull/2414",
                "comments": []
            },
            {
                "pr_number": 2413,
                "title": "www: document colocation of route groups",
                "body": "This adds in the information regarding co-location of islands and components from [this blog post](https://deno.com/blog/fresh-1.4#colocated-islands-components-and-more) into the main documentation.\r\n\r\nA lot of the text is pulled directly from the blog post, but I'm happy to edit it if need be.\r\n\r\nCloses #2305",
                "html_url": "https://github.com/denoland/fresh/pull/2413",
                "comments": []
            },
            {
                "pr_number": 2415,
                "title": "showcase: Add virtualfreight.software",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2415",
                "comments": []
            },
            {
                "pr_number": 2416,
                "title": "docs: using server components in islands",
                "body": "After reading the discussion at #2369, this PR introduces a small addition to the docs which highlights how you can use server components within islands.\r\n\r\nThis, coupled with the existing docs, should hopefully give people enough of an example to understand that islands provide the interactivity layer, and that server components within them can be hydrated and made interactive too.\r\n\r\nCloses #2369",
                "html_url": "https://github.com/denoland/fresh/pull/2416",
                "comments": []
            },
            {
                "pr_number": 2419,
                "title": "fix: `ServerhandlerInfo` type for newer Deno versions",
                "body": "Newer Deno versions have an additional `completed` property in there. This PR allows Fresh to be used with both old and newer Deno versions without getting type errors.",
                "html_url": "https://github.com/denoland/fresh/pull/2419",
                "comments": []
            },
            {
                "pr_number": 2392,
                "title": "feat: Support startServer for unix domain sockets",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2392",
                "comments": [
                    "Fixed the CI type issue in https://github.com/denoland/fresh/pull/2419"
                ]
            },
            {
                "pr_number": 2417,
                "title": "docs: Update documentation for active link with Tailwind",
                "body": "**Proposed change:**\r\n- Document styling for \ufeffaria-current attribute separately for Tailwind and Twind.\r\n\r\n**Disclaimer:**\r\nI am new to open-source contributions and are unfamiliar with the process for submitting a pull request. I have found some more areas of improvement in the Fresh documentation. Should this PR not be up-to-standards on how to contribute, please guide me in the right direction. I have a few more suggestions on issues I found while developing a new Fresh app.\r\n\r\nAny guidance would be helpful, either reach out to me on GitHub, Discord (bastianplsfix) or X (bastianplsfix).\r\n\r\nBest,\r\nSebastian \ud83e\udd95 ",
                "html_url": "https://github.com/denoland/fresh/pull/2417",
                "comments": []
            },
            {
                "pr_number": 2422,
                "title": "showcase: add dgaubert's showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2422",
                "comments": []
            },
            {
                "pr_number": 2418,
                "title": "www: refresh home page",
                "body": "Overhauls the Fresh homepage with a new design, new demos, and new sections highlighting Fresh's capabilities.",
                "html_url": "https://github.com/denoland/fresh/pull/2418",
                "comments": [
                    "Rebasing against `main` should solve the CI issues."
                ]
            },
            {
                "pr_number": 2428,
                "title": "Update og image",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2428",
                "comments": []
            },
            {
                "pr_number": 2430,
                "title": "www: fully remove component gallery",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2430",
                "comments": []
            },
            {
                "pr_number": 2432,
                "title": "www: fix home partial changing doc title",
                "body": "Fixes https://github.com/denoland/fresh/issues/2431",
                "html_url": "https://github.com/denoland/fresh/pull/2432",
                "comments": []
            },
            {
                "pr_number": 2441,
                "title": "www: social meta tag bot detection",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2441",
                "comments": []
            },
            {
                "pr_number": 2429,
                "title": "www: rework docs layout",
                "body": "- Re-enable partials\r\n- clean up layout a bit",
                "html_url": "https://github.com/denoland/fresh/pull/2429",
                "comments": []
            },
            {
                "pr_number": 2442,
                "title": "chore: remove unused demo app",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2442",
                "comments": []
            },
            {
                "pr_number": 2445,
                "title": "Change side-by-side sections to sticky",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2445",
                "comments": []
            },
            {
                "pr_number": 2446,
                "title": "Fix CTA graphic",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2446",
                "comments": []
            },
            {
                "pr_number": 2447,
                "title": "Add JSR and Deno.com to showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2447",
                "comments": []
            },
            {
                "pr_number": 2448,
                "title": "chore: remove .DS_Store",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2448",
                "comments": []
            },
            {
                "pr_number": 2451,
                "title": "Chore: styling and verbiage cleanup",
                "body": "- Better responsive styling of header, logo, nav menu and docs sidebar\r\n- Specify UTC on homepage (since we can't localize server-side)\r\n- Minor copy updates",
                "html_url": "https://github.com/denoland/fresh/pull/2451",
                "comments": []
            },
            {
                "pr_number": 2679,
                "title": "chore: fix ci setup on 1.x",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2679",
                "comments": []
            }
        ],
        "1.6.8": [
            {
                "pr_number": 2381,
                "title": "chore: update ahead-of-time build docs for Deno Deploy",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2381",
                "comments": []
            },
            {
                "pr_number": 2382,
                "title": "chore: release 1.6.8",
                "body": ":tada:",
                "html_url": "https://github.com/denoland/fresh/pull/2382",
                "comments": []
            }
        ],
        "1.6.7": [
            {
                "pr_number": 2374,
                "title": "showcase: Remove non-Fresh sites + sites returning errors",
                "body": "These items are no longer Fresh.",
                "html_url": "https://github.com/denoland/fresh/pull/2374",
                "comments": [
                    "Wow, that was fast, thank you. You\u2019re welcome!"
                ]
            },
            {
                "pr_number": 2377,
                "title": "fix: Add closing quote for nonce in inline partial script",
                "body": "Fixes #2376 ",
                "html_url": "https://github.com/denoland/fresh/pull/2377",
                "comments": []
            },
            {
                "pr_number": 2380,
                "title": "chore: release 1.6.7",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2380",
                "comments": []
            }
        ],
        "1.6.6": [
            {
                "pr_number": 2320,
                "title": "fix: increase recommended preact, preact-signals and bump other deps",
                "body": "closes https://github.com/denoland/fresh/issues/2319\r\n\r\nThe issue is because `imports.ts` wasn't changed before releasing. I thought I would go through and bump some other versions as well. This handles everything except the esbuild stuff and `tests/`.",
                "html_url": "https://github.com/denoland/fresh/pull/2320",
                "comments": []
            },
            {
                "pr_number": 2321,
                "title": "startServer onListen logs https when key & cert specified",
                "body": "Some team members of mine were confused by the default output \r\n\r\n```\r\n \ud83c\udf4b Fresh ready\r\n    Local: http://localhost:8000/\r\n```\r\n\r\nwhen the server is actually running HTTPS. This should now print\r\n\r\n```\r\n \ud83c\udf4b Fresh ready\r\n    Local: https://localhost:8000/\r\n```\r\n\r\nwhen a key and cert are specified.",
                "html_url": "https://github.com/denoland/fresh/pull/2321",
                "comments": []
            },
            {
                "pr_number": 2323,
                "title": "fix: invalid quote around partial script data",
                "body": "This is a little emberassing :eyes:",
                "html_url": "https://github.com/denoland/fresh/pull/2323",
                "comments": []
            },
            {
                "pr_number": 2324,
                "title": "docs: fix potential null errors",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2324",
                "comments": []
            },
            {
                "pr_number": 2330,
                "title": "docs: disable partial nav temporarily",
                "body": "We can re-enable once https://github.com/preactjs/preact/pull/4287 is fixed.\n\nFixes https://github.com/denoland/fresh/issues/2322",
                "html_url": "https://github.com/denoland/fresh/pull/2330",
                "comments": []
            },
            {
                "pr_number": 2331,
                "title": "chore: update Preact to 10.19.6",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2331",
                "comments": []
            },
            {
                "pr_number": 2334,
                "title": "fix: properly prefix all scripts with base path",
                "body": "closes https://github.com/denoland/fresh/issues/2326\r\n\r\nThere was a big misunderstanding on my part -- in particular that a different server might be listening at the root, so the redirect built into `context.ts` will never happen. The existing test (as mentioned in the issue) passes, but only because no one else is listening, and fresh is able to perform the redirect.\r\n\r\nI briefly considered writing a docker container to orchestrate this properly, but then I didn't want to have docker running in order to run these tests. (My laptop is old and bad.) So instead the two new tests very thoroughly assert that scripts included in the html are properly prefixed with the base path. And yes, they fail if the fix is reverted.\r\n\r\nAs for the fix itself: I just needed to prepend the asset URL with the base path.",
                "html_url": "https://github.com/denoland/fresh/pull/2334",
                "comments": []
            },
            {
                "pr_number": 2337,
                "title": "chore: update deno_esbuild_loader to 0.9.0",
                "body": "Fixes https://github.com/denoland/fresh/issues/2332",
                "html_url": "https://github.com/denoland/fresh/pull/2337",
                "comments": []
            },
            {
                "pr_number": 2357,
                "title": "fix: allow multiple set-cookie headers to be set before render",
                "body": "closes #2346\r\n\r\nThe primary issue was the snippet `headers[key] = value`. This caused only one `set-cookie` to make it through. Switching to a `Headers` object allowed me to use `append` when appropriate, allowing for multiple `set-cookie` entries.\r\n\r\nI also cleaned up one of the tests to make use of steps, because I originally broke it and couldn't immediately tell which part was failing.",
                "html_url": "https://github.com/denoland/fresh/pull/2357",
                "comments": []
            },
            {
                "pr_number": 2340,
                "title": "fix: $fresh ref in import sources",
                "body": "There was an issue with the tailwind error page being pulled in by ref to $fresh, fixed so now it just uses the file",
                "html_url": "https://github.com/denoland/fresh/pull/2340",
                "comments": [
                    "Ahh, right. Yea, i forgot to branch for my build mode changes. I removed those from this branch, so it is just the ref fixes.  "
                ]
            },
            {
                "pr_number": 2358,
                "title": "feat: add `ctx.redirect()` helper",
                "body": "This PR adds a `ctx.redirect(path, status)` helper that aims to reduce the verbosity of having to manually create a `Response` obejct for a mere redirect.\n\n```ts\n// Before\nnew Response(null, {\n  status: 307,\n  headers: {\n    Location: \"/foo/bar\"\n  },\n})\n\n// After\nctx.redirect(\"/foo/bar\", 307)\n```\n\nIf the second parameter is not passed, it will default to `302`.",
                "html_url": "https://github.com/denoland/fresh/pull/2358",
                "comments": [
                    "Hi @marvinhagemeister, cool feature, but what about docs? \ud83d\ude43 \r\n\r\nI can open a PR if you'd like."
                ]
            },
            {
                "pr_number": 2362,
                "title": "docs: remove outdated information",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2362",
                "comments": []
            },
            {
                "pr_number": 2295,
                "title": "Docs: Add page about setting raw HTML content (#2189)",
                "body": "Closes #2189 ",
                "html_url": "https://github.com/denoland/fresh/pull/2295",
                "comments": [
                    "Bump. Rebased to main."
                ]
            },
            {
                "pr_number": 2368,
                "title": "docs: fix wording related to route groups",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2368",
                "comments": [
                    "Ah looks like the file is not formatted correctly. A quick `deno fmt` should resolve this."
                ]
            },
            {
                "pr_number": 2366,
                "title": "chore: update to esbuild-deno-loader@0.10.3 and esbuild@0.20.2",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2366",
                "comments": []
            },
            {
                "pr_number": 2372,
                "title": "Revert \"feat: add `ctx.redirect()` helper (#2358)\"",
                "body": "Mostly so that it's easier to cut the next patch release for Fresh.\r\n\r\nThis reverts commit e3508c30541018e6384ce8b373baf17d3dc52673.",
                "html_url": "https://github.com/denoland/fresh/pull/2372",
                "comments": []
            },
            {
                "pr_number": 2349,
                "title": "doc: Rename _req used to req",
                "body": "Where other documents use req, they use the name req instead of _req\r\n\r\nhttps://github.com/denoland/fresh/blob/b7281792a0a5b2674f659514b1e58116fabd6460/docs/latest/concepts/middleware.md?plain=1#L153\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2349",
                "comments": []
            },
            {
                "pr_number": 2373,
                "title": "chore: release 1.6.6",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2373",
                "comments": []
            }
        ],
        "1.6.5": [
            {
                "pr_number": 2316,
                "title": "fix: update versions",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2316",
                "comments": []
            }
        ],
        "1.6.4": [
            {
                "pr_number": 2259,
                "title": "chore: simplify deno check:types command",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2259",
                "comments": []
            },
            {
                "pr_number": 2262,
                "title": "Revert \"chore: simplify deno check:types command\"",
                "body": "Reverts denoland/fresh#2259\r\nWindows is failing with this change:\r\n* my PR https://github.com/denoland/fresh/actions/runs/7556810357/job/20574665605?pr=2261\r\n* your PR https://github.com/denoland/fresh/actions/runs/7543217433/job/20533721591\r\n* the commit from merging your PR https://github.com/denoland/fresh/actions/runs/7543221780/job/20533736560\r\n\r\n```\r\nRun deno task check:types\r\nTask check:types deno check **/*.ts **/*.tsx\r\nError launching 'deno': The filename or extension is too long. (os error 206)\r\nError: Process completed with exit code 1.\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/2262",
                "comments": [
                    "@marvinhagemeister, please take a look."
                ]
            },
            {
                "pr_number": 2270,
                "title": "chore: update esbuild deno loader",
                "body": "This fixes a bunch of bugs related to `npm:` imports.\n",
                "html_url": "https://github.com/denoland/fresh/pull/2270",
                "comments": []
            },
            {
                "pr_number": 2272,
                "title": "fix: no-window lint error",
                "body": "Latest PR runs are failing with linting errors, e.g. https://github.com/denoland/fresh/actions/runs/7625625084/job/20770308634?pr=2266\r\n\r\nMaybe this shouldn't be happening like this right now, but we'll still need to clean these up eventually.",
                "html_url": "https://github.com/denoland/fresh/pull/2272",
                "comments": [
                    "@marvinhagemeister, please take a look."
                ]
            },
            {
                "pr_number": 2271,
                "title": "chore(deps): bump actions/cache from 3 to 4",
                "body": "Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/releases\">actions/cache's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update action to node20 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li>feat: save-always flag by <a href=\"https://github.com/to-s\"><code>@\u200bto-s</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1284\">actions/cache#1284</a></li>\n<li><a href=\"https://github.com/to-s\"><code>@\u200bto-s</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1242\">actions/cache#1242</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v4.0.0\">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>\n<h2>v3.3.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Cache v3.3.3 by <a href=\"https://github.com/robherley\"><code>@\u200brobherley</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/robherley\"><code>@\u200brobherley</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1302\">actions/cache#1302</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.3\">https://github.com/actions/cache/compare/v3...v3.3.3</a></p>\n<h2>v3.3.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fixed readme with new segment timeout values by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1133\">actions/cache#1133</a></li>\n<li>Readme fixes by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1134\">actions/cache#1134</a></li>\n<li>Updated description of the lookup-only input for main action by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1130\">actions/cache#1130</a></li>\n<li>Change two new actions mention as quoted text by <a href=\"https://github.com/bishal-pdMSFT\"><code>@\u200bbishal-pdMSFT</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1131\">actions/cache#1131</a></li>\n<li>Update Cross-OS Caching tips by <a href=\"https://github.com/pdotl\"><code>@\u200bpdotl</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1122\">actions/cache#1122</a></li>\n<li>Bazel example (Take <a href=\"https://redirect.github.com/actions/cache/issues/2\">#2</a>\ufe0f\u20e3) by <a href=\"https://github.com/vorburger\"><code>@\u200bvorburger</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li>Remove actions to add new PRs and issues to a project board by <a href=\"https://github.com/jorendorff\"><code>@\u200bjorendorff</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li>Consume latest toolkit and fix dangling promise bug by <a href=\"https://github.com/chkimes\"><code>@\u200bchkimes</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li>Bump action version to 3.3.2 by <a href=\"https://github.com/bethanyj28\"><code>@\u200bbethanyj28</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/vorburger\"><code>@\u200bvorburger</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1132\">actions/cache#1132</a></li>\n<li><a href=\"https://github.com/jorendorff\"><code>@\u200bjorendorff</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1187\">actions/cache#1187</a></li>\n<li><a href=\"https://github.com/chkimes\"><code>@\u200bchkimes</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1217\">actions/cache#1217</a></li>\n<li><a href=\"https://github.com/bethanyj28\"><code>@\u200bbethanyj28</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/cache/pull/1236\">actions/cache#1236</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.2\">https://github.com/actions/cache/compare/v3...v3.3.2</a></p>\n<h2>v3.3.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Reduced download segment size to 128 MB and timeout to 10 minutes by <a href=\"https://github.com/kotewar\"><code>@\u200bkotewar</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1129\">actions/cache#1129</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/cache/compare/v3...v3.3.1\">https://github.com/actions/cache/compare/v3...v3.3.1</a></p>\n<h2>v3.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bug: Permission is missing in cache delete example by <a href=\"https://github.com/kotokaze\"><code>@\u200bkotokaze</code></a> in <a href=\"https://redirect.github.com/actions/cache/pull/1123\">actions/cache#1123</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's changelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>3.0.0</h3>\n<ul>\n<li>Updated minimum runner version support from node 12 -&gt; node 16</li>\n</ul>\n<h3>3.0.1</h3>\n<ul>\n<li>Added support for caching from GHES 3.5.</li>\n<li>Fixed download issue for files &gt; 2GB during restore.</li>\n</ul>\n<h3>3.0.2</h3>\n<ul>\n<li>Added support for dynamic cache size cap on GHES.</li>\n</ul>\n<h3>3.0.3</h3>\n<ul>\n<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=\"https://redirect.github.com/actions/cache/issues/624\">issue</a>)</li>\n</ul>\n<h3>3.0.4</h3>\n<ul>\n<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=\"https://redirect.github.com/actions/cache/issues/689\">issue</a>)</li>\n</ul>\n<h3>3.0.5</h3>\n<ul>\n<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=\"https://redirect.github.com/actions/cache/pull/834\">PR</a>)</li>\n</ul>\n<h3>3.0.6</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/809\">#809</a> - zstd -d: no such file or directory error</li>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/833\">#833</a> - cache doesn't work with github workspace directory</li>\n</ul>\n<h3>3.0.7</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/810\">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>\n</ul>\n<h3>3.0.8</h3>\n<ul>\n<li>Fix zstd not working for windows on gnu tar in issues <a href=\"https://redirect.github.com/actions/cache/issues/888\">#888</a> and <a href=\"https://redirect.github.com/actions/cache/issues/891\">#891</a>.</li>\n<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>\n</ul>\n<h3>3.0.9</h3>\n<ul>\n<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>\n</ul>\n<h3>3.0.10</h3>\n<ul>\n<li>Fix a bug with sorting inputs.</li>\n<li>Update definition for restore-keys in README.md</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2\"><code>13aacd8</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1242\">#1242</a> from to-s/main</li>\n<li><a href=\"https://github.com/actions/cache/commit/53b35c543921fe2e8b288765ff817de9de8d906f\"><code>53b35c5</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/65b8989fab3bb394817bdb845a453dff480c2b51\"><code>65b8989</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1284\">#1284</a> from takost/update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/d0be34d54485f31ca2ccbe66e6ea3d96544a807b\"><code>d0be34d</code></a> Fix dist</li>\n<li><a href=\"https://github.com/actions/cache/commit/66cf064d47313d2cccf392d01bd10925da2bd072\"><code>66cf064</code></a> Merge branch 'main' into update-to-node-20</li>\n<li><a href=\"https://github.com/actions/cache/commit/1326563738ddb735c5f2ce85cba8c79f33b728cd\"><code>1326563</code></a> Merge branch 'main' into main</li>\n<li><a href=\"https://github.com/actions/cache/commit/e71876755e268d6cc25a5d3e3c46ae447e35290a\"><code>e718767</code></a> Fix format</li>\n<li><a href=\"https://github.com/actions/cache/commit/01229828ffa049a8dee4db27bcb23ed33f2b451f\"><code>0122982</code></a> Apply workaround for earlyExit</li>\n<li><a href=\"https://github.com/actions/cache/commit/3185ecfd6135856ca6d904ae032cff4f39b8b365\"><code>3185ecf</code></a> Update &quot;only-&quot; actions to node20</li>\n<li><a href=\"https://github.com/actions/cache/commit/25618a0a675e8447e5ffc8ed9b7ddb2aaf927f65\"><code>25618a0</code></a> Bump version</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/cache/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
                "html_url": "https://github.com/denoland/fresh/pull/2271",
                "comments": []
            },
            {
                "pr_number": 2273,
                "title": "chore: update esbuild_deno_loader to 0.8.5",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2273",
                "comments": []
            },
            {
                "pr_number": 2287,
                "title": "chore: upgrade tailwind to 3.4.1",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2287",
                "comments": []
            },
            {
                "pr_number": 2286,
                "title": "fix: GH actions warning by upgrading actions/checkout to v4 #2285",
                "body": "I tested the change in my own repo, the warning on github disapears for the \"actions/checkout\" action. \r\nIt is still there for the denoland/setup-deno action, but an upgrade PR is already ongoing for this action, see: \r\nhttps://github.com/denoland/setup-deno/pull/56",
                "html_url": "https://github.com/denoland/fresh/pull/2286",
                "comments": []
            },
            {
                "pr_number": 2281,
                "title": "docs: add link to deno",
                "body": "This pull request replaces a code snippet mentioning Deno (`deno`) with a link to deno.com ([deno](https://deno.com/)), and will close #2280.",
                "html_url": "https://github.com/denoland/fresh/pull/2281",
                "comments": []
            },
            {
                "pr_number": 2290,
                "title": "feat: bring back the posibility to initialize projects with Twind",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2290",
                "comments": []
            },
            {
                "pr_number": 2313,
                "title": "fix: open redirect issue with trailing slash detection",
                "body": "Passing a path like `/foo/bar` as the location header is interpreted as a relative path. But when it contains two leading slashes like `//evil.com/` it is interpreted as a port relative url. This has the consequence that the origin of a URL can essentially be replaced:\r\n\r\n```ts\r\nnew URL(\"//evil.com\", \"https://example.com/\");\r\n// -> 'https://evil.com/'\r\n```\r\n\r\nOur trailing slash detection logic didn't guard against this case. By normalizing the pathname of the URL and stripping sibling forward slashes we sidestep this problem.\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2313",
                "comments": []
            },
            {
                "pr_number": 2314,
                "title": "fix: improve init choice design",
                "body": "Before:\r\n\r\n<img width=\"528\" alt=\"Screenshot 2024-02-14 at 15 33 41\" src=\"https://github.com/denoland/fresh/assets/1062408/1c7093db-a509-4d42-998c-3b5282cd88d5\">\r\n\r\nAfter:\r\n\r\n<img width=\"530\" alt=\"Screenshot 2024-02-14 at 15 33 09\" src=\"https://github.com/denoland/fresh/assets/1062408/99e2bdeb-e0f5-4926-91e1-f972df1149c1\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2314",
                "comments": []
            }
        ],
        "1.6.3": [
            {
                "pr_number": 2255,
                "title": "fix: prototype pollution in deserializer",
                "body": "This is not exploitable in practice unless a user maliciously crafts serialized values in __FRSH_STATE, because `serializer()` never outputs serialized representation that would be vulnerable to prototype pollution. But hey, defense in depth.\n",
                "html_url": "https://github.com/denoland/fresh/pull/2255",
                "comments": [
                    "Just commenting to link issues https://github.com/denoland/fresh/issues/2254"
                ]
            },
            {
                "pr_number": 2256,
                "title": "fix: `__FRSH_STATE` potentially being overwritten by user code",
                "body": "As outlined in https://github.com/denoland/fresh/issues/2254 it was possible to overwrite the script tag that is used by Fresh to pass island props from the server to the client. This could be done by injecting raw HTML via `dangerouslySetInnerHTML` and simply using the same id that Fresh was using.\r\n\r\nWith this PR we generate a unique id per render that cannot be guessed anymore. It's composed of `__FRSH_STATE_<uuid>`",
                "html_url": "https://github.com/denoland/fresh/pull/2256",
                "comments": [
                    "To share the apprenticeship, at deco.cx we use __FRSH_STATE to see how much data is going to client side\r\n\r\n![image](https://github.com/denoland/fresh/assets/76620866/f898a61c-c454-4016-8612-b5cab486f76d)\r\n\r\n\r\nAfter that, a small adjustment was necessary:\r\n\r\n``document.getElementById(\"__FRSH_STATE\")?.textContent``\r\nto\r\n``document.querySelector(\"script[id^='__FRSH_STATE']\")?.textContent``"
                ]
            },
            {
                "pr_number": 2257,
                "title": "chore: release 1.6.3",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2257",
                "comments": []
            }
        ],
        "1.6.2": [
            {
                "pr_number": 2162,
                "title": "fix link to data-fetching",
                "body": "Just a fixed link",
                "html_url": "https://github.com/denoland/fresh/pull/2162",
                "comments": []
            },
            {
                "pr_number": 2165,
                "title": "showcase: add Living Pixel",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2165",
                "comments": []
            },
            {
                "pr_number": 2170,
                "title": "chore(deps): bump google-github-actions/setup-gcloud from 1 to 2",
                "body": "Bumps [google-github-actions/setup-gcloud](https://github.com/google-github-actions/setup-gcloud) from 1 to 2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google-github-actions/setup-gcloud/releases\">google-github-actions/setup-gcloud's releases</a>.</em></p>\n<blockquote>\n<h2>v2</h2>\n<p><strong>:warning: This version requires Node 20 or later!</strong></p>\n<p>Floating v2 alias</p>\n<h2>v2.0.0</h2>\n<p><strong>:warning: This version requires Node 20 or later!</strong></p>\n<h2>What's Changed</h2>\n<ul>\n<li>dependabot: only do security updates by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/643\">google-github-actions/setup-gcloud#643</a></li>\n<li>update all deps by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/644\">google-github-actions/setup-gcloud#644</a></li>\n<li>Update deps to Node 20 by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/653\">google-github-actions/setup-gcloud#653</a></li>\n<li>Upgrade setup-cloud-sdk package by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/656\">google-github-actions/setup-gcloud#656</a></li>\n<li>Add CI for release branches by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/661\">google-github-actions/setup-gcloud#661</a></li>\n<li>Update and drop unnecessary deps by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/662\">google-github-actions/setup-gcloud#662</a></li>\n<li>Release: v2.0.0 by <a href=\"https://github.com/google-github-actions-bot\"><code>@\u200bgoogle-github-actions-bot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/664\">google-github-actions/setup-gcloud#664</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/google-github-actions/setup-gcloud/compare/v1...v2.0.0\">https://github.com/google-github-actions/setup-gcloud/compare/v1...v2.0.0</a></p>\n<h2>v1.1.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix docs about component installation for system-provided by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/615\">google-github-actions/setup-gcloud#615</a></li>\n<li>chore: update dependencies (automated) by <a href=\"https://github.com/verbanicm\"><code>@\u200bverbanicm</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/623\">google-github-actions/setup-gcloud#623</a></li>\n<li>Switch to pull non-secret values from env by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/624\">google-github-actions/setup-gcloud#624</a></li>\n<li>Drop example workflows by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/627\">google-github-actions/setup-gcloud#627</a></li>\n<li>Add warning about <code>skip_install</code> by <a href=\"https://github.com/ethanmdavidson\"><code>@\u200bethanmdavidson</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/630\">google-github-actions/setup-gcloud#630</a></li>\n<li>chore(deps): bump yaml from 2.2.1 to 2.2.2 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/629\">google-github-actions/setup-gcloud#629</a></li>\n<li>Update README.md by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/631\">google-github-actions/setup-gcloud#631</a></li>\n<li>Add support note by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/634\">google-github-actions/setup-gcloud#634</a></li>\n<li>chore: update dependencies (automated) by <a href=\"https://github.com/verbanicm\"><code>@\u200bverbanicm</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/637\">google-github-actions/setup-gcloud#637</a></li>\n<li>Release: v1.1.1 by <a href=\"https://github.com/google-github-actions-bot\"><code>@\u200bgoogle-github-actions-bot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/638\">google-github-actions/setup-gcloud#638</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/ethanmdavidson\"><code>@\u200bethanmdavidson</code></a> made their first contribution in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/630\">google-github-actions/setup-gcloud#630</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/google-github-actions/setup-gcloud/compare/v1.1.0...v1.1.1\">https://github.com/google-github-actions/setup-gcloud/compare/v1.1.0...v1.1.1</a></p>\n<h2>v1.1.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Reduce duplicate in integration tests by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/591\">google-github-actions/setup-gcloud#591</a></li>\n<li>chore(deps): bump sinon from 14.0.2 to 15.0.0 by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/596\">google-github-actions/setup-gcloud#596</a></li>\n<li>chore(deps): bump qs and express in /example-workflows/cloud-build by <a href=\"https://github.com/dependabot\"><code>@\u200bdependabot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/599\">google-github-actions/setup-gcloud#599</a></li>\n<li>Update CI and deps by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/603\">google-github-actions/setup-gcloud#603</a></li>\n<li>Note that metrics export should not be copied by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/604\">google-github-actions/setup-gcloud#604</a></li>\n<li>Add support for specifying version constraints by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/612\">google-github-actions/setup-gcloud#612</a></li>\n<li>Release: v1.1.0 by <a href=\"https://github.com/google-github-actions-bot\"><code>@\u200bgoogle-github-actions-bot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/pull/613\">google-github-actions/setup-gcloud#613</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/google-github-actions/setup-gcloud/compare/v1.0.1...v1.1.0\">https://github.com/google-github-actions/setup-gcloud/compare/v1.0.1...v1.1.0</a></p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google-github-actions/setup-gcloud/commit/825196879a077b7efa50db2e88409f44de4635c2\"><code>8251968</code></a> Release: v2.0.0 (<a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/issues/664\">#664</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/setup-gcloud/commit/c2599dbc0ba1a9cc7e71084707f8c0b2e79516f2\"><code>c2599db</code></a> Update and drop unnecessary deps (<a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/issues/662\">#662</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/setup-gcloud/commit/7c7fdb013a8b6110c2be651135a704ef79c91e5f\"><code>7c7fdb0</code></a> Add CI for release branches (<a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/issues/661\">#661</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/setup-gcloud/commit/63496e652100112a8db8a71668b77c67aa1ab071\"><code>63496e6</code></a> Upgrade setup-cloud-sdk package (<a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/issues/656\">#656</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/setup-gcloud/commit/602747fdf0744cdd55709b3dab7a8d86f5fc7333\"><code>602747f</code></a> Update deps to Node 20 (<a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/issues/653\">#653</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/setup-gcloud/commit/080181af0511f83ff0e69f454b3ea1f07e880446\"><code>080181a</code></a> update all deps (<a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/issues/644\">#644</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/setup-gcloud/commit/827c57dd8ce38f68f65af46941ac592c57c03442\"><code>827c57d</code></a> dependabot: only do security updates (<a href=\"https://redirect.github.com/google-github-actions/setup-gcloud/issues/643\">#643</a>)</li>\n<li>See full diff in <a href=\"https://github.com/google-github-actions/setup-gcloud/compare/v1...v2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=google-github-actions/setup-gcloud&package-manager=github_actions&previous-version=1&new-version=2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
                "html_url": "https://github.com/denoland/fresh/pull/2170",
                "comments": []
            },
            {
                "pr_number": 2176,
                "title": "docs: Move aot step in tailwind guide to start",
                "body": "People seem to miss the step to switch the project over to AOT builds and are confused why the tailwind plugin doesn't work. This PR changes the docs page to add a dedicated \"required\" section before going into the tailwind guide.",
                "html_url": "https://github.com/denoland/fresh/pull/2176",
                "comments": []
            },
            {
                "pr_number": 2182,
                "title": "docs: fix typo in upload example",
                "body": "Fix undefined error on file upload example.",
                "html_url": "https://github.com/denoland/fresh/pull/2182",
                "comments": []
            },
            {
                "pr_number": 2183,
                "title": "docs: add missing import",
                "body": "fix undefined var error.",
                "html_url": "https://github.com/denoland/fresh/pull/2183",
                "comments": []
            },
            {
                "pr_number": 2185,
                "title": "fix: `.vscode/tailwind.json` generation",
                "body": "Fixes #2184\r\n\r\nIs there any reason for this not being `JSON.stringify({ ... that object ... })` and avoid a lat of escaping?",
                "html_url": "https://github.com/denoland/fresh/pull/2185",
                "comments": [
                    "Ah good call, we should probably just call `JSON.stringify()` there.",
                    "Updated \ud83d\udc4d "
                ]
            },
            {
                "pr_number": 2192,
                "title": "docs: fix typo in active links introduction",
                "body": "Fixes an `<a>` in the active link markdown from being interpreted as an actual link, rather than part of the text.\r\n\r\nBefore:\r\n\r\n![](https://github.com/denoland/fresh/assets/1732331/fa5665f8-deed-439f-b6de-4589b494edd7)\r\n\r\nBefore with rogue anchor element in hover state:\r\n\r\n![](https://github.com/denoland/fresh/assets/1732331/e6b286d6-e76a-4def-8446-ec0f8752967a)\r\n\r\n\r\nAfter:\r\n![](https://github.com/denoland/fresh/assets/1732331/1f441b30-871e-4076-837e-1cf5e64a82b0)\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2192",
                "comments": []
            },
            {
                "pr_number": 2203,
                "title": "docs: fix deprecated type usage in example code",
                "body": "Fixes deprecated example in docs.\r\n\r\n<img width=\"760\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/6600962/1e239f0f-0798-4ca0-b84d-d4266b6dfc31\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2203",
                "comments": []
            },
            {
                "pr_number": 2204,
                "title": "refactor: use `--env` CLI arg",
                "body": "This change replaces the use of the Standard Library's `dotenv.load()` with the native `--env` CLI flag.\n\nThe benefits include:\n* One less dependency\n* More obvious consumption of the `.env` file in the CLI output",
                "html_url": "https://github.com/denoland/fresh/pull/2204",
                "comments": []
            },
            {
                "pr_number": 2211,
                "title": "showcase: fix missing screenshots",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2211",
                "comments": []
            },
            {
                "pr_number": 2212,
                "title": "Revert \"refactor: use `--env` CLI arg\"",
                "body": "Reverts denoland/fresh#2204\r\n\r\nThe `--env` flag cannot be used by default because it fails when no `.env` file is present. Therefore this PR accidentally introduced a breaking change.",
                "html_url": "https://github.com/denoland/fresh/pull/2212",
                "comments": []
            },
            {
                "pr_number": 2218,
                "title": "docs: fix import_map link in creating-a-project",
                "body": "closes https://github.com/denoland/fresh/issues/2208",
                "html_url": "https://github.com/denoland/fresh/pull/2218",
                "comments": []
            },
            {
                "pr_number": 2205,
                "title": "showcase: add rfui.deno.dev",
                "body": "Add RFUI (https://rfui.deno.dev/)",
                "html_url": "https://github.com/denoland/fresh/pull/2205",
                "comments": [
                    "Hey guys. How do images work? I tried to add one for FilterHN as well, but couldn't figure it out.",
                    "@adamzerner There is a `screenshot` task in the top level `deno.json` that creates a screenshot from the URL you feed to it and saves it in the expected format for the showcase sites.",
                    "@marvinhagemeister Is this documented in more detail anywhere? If not, would you mind elaborating on how that works?\r\n\r\nI wasn't able to infer how it works by looking at the task in `deno.json`. Also, I am seeing the other values for `image` (eg. `\"image\": \"living-pixel\"`) are not URLs, so I'm not sure how to get the task to successfully work. And it looks like the URL isn't enough because it didn't work for FilterHN.\r\n\r\n<img width=\"1440\" alt=\"Screenshot 2024-01-03 at 11 51 38\u202fAM\" src=\"https://github.com/denoland/fresh/assets/3144254/4d659a59-3c57-4ffe-a7c0-2e96fd9b86da\">",
                    "Good catch, I've fixed the missing screenshots in https://github.com/denoland/fresh/pull/2211 .\r\n\r\nThe value in `\"image\": \"foobar\"` is the filename that is used to look up the appropriate image. Example:\r\n\r\n```json\r\n{\r\n  \"title\": \"Example\",\r\n  \"link\": \"https://example.com/\",\r\n  \"image\": \"example\"\r\n}\r\n```\r\n\r\nThen run `deno task screenshot https://example.com example` to generate the images. The first argument is the url to the site, and the second whatever you set in the json under `image`. If you run the task without any arguments a short help output is displayed.",
                    "@marvinhagemeister Thank you for explaining. That makes sense. I was able to get those images added to this PR.\r\n\r\nNote: I had to run something for Puppeteer. It may be worth mentioning that too in the docs.\r\n\r\n```\r\ncode/fresh [patch-2] \u00bb deno task screenshot https://rfui.deno.dev/ rfui\r\nTask screenshot deno run -A www/utils/screenshot.ts \"https://rfui.deno.dev/\" \"rfui\"\r\nerror: Uncaught (in promise) Error: Could not find browser revision 1022525. Run \"PUPPETEER_PRODUCT=chrome deno run -A --unstable https://deno.land/x/puppeteer@16.2.0/install.ts\" to download a supported browser binary.\r\n      if (missingText) throw new Error(missingText);\r\n                             ^\r\n    at ChromeLauncher.launch (https://deno.land/x/puppeteer@16.2.0/src/deno/Launcher.ts:99:30)\r\n    at eventLoopTick (ext:core/01_core.js:181:11)\r\n    at async file:///Users/adamzerner/code/fresh/www/utils/screenshot.ts:24:17\r\ncode/fresh [patch-2] \u00bb PUPPETEER_PRODUCT=chrome deno run -A --unstable https://deno.land/x/puppeteer@16.2.0/install.ts\r\n 100.00%                                                    9.4s 124183342/124183342\r\nDownloaded chrome 1022525 to /Users/adamzerner/Library/Caches/deno/deno_puppeteer/chromium/mac-1022525/chrome-mac/Chromium.app/Contents/MacOS/Chromium from https://storage.googleapis.com/chromium-browser-snapshots/Mac/1022525/chrome-mac.zip\r\ncode/fresh [patch-2] \u00bb deno task screenshot https://rfui.deno.dev/ rfui\r\nTask screenshot deno run -A www/utils/screenshot.ts \"https://rfui.deno.dev/\" \"rfui\"\r\n```"
                ]
            },
            {
                "pr_number": 2198,
                "title": "docs: fix navigating to components from docs with small screen",
                "body": "closes https://github.com/denoland/fresh/issues/2190\r\n\r\nMarvin, I noticed that adding the fix [here](https://github.com/denoland/fresh/blob/a8a43ff0d4ed7ae9958a09f37ce8dadf219f76e1/www/components/Header.tsx#L41) did not resolve the issue. I see the docs say `Partials are enabled by adding a f-client-nav attribute to an HTML element` -- is it expected that adding `f-client-nav={false}` to a component does not automatically apply it to html element children?",
                "html_url": "https://github.com/denoland/fresh/pull/2198",
                "comments": [
                    "@marvinhagemeister, this is a one-liner that fixes an issue on the docs website for small screens."
                ]
            },
            {
                "pr_number": 2228,
                "title": "fix: json import attribute error in island",
                "body": "Fixes https://github.com/denoland/fresh/issues/2214",
                "html_url": "https://github.com/denoland/fresh/pull/2228",
                "comments": []
            },
            {
                "pr_number": 2231,
                "title": "chore: change assert to with for import attributes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2231",
                "comments": []
            },
            {
                "pr_number": 2222,
                "title": "docs: fix carousel not working properly",
                "body": "Currently, the [Carousel component](https://fresh.deno.dev/components) only shows \"slide four\" without moving to other slides.\r\nThis PR will fix that issue.",
                "html_url": "https://github.com/denoland/fresh/pull/2222",
                "comments": [
                    "I'll fix the import attribute issue here https://github.com/denoland/fresh/pull/2231"
                ]
            },
            {
                "pr_number": 2227,
                "title": "feat: improve tailwind deployment flow",
                "body": "By moving folks from `twind` over to the `tailwind` plugin we have traded support questions about \"how to get twind autocompletion working?\" with \"my styles are not showing up in automatic mode\". The tailwind plugin has a hard requirement on having a build step. We have documented this at various places and have a guide on how to set everything up, but it's much better if we float those steps from Fresh itself when we detect this.\r\n\r\nWith this PR we will prepare a `.github/workflows/deploy.yml` file already where the user only needs to swap out the project name.\r\n\r\nWhen Fresh is started in production mode, the tailwind plugin is active and no snapshot files were loaded, then we print a helpful hint to the console:\r\n\r\n```sh\r\nNo pre-compiled tailwind styles found.\r\n\r\nDid you forget to run \"deno task build\" prior to starting the production server?\r\n```\r\n\r\nWhen we are running inside Deno Deploy this PR goes one step further. Since it is the first time many users might use Deno Deploy we'll also show a simple page that shows how to finish the tailwind setup. I've intentionally tried to not present this as a warning but rather as a \"finishing\" step to avoid scaring users off. It's not the prettiest page, but it's good enough for now.\r\n\r\n<img width=\"892\" alt=\"Screenshot 2024-01-09 at 23 41 27\" src=\"https://github.com/denoland/fresh/assets/1062408/9bf2a61b-5551-4d8e-bdf8-b498072f8e98\">\r\n\r\n\r\nFixes https://github.com/denoland/fresh/issues/2223\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2227",
                "comments": [
                    "There're still complex steps. And maybe it violates https://deno.com/blog/you-dont-need-a-build-step which i think is a regress.",
                    "@liigo sounds like you'd enjoy the existing `twind` plugin more than the `tailwind` plugin. As communicated in past Fresh blog posts already a build step overall is necessary to have a fast site. The main goal now is to make that as smooth as possible from a UX perspective. Long term we're hoping to enhance the Deno Deploy platform to have run the build step there, so that user's don't need to configure anything. But there is no timeline on that yet.\r\n\r\nFor folks who dislike the build step I'd recommend staying with `twind`."
                ]
            },
            {
                "pr_number": 2232,
                "title": "docs: add hints to AOT page",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2232",
                "comments": []
            },
            {
                "pr_number": 2236,
                "title": "fix: browser url not updated with form partials",
                "body": "Fixes https://github.com/denoland/fresh/issues/2173",
                "html_url": "https://github.com/denoland/fresh/pull/2236",
                "comments": []
            },
            {
                "pr_number": 2241,
                "title": "chore: bump std to 0.211.0 and loader to 0.8.3",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2241",
                "comments": [
                    "@marvinhagemeister, here's the promised PR."
                ]
            },
            {
                "pr_number": 2244,
                "title": "fix: Prevent update doc title from partial if not present",
                "body": "fixes #2243 ",
                "html_url": "https://github.com/denoland/fresh/pull/2244",
                "comments": [
                    "> Oh that's a good catch! Let's add a test case for this and then it's ready to land \ud83d\udc4d\r\n\r\nDo you have a suggestion of test file to add this or i can create a new one for this case?"
                ]
            },
            {
                "pr_number": 2245,
                "title": "docs: getting started - running locally",
                "body": "Removes description of changing the port number with the deprecated `port` property and updates  with `server.port`.\r\n\r\n![Screenshot 2024-01-12 190452](https://github.com/denoland/fresh/assets/138949169/84ac96b2-6c55-438d-8be1-22184f309a22)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2245",
                "comments": []
            },
            {
                "pr_number": 2252,
                "title": "chore: release 1.6.2",
                "body": "\ud83c\udf89 ",
                "html_url": "https://github.com/denoland/fresh/pull/2252",
                "comments": []
            }
        ],
        "1.6.1": [
            {
                "pr_number": 2118,
                "title": "fix: tailwind failing on non-existant files",
                "body": "Sometimes a middleware may respond to `*.css` and serve CSS on the fly instead of from a static css file. Our tailwind plugin still tried to serve these and failed because there is no file on disk.",
                "html_url": "https://github.com/denoland/fresh/pull/2118",
                "comments": []
            },
            {
                "pr_number": 2119,
                "title": "fix: make prompt a question to hint at user input",
                "body": "It's a bit hard to see that input is required otherwise.\r\n\r\nBefore:\r\n\r\n```txt\r\n$ deno run -A update.ts \r\nProject Directory [.] \r\n```\r\n\r\nAfter:\r\n\r\n```txt\r\n$ deno run -A update.ts \r\nWhere is the project directory? [.] \r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/2119",
                "comments": []
            },
            {
                "pr_number": 2122,
                "title": "chore: update types in tests, init, update",
                "body": "Of particular note is the change to `tests/fixture_plugin/routes/test.tsx`. Note how I do this:\r\n```diff\r\n-  async GET(_req, ctx: HandlerContext<unknown, { test: string }>) {\r\n+  async GET(_req, ctx: FreshContext<{ test: string }, unknown>) {\r\n```\r\n\r\nI find it strange and confusing that the order of the type parameters has \"changed\". This makes it impossible to do a simple search and replace, because people now have to change order as well.\r\n\r\nMost of the types have been declared as `<T, S>`, i.e. data before state:\r\n* `PageProps<T = any, S = Record<string, unknown>>`\r\n* `RouteContext<T = any, S = Record<string, unknown>>`\r\n* `Handler<T = any, State = Record<string, unknown>>`\r\n* `Handlers<T = any, State = Record<string, unknown>> `\r\n* `AsyncRoute<T = any, S = Record<string, unknown>>`\r\n* `PageComponent<T = any, S = Record<string, unknown>> `\r\n* `AsyncLayout<T = any, S = Record<string, unknown>>`\r\n\r\nAnd then `FreshContext` comes around like \r\n```\r\nexport interface FreshContext<\r\n  State = Record<string, unknown>,\r\n  // deno-lint-ignore no-explicit-any\r\n  Data = any,\r\n  NotFoundData = Data,\r\n>\r\n```\r\nand switches it all up.\r\n\r\nNot a huge issue, but just something to be aware of that others might report.",
                "html_url": "https://github.com/denoland/fresh/pull/2122",
                "comments": [
                    "Main reason for changing the order was that I want to deprecate the `Data` generics long term."
                ]
            },
            {
                "pr_number": 2124,
                "title": "fix: ensure tailwind is loaded lazily",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2124",
                "comments": []
            },
            {
                "pr_number": 2125,
                "title": "docs: Remove references to deprecated types",
                "body": "As per the [1.6 release](https://deno.com/blog/fresh-1.6#simplified-typings), and commentary by @csvn [here](https://github.com/denoland/fresh/issues/2108#issuecomment-1836625789), this PR aims to replace the references to deprecated typing in the documentation.\r\n\r\nPlease see inline commentary for parts I'm unclear on.",
                "html_url": "https://github.com/denoland/fresh/pull/2125",
                "comments": []
            },
            {
                "pr_number": 2136,
                "title": "chore: Use `satisfies` instead of `as`",
                "body": "Use `as`\r\n\r\n<img width=\"590\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/359395/c803257f-fa95-47e0-80c4-5f050790667f\">\r\n\r\nUse `satisfies`\r\n\r\n<img width=\"663\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/359395/e6913f05-e24b-4f51-b413-03c4c089f542\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/2136",
                "comments": [
                    "Cool! Please do a full text search for `as Config` and get the rest as well."
                ]
            },
            {
                "pr_number": 2132,
                "title": "Update showcase.json",
                "body": "Add pyros.sh\r\n\r\nNotice the cool powered by animation,\r\nhttps://pyros.sh/",
                "html_url": "https://github.com/denoland/fresh/pull/2132",
                "comments": []
            },
            {
                "pr_number": 2134,
                "title": "fix: use real 500 error page in dev mode",
                "body": "In #1978 it was said the \"real\" error page behind the error code frame should now be shown. But I don't think this  works correctly, as in dev-mode, the `DefaultErrorHandler` is always used over the real `_500.tsx` error page.\r\n\r\nThis solves part of #2131.",
                "html_url": "https://github.com/denoland/fresh/pull/2134",
                "comments": []
            },
            {
                "pr_number": 2133,
                "title": "fix: remove error frame HTML for non-dev mode",
                "body": "Addresses part of #2131, by removing the HTML of the code-frame when running in production/preview mode. This avoids a 404 error being rendered over the 500 page due to the `_frsh/error_overlay` returning a 404 error.",
                "html_url": "https://github.com/denoland/fresh/pull/2133",
                "comments": []
            },
            {
                "pr_number": 2137,
                "title": "docs: add note for aria + data with Tailwind CSS",
                "body": "Fixes https://github.com/denoland/fresh/issues/2123",
                "html_url": "https://github.com/denoland/fresh/pull/2137",
                "comments": []
            },
            {
                "pr_number": 2139,
                "title": "fix: PluginRoute supports AsyncRoute and AsyncLayout",
                "body": "closes https://github.com/denoland/fresh/issues/2112\r\n\r\nTurned out to just be a typing issue.",
                "html_url": "https://github.com/denoland/fresh/pull/2139",
                "comments": []
            },
            {
                "pr_number": 2140,
                "title": "chore(deps): bump google-github-actions/auth from 1 to 2",
                "body": "Bumps [google-github-actions/auth](https://github.com/google-github-actions/auth) from 1 to 2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/google-github-actions/auth/releases\">google-github-actions/auth's releases</a>.</em></p>\n<blockquote>\n<h2>v2</h2>\n<p>Floating v2 alias</p>\n<h2>v2.0.0</h2>\n<p><strong>\u26a0\ufe0f This version requires Node 20 or later on the runner!</strong> If you are using GitHub-managed runners, no action is needed. If you are using self-hosted runners, make sure the system version of Node is version 20 or higher.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Add support for Direct Workload Identity auth by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/348\">google-github-actions/auth#348</a></li>\n<li>Add protection for release branches by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/351\">google-github-actions/auth#351</a></li>\n<li>Make auth universe-aware by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/352\">google-github-actions/auth#352</a></li>\n<li>Fix some examples to include project_id by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/353\">google-github-actions/auth#353</a></li>\n<li>Release: v2.0.0 by <a href=\"https://github.com/google-github-actions-bot\"><code>@\u200bgoogle-github-actions-bot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/355\">google-github-actions/auth#355</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/google-github-actions/auth/compare/v1...v2.0.0\">https://github.com/google-github-actions/auth/compare/v1...v2.0.0</a></p>\n<h2>v1.3.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Revert back to Node 16 for v1 series by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/356\">google-github-actions/auth#356</a></li>\n<li>Release: v1.3.0 by <a href=\"https://github.com/google-github-actions-bot\"><code>@\u200bgoogle-github-actions-bot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/357\">google-github-actions/auth#357</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/google-github-actions/auth/compare/v1...v1.3.0\">https://github.com/google-github-actions/auth/compare/v1...v1.3.0</a></p>\n<h2>v1.2.0</h2>\n<p><del><strong>\u26a0\ufe0f This version requires Node 20 or later on the runner!</strong> If you are using GitHub-managed runners, no action is needed. If you are using self-hosted runners, make sure the system version of Node is version 20 or higher.</del> Reverted based on community feedback.</p>\n<h2>What's Changed</h2>\n<ul>\n<li>Update deps by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/312\">google-github-actions/auth#312</a></li>\n<li>dependabot: only do security updates by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/320\">google-github-actions/auth#320</a></li>\n<li>update all deps by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/321\">google-github-actions/auth#321</a></li>\n<li>Update README.md by <a href=\"https://github.com/mattseymour\"><code>@\u200bmattseymour</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/332\">google-github-actions/auth#332</a></li>\n<li><del>Update deps to Node 20 by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/339\">google-github-actions/auth#339</a></del> Reverted based on community feedback.</li>\n<li>Drop chai and mocha deps by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/342\">google-github-actions/auth#342</a></li>\n<li>Switch to more resilient testing by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/343\">google-github-actions/auth#343</a></li>\n<li>Build latest versions by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/345\">google-github-actions/auth#345</a></li>\n<li>Release: v1.2.0 by <a href=\"https://github.com/google-github-actions-bot\"><code>@\u200bgoogle-github-actions-bot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/346\">google-github-actions/auth#346</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/mattseymour\"><code>@\u200bmattseymour</code></a> made their first contribution in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/332\">google-github-actions/auth#332</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/google-github-actions/auth/compare/v1...v1.2.0\">https://github.com/google-github-actions/auth/compare/v1...v1.2.0</a></p>\n<h2>v1.1.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add support info by <a href=\"https://github.com/sethvargo\"><code>@\u200bsethvargo</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/303\">google-github-actions/auth#303</a></li>\n<li>chore: update dependencies (automated) by <a href=\"https://github.com/verbanicm\"><code>@\u200bverbanicm</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/305\">google-github-actions/auth#305</a></li>\n<li>Release: v1.1.1 by <a href=\"https://github.com/google-github-actions-bot\"><code>@\u200bgoogle-github-actions-bot</code></a> in <a href=\"https://redirect.github.com/google-github-actions/auth/pull/306\">google-github-actions/auth#306</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/google-github-actions/auth/commit/67e9c72af6e0492df856527b474995862b7b6591\"><code>67e9c72</code></a> Release: v2.0.0 (<a href=\"https://redirect.github.com/google-github-actions/auth/issues/355\">#355</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/auth/commit/0a2edc185b2c194b4f6bcebc7a8f52ebce97cd91\"><code>0a2edc1</code></a> Fix some examples to include project_id (<a href=\"https://redirect.github.com/google-github-actions/auth/issues/353\">#353</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/auth/commit/7c4e01fd00c7c375f15da17994e763cacccb5455\"><code>7c4e01f</code></a> Make auth universe-aware (<a href=\"https://redirect.github.com/google-github-actions/auth/issues/352\">#352</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/auth/commit/097d292c0489acc46bc647faf5e577f74499385a\"><code>097d292</code></a> Add protection for release branches (<a href=\"https://redirect.github.com/google-github-actions/auth/issues/351\">#351</a>)</li>\n<li><a href=\"https://github.com/google-github-actions/auth/commit/fe9207673e64b5a2732f0016b5bbc56de30d1d69\"><code>fe92076</code></a> Add support for Direct Workload Identity auth (<a href=\"https://redirect.github.com/google-github-actions/auth/issues/348\">#348</a>)</li>\n<li>See full diff in <a href=\"https://github.com/google-github-actions/auth/compare/v1...v2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=google-github-actions/auth&package-manager=github_actions&previous-version=1&new-version=2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
                "html_url": "https://github.com/denoland/fresh/pull/2140",
                "comments": []
            },
            {
                "pr_number": 2141,
                "title": "fix: Unknown at rule @apply css(unknownAtRules)",
                "body": "see https://github.com/tailwindlabs/tailwindcss/discussions/5258#discussioncomment-1979394",
                "html_url": "https://github.com/denoland/fresh/pull/2141",
                "comments": []
            },
            {
                "pr_number": 2142,
                "title": "fix: route pattern parsing",
                "body": "Fixes https://github.com/denoland/fresh/issues/2116",
                "html_url": "https://github.com/denoland/fresh/pull/2142",
                "comments": []
            },
            {
                "pr_number": 2138,
                "title": "fix: tailwind now respects basepath",
                "body": "closes #2130\r\n\r\nThere are two issues here:\r\n* The tailwind plugin wasn't _removing_ basepath when necessary. The original `const filePath = path.join(staticDir, pathname);` was causing it to look for a static directory like `path-to-server/basepath/static` which doesn't actually exist. So we need to change it to `const filePath = path.join(staticDir, pathname.replace(ctx.config.basePath, \"\"));` to get it to look at the correct place on the filesystem.\r\n* Routing wasn't composing middlewares for 404 routes. The issue was what we were passing to `selectSharedRoutes`. Now it adds the basepath when necessary.\r\n\r\nThere's a strange testing issue here. I have five new tests, but two are of interest:\r\n* Deno.test(\"middleware test\",\r\n* Deno.test(\"TailwindCSS - dev mode\"\r\n\r\nWhen the middleware test runs before the dev mode test, then the dev mode test fails with the following error:\r\n```\r\nwarn - No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.\r\nwarn - https://tailwindcss.com/docs/content-configuration\r\n```\r\nI couldn't figure out what was going on, because both tests pass when run individually. I just reordered the tests and that seemed to cause the suite to pass. A bit hacky, but whatever.",
                "html_url": "https://github.com/denoland/fresh/pull/2138",
                "comments": []
            },
            {
                "pr_number": 1422,
                "title": "feat(init): task to generate manifest file",
                "body": "closes https://github.com/denoland/fresh/issues/384\r\nsupersedes https://github.com/denoland/fresh/pull/908\r\n\r\nI think this is the last of the PRs where I'm refreshing an old PR and closing an existing issue! Here I've taken (in my opinion) a slightly cleaner approach than 908. I'm just exporting a new function.\r\n\r\nThat's not terribly useful on its own, so I've wrapped it in a small CLI to be easily invokable. Now users can do `deno task manifest` to regenerate their manifest file.\r\n\r\nThis approach could be expanded to something like `deno task doctor` to do a bunch of static analysis checks on the health of the user's project, but that's for a separate discussion.\r\n\r\nOpening as a draft, since I suspect the command needs to be modified to account for windows machines, and I guess the CI will fail there.",
                "html_url": "https://github.com/denoland/fresh/pull/1422",
                "comments": [
                    "This still does the same thing as before, but in a slightly better approach. I'm not convinced this is absolutely necessary, but I still think it would be interesting to consider what other sort of tasks could fit into this pattern. As mentioned, a `deno task doctor` to launch the health checks would be nice.\r\n\r\nRegardless, if you're not interested in this, please just close this PR along with #384 and #908.",
                    "@marvinhagemeister, do you know if there are talks to have the task runner respect import maps? It would of course be more direct to have:\r\n```\r\nmanifest: \"deno task $fresh/src/dev/cli.ts manifest $(pwd)\",\r\n```",
                    "I'm not aware of anything in that direction."
                ]
            },
            {
                "pr_number": 2145,
                "title": "fix: tailwind build not creating subfolders",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/2145",
                "comments": []
            },
            {
                "pr_number": 2146,
                "title": "fix: route param fallback not empty string",
                "body": "The `URLPattern` class always falls back to an empty string for optional groups, but regexes use `undefined`. This PR aligns the behaviour with `URLPattern`",
                "html_url": "https://github.com/denoland/fresh/pull/2146",
                "comments": []
            },
            {
                "pr_number": 2148,
                "title": "fix: revert marking ctx.data as deprecated",
                "body": "Fixes https://github.com/denoland/fresh/issues/2127",
                "html_url": "https://github.com/denoland/fresh/pull/2148",
                "comments": []
            },
            {
                "pr_number": 2151,
                "title": "fix: switch back to URLPattern for correctness",
                "body": "Whilst our regex variant is much faster it was lacking support for many valid patterns. Adding support for these is certainly doable but would take a while, so I've decided to revert that change for now in the name of correctness.",
                "html_url": "https://github.com/denoland/fresh/pull/2151",
                "comments": []
            },
            {
                "pr_number": 2152,
                "title": "fix: tailwind bg-clip-text not working",
                "body": "Fixes https://github.com/denoland/fresh/issues/2150",
                "html_url": "https://github.com/denoland/fresh/pull/2152",
                "comments": []
            },
            {
                "pr_number": 2107,
                "title": "docs. Merge data fetching pages (#1974)",
                "body": "Attempts to clear up the confusion highlighted in #1974 by introducing async routes as an optional shortcut to async handlers combined with a route.\r\n\r\nNote that I also re-wrote the first data fetching example to invoke `ctx.renderNotFound` rather than a `Reponse`. I think this is more realistic since it would be unusual to return a raw response in one case and an actual page in another, and it fits better with the async route example (which returns an actual page).\r\n\r\nThis also deletes an entire page from Getting Started (see #1632).\r\n\r\nCloses #1974 ",
                "html_url": "https://github.com/denoland/fresh/pull/2107",
                "comments": []
            },
            {
                "pr_number": 2154,
                "title": "fix: ensure previous ws connection is closed in dev",
                "body": "This PR updates the dev WS connection in that it ensures that the previous connection is closed before attempting to create a new one. We'll now automatically disconnect and reconnect when a tab becomes invisible and becomes visible again.",
                "html_url": "https://github.com/denoland/fresh/pull/2154",
                "comments": []
            },
            {
                "pr_number": 2155,
                "title": "fix: init app use same width numbers",
                "body": "This fixes buttons jumping a little around when the number in the counter changes.",
                "html_url": "https://github.com/denoland/fresh/pull/2155",
                "comments": []
            },
            {
                "pr_number": 2156,
                "title": "fix: don't fallthrough static files in dev",
                "body": "In dev mode we should not fallthrough to serve static files from `/_fresh/static`.",
                "html_url": "https://github.com/denoland/fresh/pull/2156",
                "comments": []
            },
            {
                "pr_number": 2158,
                "title": "chore: release 1.6.1",
                "body": ":tada:",
                "html_url": "https://github.com/denoland/fresh/pull/2158",
                "comments": []
            }
        ],
        "1.6.0": [],
        "create": [],
        "1.5.4": [
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            }
        ],
        "1.5.3": [
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            },
            {
                "pr_number": 2021,
                "title": "1.5 release branch",
                "body": "Contains cherry-picked fixes from `main` for patch releases on the 1.5.x line.",
                "html_url": "https://github.com/denoland/fresh/pull/2021",
                "comments": []
            }
        ],
        "1.5.2": [
            {
                "pr_number": 1914,
                "title": "chore: remove `--unstable` from tests",
                "body": "Fixes https://github.com/denoland/fresh/issues/1913",
                "html_url": "https://github.com/denoland/fresh/pull/1914",
                "comments": []
            },
            {
                "pr_number": 1915,
                "title": "fix: make active + ancestor links accessible",
                "body": "Fixes https://github.com/denoland/fresh/issues/1907",
                "html_url": "https://github.com/denoland/fresh/pull/1915",
                "comments": []
            },
            {
                "pr_number": 1922,
                "title": "fix: island marker parsed as key marker",
                "body": "Fresh `1.5.0` introduced a new `<!--frsh-key:whatever -->` marker. The detection logic was wrong, because it would confuse `<!--frsh-keyexplorer:default:0 -->` as being a key marker. This PR fixes the detection logic.\r\n\r\nFixes https://github.com/denoland/fresh/issues/1921",
                "html_url": "https://github.com/denoland/fresh/pull/1922",
                "comments": []
            },
            {
                "pr_number": 1908,
                "title": "[Docs] Enhanced CSR Layout",
                "body": "With Fresh 1.5, the Client Side Routing should allow for a more smooth experience when browsing the Fresh docs where the scroll position of the sidebar is maintained",
                "html_url": "https://github.com/denoland/fresh/pull/1908",
                "comments": [
                    "Nice this is shaping up nicely!\r\n\r\nFound two minor issues:\r\n\r\n1. The header color has changed on the main site:\r\n\r\n<img width=\"1118\" alt=\"Screenshot 2023-10-11 at 15 17 31\" src=\"https://github.com/denoland/fresh/assets/1062408/1a5733c0-0d2d-44bc-b479-e942d6beed33\">\r\n\r\n2. The header behaves a bit strange when scrolling to the edge of a page. I think that's because it's positioned as `sticky`. We should probably go with `fixed` instead and give the main content area some padding\r\n\r\nhttps://github.com/denoland/fresh/assets/1062408/cae9f8a4-f1c1-4553-a195-a1c086aaa238\r\n\r\n",
                    "Note to self, befor merging this:\r\n\r\n- [ ] Check home page on desktop\r\n- [ ] Check home page on mobile\r\n- [ ] Check docs page on desktop\r\n- [ ] Check docs page on mobile\r\n- [ ] Check scroll behaviour on home + docs page\r\n- [ ] Click through a few sites to check if something has changed unintentionally\r\n",
                    "Alright, I think I've cleared these cases. I didn't pay attention to the header being used in other areas initially.",
                    "I ended up removing the stickiness of the navigation, because it's actually nicer to have have more room for the content. The existing site also doesn't have sticky top nav.",
                    "I also changed the mobile nav for more consistent design:\r\n\r\n<img width=\"286\" alt=\"Screenshot 2023-10-11 at 16 22 20\" src=\"https://github.com/denoland/fresh/assets/74932975/844cbb81-fa88-45be-a1b0-fa4f6c2bde7c\">\r\n<img width=\"296\" alt=\"Screenshot 2023-10-11 at 16 22 07\" src=\"https://github.com/denoland/fresh/assets/74932975/02396abb-e9dc-431a-8ced-7cc096a87c1b\">\r\n",
                    "Made a few more changes, to polish the sidebar aesthetics a bit, and i think it's ready to go:\r\n- Sidebar has full screen height\r\n- Mobile sidebar is remove if the window is made larger while it's visible.\r\n- Fresh logo is sticky in sidebar - nothing else is.\r\n\r\n\r\n\r\n<img width=\"1270\" alt=\"Screenshot 2023-10-11 at 17 12 15\" src=\"https://github.com/denoland/fresh/assets/74932975/a95c734b-fd99-4d84-8ae6-4c2380375aae\">\r\n\r\n\r\n<img width=\"334\" alt=\"Screenshot 2023-10-11 at 17 12 21\" src=\"https://github.com/denoland/fresh/assets/74932975/57d827f9-f90c-441e-baab-80fd638012df\">\r\n\r\n",
                    "I managed to align \"showcase, components\" etc. with the other pages.",
                    "This is shaping up to be really cool! I like the small border above the sidebar. That's a great idea and a nice touch \ud83d\udc4d \r\n\r\nSomething looks off with the sidebar in mobile mode:\r\n\r\n<img width=\"583\" alt=\"Screenshot 2023-10-12 at 13 50 17\" src=\"https://github.com/denoland/fresh/assets/1062408/f5b650e6-6fbe-4542-9351-d7e4dc9aaf5d\">\r\n\r\n\r\nThe alignment of the search box and the page content seems to have diverged a bit.\r\n\r\n<img width=\"845\" alt=\"Screenshot 2023-10-12 at 13 50 39\" src=\"https://github.com/denoland/fresh/assets/1062408/04d6ac00-556c-4d0a-808f-32b83a5e4528\">\r\n\r\n\r\n",
                    "Good catch - I've addressed these two issues.\r\n\r\nI got the inspiration to make the sidebar like that from https://unocss.dev/integrations/cli\r\n\r\n<img width=\"1038\" alt=\"Screenshot 2023-10-12 at 14 08 09\" src=\"https://github.com/denoland/fresh/assets/74932975/4e0f9729-0c7b-4b19-9954-bd70866a51d4\">\r\n<img width=\"496\" alt=\"Screenshot 2023-10-12 at 14 07 58\" src=\"https://github.com/denoland/fresh/assets/74932975/114abdd1-5043-436e-8b28-d228f54d05aa\">\r\n"
                ]
            },
            {
                "pr_number": 1926,
                "title": "Optimizing Performance: Leveraging Parallel Execution with `Promise.all` \u2708",
                "body": "Ref-: https://github.com/denoland/fresh/pull/1831\r\n\r\n> Hi, this pull request introduces a minor performance boost by running a specific function in parallel using `Promise.all`, which utilizes hardware resources and improves performance.\r\n\r\nExtremely sorry if I made any mistakes :(",
                "html_url": "https://github.com/denoland/fresh/pull/1926",
                "comments": [
                    "> Thanks!\r\n\r\n\ud83d\ude4c\ud83c\udffd \ud83c\udf1f "
                ]
            },
            {
                "pr_number": 1927,
                "title": "fix: ctx.render headers not working",
                "body": "Fixes https://github.com/denoland/fresh/issues/1924",
                "html_url": "https://github.com/denoland/fresh/pull/1927",
                "comments": []
            },
            {
                "pr_number": 1929,
                "title": "docs: update partials file path",
                "body": "See https://github.com/denoland/fresh/issues/1928",
                "html_url": "https://github.com/denoland/fresh/pull/1929",
                "comments": []
            },
            {
                "pr_number": 1932,
                "title": "fix: speedup slow matching of static routes",
                "body": "This PR speeds up matching static file routes. Previously, each static file route would get their own `URLPattern` instance which is slow and we loose the fact that we could do an exact match by doing so.\r\n\r\nWhat this PR does is extend the type of a route pattern to be `URLPattern | string`. When it's a string than we treat it as being an exact match and sidestep the whole cost of doing a URL parse + regex match. Note that only we ourselves can create string-based patterns. User supplied patterns are always parsed into `URLPattern` like before.\r\n\r\nThanks to @jviide for the idea of adding caching for static routes \ud83d\udc4d \r\n\r\nIn some real world sites I've tested this fix with this reduces route matching cost from `62ms` -> `0.7ms`\r\n\r\nFixes https://github.com/denoland/fresh/issues/1931",
                "html_url": "https://github.com/denoland/fresh/pull/1932",
                "comments": []
            },
            {
                "pr_number": 1940,
                "title": "fix: unable to opt out of nested client nav",
                "body": "This fixes the following scenario:\r\n\r\n```tsx\r\n<div f-client-nav={true}>\r\n  <div f-client-nav={false}>\r\n    <a href=\"...\">...</a>\r\n  </div>\r\n</div>\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1940",
                "comments": []
            },
            {
                "pr_number": 1939,
                "title": "docs: inline gfm-css",
                "body": "This allows us to get rid of `katax` which is pulled in as a dependency in `gfm`.",
                "html_url": "https://github.com/denoland/fresh/pull/1939",
                "comments": []
            },
            {
                "pr_number": 1941,
                "title": "docs: fix header nav",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1941",
                "comments": []
            },
            {
                "pr_number": 1942,
                "title": "chore: remove ServerContext from start server",
                "body": "just a minor refactoring.",
                "html_url": "https://github.com/denoland/fresh/pull/1942",
                "comments": []
            },
            {
                "pr_number": 1943,
                "title": "fix: switch to websockets for development server <-> client communication",
                "body": "This should address an issue where Firefox would drop the connection to `/alive` after a while. Makes the Network panel in DevTools less noisy too. This is needed for future HMR explorations as well.\r\n\r\nFixes https://github.com/denoland/fresh/issues/1765",
                "html_url": "https://github.com/denoland/fresh/pull/1943",
                "comments": []
            },
            {
                "pr_number": 1933,
                "title": "fix: add error-handler type to manifest",
                "body": "Adds the type `ErrorHandler` as possible value for each `handler` export for modules in `Manifest`. Also removes `ErrorHandler` from `config`, as it looks like the type existed there by mistake. I ran the `ok` task, but everything passed anyway.\r\n\r\nThe updated fixture works as a test that the `Manifest` type is correct. Though I don't think there are any unit tests that uses `_500.tsx` with a handler though, so let me know if you want me to add that before merging this.\r\n\r\nI can remove the `install-puppeteer` Deno task if it's something you don't want. The [contribution docs](https://deno.com/manual/references/contributing#submitting-a-pr-to-fresh) linked to this install script, but as a windows user I found it easiest to run the command with environment variables by using it from a Deno task.\r\n\r\nFixes #1753",
                "html_url": "https://github.com/denoland/fresh/pull/1933",
                "comments": []
            },
            {
                "pr_number": 1944,
                "title": "fix: dev client script being loaded twice",
                "body": "Follow up to https://github.com/denoland/fresh/pull/1943",
                "html_url": "https://github.com/denoland/fresh/pull/1944",
                "comments": []
            },
            {
                "pr_number": 1945,
                "title": "chore: release 1.5.2",
                "body": ":tada:",
                "html_url": "https://github.com/denoland/fresh/pull/1945",
                "comments": []
            }
        ],
        "1.5.1": [
            {
                "pr_number": 1900,
                "title": "www: update header",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1900",
                "comments": []
            },
            {
                "pr_number": 1902,
                "title": "refactor: use `manifest` variable name",
                "body": "Previously, the `routes` variable name was used. This change makes more sense as the variable has the `Manifest` type.",
                "html_url": "https://github.com/denoland/fresh/pull/1902",
                "comments": []
            },
            {
                "pr_number": 1901,
                "title": "fix: flaky `doesn't leak data across renderers` test",
                "body": "Using `createHandler()` is simpler than starting a server and fetching a page. `createHandler()` avoids unnecessary network requests, which can be flaky when you only need to analyse parts of the returned request. I think we should push for more use of  `createHandler()` and only start a server as a last resort.\r\n\r\nThis closes #1896, or rather the particular test mentioned there, but other tests involving TCP connections can still occur. Again, their remedy is to use `createHandler()` instead of starting a server.",
                "html_url": "https://github.com/denoland/fresh/pull/1901",
                "comments": []
            },
            {
                "pr_number": 1904,
                "title": "fix: docs header nav not working",
                "body": "Looks like I put the `f-client-nav` attribute on the wrong element \ud83d\udc40 ",
                "html_url": "https://github.com/denoland/fresh/pull/1904",
                "comments": []
            },
            {
                "pr_number": 1903,
                "title": "refactor: replace references of options with config",
                "body": "Previously, there were repeated inconsistencies in the codebase regarding whether Fresh's settings object was named `options` or `config`. @marvinhagemeister and I have agreed to fix these inconsistencies and name everything `config`. This way, everything is clear. Along with public API deprecations, where appropriate, this change replaces the name and use of:\r\n* `options` and `opts` variables with `config`\r\n* `*Options` types/interfaces with `*Config`\r\n* `options.ts` files with `fresh.config.ts`",
                "html_url": "https://github.com/denoland/fresh/pull/1903",
                "comments": []
            },
            {
                "pr_number": 1905,
                "title": "docs: partials update formatting",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1905",
                "comments": []
            },
            {
                "pr_number": 1876,
                "title": "showcase: Add Text2Audio",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1876",
                "comments": [
                    "> LGMT, looks like merging another showcase is causing a merge conflict. Can you update the changes against latest `main`?\r\n\r\nyes, I've resolved the conflicts \ud83d\ude05"
                ]
            },
            {
                "pr_number": 1906,
                "title": "fix: don't scroll on fragment links in partials",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1906",
                "comments": []
            },
            {
                "pr_number": 1910,
                "title": "fix: Remove deno_kv_auth plugin",
                "body": "After a bit of internal review, we deemed that it is better if the the KV auth plugin is developed independently from Fresh. It's too early for it to be treated as an official plugin just yet.",
                "html_url": "https://github.com/denoland/fresh/pull/1910",
                "comments": [
                    "Should the [blog](https://deno.com/blog/fresh-1.5) be modified to not include the `Deno KV OAuth` highlight? "
                ]
            },
            {
                "pr_number": 1911,
                "title": "chore: release 1.5.1",
                "body": "\ud83c\udf89 ",
                "html_url": "https://github.com/denoland/fresh/pull/1911",
                "comments": []
            }
        ],
        "1.5.0": [
            {
                "pr_number": 1749,
                "title": "chore: trace ops during CI testing",
                "body": "Hopefully this will give us more insight for #1716 .",
                "html_url": "https://github.com/denoland/fresh/pull/1749",
                "comments": []
            },
            {
                "pr_number": 1706,
                "title": "feat: add support for optional dynamic route params",
                "body": "tackles #1690.\r\n\r\nthis pr is a first attempt to support optional dynamic routes.  \r\nthe file name convention is inspired by [sveltekit](https://kit.svelte.dev/docs/advanced-routing)'s established convention.\r\n\r\nthe feature can be tested in the primary fixture by running:\r\n```\r\ndeno task fixture\r\n```\r\n\r\nonce started, navigate to `/i18n/lang` and `/i18n/:lang/lang`.",
                "html_url": "https://github.com/denoland/fresh/pull/1706",
                "comments": [
                    "would add some documentation once we've settled on the general approach.",
                    "would it make sense to refactor `www`'s `docs/[...slug].tsx` to make use of the new concept?\r\nor would you prefer to have this tackled in another pr?",
                    "> would it make sense to refactor www's docs/[...slug].tsx to make use of the new concept?\r\nor would you prefer to have this tackled in another pr?\r\n\r\nLet's tackle that in another PR"
                ]
            },
            {
                "pr_number": 1758,
                "title": "www: remove extra whitespace in class",
                "body": "Header of Fresh Components(https://fresh.deno.dev/components#Header) have extra whitespace in class.\r\nThis PR removes that whitespace and improves the usability of the component.",
                "html_url": "https://github.com/denoland/fresh/pull/1758",
                "comments": []
            },
            {
                "pr_number": 1757,
                "title": "docs: remove unneeded `Counter` import from Head page",
                "body": "The `Counter` import isn't used in the example and likely copypasta?",
                "html_url": "https://github.com/denoland/fresh/pull/1757",
                "comments": []
            },
            {
                "pr_number": 1762,
                "title": "updated showcase url",
                "body": "I have updated the url, because the domain registration is too expensive for a side project.",
                "html_url": "https://github.com/denoland/fresh/pull/1762",
                "comments": []
            },
            {
                "pr_number": 1744,
                "title": "chore: Refactor CLI tests",
                "body": "As discussed in [here](https://github.com/denoland/fresh/pull/1696#issuecomment-1706347305), this PR:\r\n- Splits up the CLI tests making them easier to find.\r\n- Refactors the update tests to remove some of the duplication.",
                "html_url": "https://github.com/denoland/fresh/pull/1744",
                "comments": [
                    "Looks like there is a remaining CI failure on windows.",
                    "@marvinhagemeister Should be fixed but I can't confirm as I am on Mac. Windows gave a different error message than Mac and Linux for files not found. I removed the argument so the error message is not checked anymore.",
                    "@smitssjors, could you please resolve the merge conflict?"
                ]
            },
            {
                "pr_number": 1039,
                "title": "feat(dev): Ignore common test files in routes and islands",
                "body": "In some cases developers might want to put test files right next to their code, like `...something.something.test.tsx`. For such cases this PR would allow to provide a pattern for files to skip when walking the routes and or islands folders on dev bootup.\r\n\r\nExample use:\r\n```ts\r\nimport dev from \"$fresh/dev.ts\";\r\n\r\nawait dev(import.meta.url, \"./main.ts\", {\r\n  router: {\r\n    ignoreFilePattern: /[\\.|_]cy[\\.|_][t|j]s(x)?$/\r\n  }\r\n});\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1039",
                "comments": [
                    "is there any usecase for specifying anything besides tests?",
                    "@crowlKats I believe test files would be the only usecase. It's something someone asked about in Discord[0].\r\n\r\n[0] https://discord.com/channels/684898665143206084/991511118524715139/1076945536596328539",
                    "If test files are the only usecase, then i think it would make sense for fresh to ignore test files.",
                    "@crowlKats Thank you for taking a look at this PR. It's now updated to skip the test files by default.",
                    "Hi,\r\nit would be great to make regex customizable. Having default regex, like the one you did. But having a way to override it. \r\nMaybe something like this :\r\n\r\n```typescript\r\n// main.ts\r\n// default case, testFilesRegex = \"/[\\.|_]test\\.[t|j]s(x)?$/\"\r\nawait start(manifest);\r\n// override case\r\nawait start(manifest, { testFilesRegex: '.spec.ts$' });\r\n```\r\n\r\nJust an idea. What do you think ?",
                    "@crowlKats @lucacasonato Is there anything I should still do to this PR to get it mergeable? \r\n\r\nI can, if it's wanted added a way for overriding or extending the patterns for ignoring files, as suggested by @severindupouy.",
                    "What does a dev do if they have a route with the word `test` in the name? I can imagine a very confused dev in the future wondering why their route is not being generated.\r\n\r\nI suggest adding a `skip: RegExp` (or similar-named) property to `StartOptions`. By default, the value of this property would be the one currently implemented, accompanied by a small comment above explaining the pattern. This also allows the dev to change this behaviour to suit their scenario.\r\n\r\nWhat do you guys think? Either way, the documentation should briefly mention the decided-upon functionality.",
                    "@bastilian, would you be able to resolve the merge conflicts and rebase? It'd be great to get this one landed. It'd be a big win for testing by allowing testing files to live right next to their implementation counterparts.",
                    "+1 I think this is a great feature to have",
                    "I finally had a chance to get back to this. The PR is now rebased and the conflicts are resolved, @iuioiua.\r\n\r\nIt now has also (added back) the ability to configure the pattern (see PR descriptions).",
                    "Thank you @iuioiua for reviewing! I updated the text for the config option. I also realised that while I added a fixture for the custom pattern it wasn't used in a test, there is one now for that too. ",
                    "Hm, I'm not 100% sure why the assertion on windows fails, I'd suspect that it's something with windows using `/`... I'll try to see if I can reproduce it on one of my windows machines and fix the issue. ",
                    "How about trying something like `globToRegExp(\"{*_,*.,}test.{ts, tsx, mts, js, mjs, jsx}\")`?\r\n\r\nReferences:\r\n* https://deno.land/std@0.201.0/path/mod.ts?s=globToRegExp\r\n* https://deno.land/manual@v1.36.4/basics/testing#running-tests",
                    "@iuioiua Thank you! I did try `globToRegExp`, but the Regex it produces is anchored at the start. I did however use the resulting Regex and removed the start anchor to match files. "
                ]
            },
            {
                "pr_number": 1768,
                "title": "Fix build path",
                "body": "The `snapshotDirPath` path in the current version is different from the one used in `deno task build`.\r\n\r\nUnder normal circumstances, there is no problem, but if you move `dev.ts` to the `src/` directory, a bug will occur.",
                "html_url": "https://github.com/denoland/fresh/pull/1768",
                "comments": [
                    "> Good catch, let's add a test case for that to ensure that it works.\r\n\r\nI added a test case based on `build_test`. Do you think it's okay?\r\n"
                ]
            },
            {
                "pr_number": 1764,
                "title": "fix dev_command.ts",
                "body": "The `if` shown in the following URL will always be true.\r\nhttps://github.com/chibat/fresh/blob/02a3cb4dc3f7e71ae32877e46f281e6c82100a14/src/dev/dev_command.ts#L58\r\n\r\nTherefore, the line shown by the following URL will never be executed.\r\nhttps://github.com/chibat/fresh/blob/02a3cb4dc3f7e71ae32877e46f281e6c82100a14/src/dev/dev_command.ts#L64\r\n\r\nI have fixed the code to what I believe is expected.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1764",
                "comments": [
                    "I have added a test.\r\nCould you please check it.",
                    "I took the liberty to update the tests. They were passing even without the changes in this PR."
                ]
            },
            {
                "pr_number": 1747,
                "title": "Add `NotFoundData` generic to `HandlerContext`",
                "body": "The type of data passed to `renderNotFound()` may need to be different to the type of data passed to `render()`.\r\n\r\n`NotFoundData` defaults to `Data`, so this should not affect any existing usages of `HandlerContext`.",
                "html_url": "https://github.com/denoland/fresh/pull/1747",
                "comments": [
                    "Rebased - the CI failure sounds like it might be related to one of your fixes in 1.4.3 @marvinhagemeister ",
                    "@marvinhagemeister would you mind taking a look at this please?",
                    "> LGTM, thanks for adding this \ud83d\udc4d Apologies for the missing the earlier ping.\r\n\r\nThanks!",
                    "Hi @marvinhagemeister it looks like this extra generic for the `renderNotFound` parameter got lost some time after this was merged. Was it causing a problem?",
                    "@adamgreg err... not intentionally. Looks like I broke something."
                ]
            },
            {
                "pr_number": 1772,
                "title": "feat: add nonce for inline scripts",
                "body": "This PR changes our content security handling so that we'll automatically add a `nonce` attribute when we render an inline script tag. This will make it easier to integrate Google Tag Manager and things like that.",
                "html_url": "https://github.com/denoland/fresh/pull/1772",
                "comments": []
            },
            {
                "pr_number": 1771,
                "title": "Add crawford.ml site",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1771",
                "comments": [
                    "Hi @marvinhagemeister It failed linux tests, is that ok? "
                ]
            },
            {
                "pr_number": 1777,
                "title": "chore: fix wait for child process shutdown",
                "body": "@lucacasonato discovered this in a debugging session earlier today.\r\n\r\nrelated #1716",
                "html_url": "https://github.com/denoland/fresh/pull/1777",
                "comments": [
                    "Merging myself, because it's harmless."
                ]
            },
            {
                "pr_number": 1782,
                "title": "chore: fix fetch body not consumed in test",
                "body": "related #1716",
                "html_url": "https://github.com/denoland/fresh/pull/1782",
                "comments": []
            },
            {
                "pr_number": 1781,
                "title": "fix: server initialized twice in old dev mode",
                "body": "Noticed this will working on #1780 . Initializing the server twice didn't lead to any errors, but makes dev bootup time a hair split slower.",
                "html_url": "https://github.com/denoland/fresh/pull/1781",
                "comments": [
                    "Merging, because CI is flaky because of faulty ops sanitization. The core cli team is currently investigating this."
                ]
            },
            {
                "pr_number": 1786,
                "title": "tests: de-flake tests and re-enable sanitizers",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1786",
                "comments": []
            },
            {
                "pr_number": 1788,
                "title": "feat: exclude _fresh dir from everything",
                "body": "Turns out that we can set a top level `exclude` property in `deno.json` to exclude it from everything. This simplifies the configuration generated by Fresh to exclude the `_fresh` directory quite a bit.",
                "html_url": "https://github.com/denoland/fresh/pull/1788",
                "comments": [
                    "Merging myself, since it's harmless."
                ]
            },
            {
                "pr_number": 1789,
                "title": "fix: only enable dev things in dev mode",
                "body": "Although we always had `dev.ts` and `main.ts` these two modes were interleaved within each other behind the scenes. Running `main.ts` would still enable lots of dev only features such as `preact/debug`. This PR properly splits these modes up.",
                "html_url": "https://github.com/denoland/fresh/pull/1789",
                "comments": []
            },
            {
                "pr_number": 1778,
                "title": "feat: error if `useState` or `useReducer` is used outside of an island.",
                "body": "A common issue folks run into is that `useState` or `useReducer` doesn't work outside of an island. Route components are only ever on the server and those renders are not stateful. With this PR we'll throw an error when we detect such a case.\r\n\r\n```sh\r\nAn error occurred during route handling or page rendering.\r\nError: Hook \"useState\" cannot be used outside of an island component.\r\n```\r\n\r\nBased on #1789 ",
                "html_url": "https://github.com/denoland/fresh/pull/1778",
                "comments": []
            },
            {
                "pr_number": 1780,
                "title": "feat: improve default error visualization",
                "body": "Adds code frame to errors if possible:\r\n\r\n<img width=\"1095\" alt=\"Screenshot 2023-09-15 at 11 33 46\" src=\"https://github.com/denoland/fresh/assets/1062408/7f4a5378-d00f-4550-b995-37a77f96ce0c\">\r\n\r\nDefault error page in dev mode:\r\n\r\n<img width=\"937\" alt=\"Screenshot 2023-09-15 at 11 30 59\" src=\"https://github.com/denoland/fresh/assets/1062408/130172f4-beed-4d8c-b2b5-0e23be0b8f84\">\r\n\r\nDefault error page in prod mode:\r\n\r\n<img width=\"939\" alt=\"Screenshot 2023-09-15 at 11 31 23\" src=\"https://github.com/denoland/fresh/assets/1062408/4ef58b83-b5f4-45cb-bc3f-1c8c4e5b6357\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1780",
                "comments": []
            },
            {
                "pr_number": 1770,
                "title": "feat: add plugin buildStart and buildEnd hooks",
                "body": "This PR adds a `buildStart` and `buildEnd` hook to the plugin API. It runs before executing the build portion when running `dev.ts build` and after that respectively. This allows plugins for tools like `sass`, `tailwind` or others to be used directly with Fresh.",
                "html_url": "https://github.com/denoland/fresh/pull/1770",
                "comments": []
            },
            {
                "pr_number": 1791,
                "title": "chore: speed up tests",
                "body": "This PR speeds up tests by handling custom created `Requests` object directly instead of binding a socket and making a real HTTP request. For most tests this is fine, and for those that aren't the existing testing methods are all preserved.",
                "html_url": "https://github.com/denoland/fresh/pull/1791",
                "comments": []
            },
            {
                "pr_number": 1776,
                "title": "twindv1: Enable setting tailwind theme variables in Options parameter",
                "body": "currently, the v1 plugin locks the Options to BaseTheme from @twind/core\r\n\r\nthis change aims to allow other options to be passed, for example TailwindTheme from @twind/preset-tailwind\r\ndunno if this is desirable, but when i migrated my project from 0.16 to v1 i could not set `config.theme.fontFamily`\r\nThis should fix that issue.",
                "html_url": "https://github.com/denoland/fresh/pull/1776",
                "comments": []
            },
            {
                "pr_number": 1774,
                "title": "feat: first party Deno KV OAuth plugin",
                "body": "closes #1733.  \r\n\r\nmigrates the plugin from the kv oauth repository to this one.    \r\ntweaks some minor stuff to align with the other plugins.",
                "html_url": "https://github.com/denoland/fresh/pull/1774",
                "comments": []
            },
            {
                "pr_number": 1792,
                "title": "feat: Add support for mapped providers to Fresh plugin",
                "body": "This change was originally proposed in denoland/deno_kv_oauth#189 but was postponed until the plugin was moved to the `denoland/fresh` repository.\r\n\r\n### What is this change?\r\n\r\nA nice quality of life improvement that allows developers to pass in an object where each key is used to create a dynamic URL for the routes added by following this pattern: `/oauth/[PROVIDER_SLUG]/...`. This makes it simpler to add multiple OAuth2 providers.\r\n\r\n### What's been changed?\r\n\r\n - Updated Deno Fresh plugin\r\n\t - Added function override to `kvOAuthPlugin` function\r\n\t - Added new test step to account for the above\r\n\r\n### Example\r\n\r\n```ts\r\n// main.ts\r\nimport { start } from \"$fresh/server.ts\";\r\nimport { createGitHubOAuth2Client } from \"https://deno.land/x/deno_kv_oauth@$VERSION/mod.ts\";\r\nimport { kvOAuthPlugin } from \"https://deno.land/x/deno_kv_oauth@$VERSION/fresh.ts\";\r\nimport manifest from \"./fresh.gen.ts\";\r\n\r\nawait start(manifest, {\r\n  plugins: [\r\n\tkvOAuthPlugin({\r\n\t\t// Generates the following routes:\r\n\t\t// `/oauth/github/signin`\r\n\t\t// `/oauth/github/callback`\r\n\t\t// `/oauth/github/signout`\r\n\t\tgithub: createGitHubOAuth2Client(),\r\n\t}),\r\n  ],\r\n});\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1792",
                "comments": []
            },
            {
                "pr_number": 1793,
                "title": "feat: de-duplicate <Head> children by key",
                "body": "This fixes an issue when multiple `<Head>` nodes were rendered on the same page. Before this PR we'd render the `og:title` tag twice in the following example.\r\n\r\n```tsx\r\n<Head>\r\n  <meta property=\"og:title\" content=\"My page title\" />\r\n</Head>\r\n<Head>\r\n  <meta property=\"og:title\" content=\"Other title\" />\r\n</Head>\r\n```\r\n\r\nBy specifying a `key` prop, only the last one will be rendered.\r\n\r\n```tsx\r\n<Head>\r\n  <meta property=\"og:title\" content=\"My page title\" key=\"title\" />\r\n</Head>\r\n<Head>\r\n  <meta property=\"og:title\" content=\"Other title\" key=\"title\" />\r\n</Head>\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1793",
                "comments": []
            },
            {
                "pr_number": 1794,
                "title": "chore: only run KV tests if KV is available",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1794",
                "comments": []
            },
            {
                "pr_number": 1800,
                "title": "chore: Run all tests in parallel on CI",
                "body": "With the flakyness of the test suite resolved we should be able to run tests in parallel on all platforms.",
                "html_url": "https://github.com/denoland/fresh/pull/1800",
                "comments": []
            },
            {
                "pr_number": 1799,
                "title": "fix: Fix typo in hover rule for default non-twind CSS",
                "body": "In a new Fresh project, I noticed a typo in the generated file `static/styles.css`. The generated CSS file has the line `.hover:bg-gray-200:hover {`, and the hover style did not work by default. When I locally replaced that line with `.hover\\:bg-gray-200:hover {`, the hover style started to work as expected.",
                "html_url": "https://github.com/denoland/fresh/pull/1799",
                "comments": []
            },
            {
                "pr_number": 1797,
                "title": "feat: add build.outDir option",
                "body": "This initially started out as a way to address #1795, but then I noticed that this behavior was introduced in https://github.com/denoland/fresh/pull/1768 and got annoyed that all these default settings are spread throughout the codebase. This PR cleans up the default config handling and hoists all the default settings into a single function.\r\n\r\nAnd I guess as a bonus this allows users to specify the output directory themselves.\r\n\r\nFixes #1795",
                "html_url": "https://github.com/denoland/fresh/pull/1797",
                "comments": [
                    "Phew got the windows related issues sorted out after going to my windows machine."
                ]
            },
            {
                "pr_number": 1798,
                "title": "feat: add build.target option",
                "body": "This exposes `esbuild`'s target option via `build.target` in our config.\r\n\r\nFixes #43",
                "html_url": "https://github.com/denoland/fresh/pull/1798",
                "comments": []
            },
            {
                "pr_number": 1801,
                "title": "fix: plugin script error halting JS execution",
                "body": "Fixes https://github.com/denoland/fresh/issues/1038",
                "html_url": "https://github.com/denoland/fresh/pull/1801",
                "comments": []
            },
            {
                "pr_number": 1804,
                "title": "Fix default fresh config with twind to pass fmt check",
                "body": "After starting a new Fresh project with twind, `fresh.config.ts` looked liked the following, which did not pass the initial the `deno fmt --check` portion within the `deno task check` command:\r\n```\r\nimport { defineConfig } from \"$fresh/server.ts\";\r\nimport twindPlugin from \"$fresh/plugins/twind.ts\"\r\nimport twindConfig from \"./twind.config.ts\";\r\nexport default defineConfig({\r\n  plugins: [twindPlugin(twindConfig)]\r\n});\r\n```\r\n\r\nThis pull request intends to make it look like the following, primarily to fix the errors that the `deno fmt --check` command emitted (see first commit's description for the emitted errors), and secondarily to be a tad bit prettier with a newline separator:\r\n```\r\nimport { defineConfig } from \"$fresh/server.ts\";\r\nimport twindPlugin from \"$fresh/plugins/twind.ts\";\r\nimport twindConfig from \"./twind.config.ts\";\r\n\r\nexport default defineConfig({\r\n  plugins: [twindPlugin(twindConfig)],\r\n});\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1804",
                "comments": []
            },
            {
                "pr_number": 1803,
                "title": "feat: Add `InferOAuthProviders` utility type to KV OAuth plugin",
                "body": "### What is this change?\r\n\r\nThis is mainly a spitball idea that could offer a nice QoL improvement for those using TypeScript heavily, so of course open to feedback.\r\n\r\nThe basic idea is that for those using the Fresh KV OAuth plugin can move it out to a variable. That way they can pass it to the plugins array like normal, but also now use this new `InferOAuthProviders` type to get a union of strings for all the possible routes.\r\n\r\n### What's been changed?\r\n\r\n - Updated Fresh KV OAuth plugin\r\n\t - Added `const` type argument to both providers override alongside implementation signature.\r\n\t - Added new `InferOAuthProviders` utility type to infer a union of strings from a Fresh `Plugin` type.\r\n\r\n### Example\r\n\r\n```ts\r\n// main.ts\r\nimport { start } from \"$fresh/server.ts\";\r\nimport { createGitHubOAuth2Client } from \"https://deno.land/x/deno_kv_oauth@$VERSION/mod.ts\";\r\nimport { kvOAuthPlugin } from \"https://deno.land/x/deno_kv_oauth@$VERSION/fresh.ts\";\r\nimport manifest from \"./fresh.gen.ts\";\r\n\r\nconst kvOAuth = kvOAuthPlugin({\r\n\tgithub: createGitHubOAuth2Client(),\r\n});\r\n\r\nexport type KVOAuthRoutes = InferOAuthProviders<typeof kvOAuth>;\r\n//            ^? type Foo = \"/oauth/github/signin\" | \"/oauth/github/callback\" | \"/oauth/github/signout\"\r\n\r\nawait start(manifest, {\r\n\tplugins: [kvOAuth],\r\n});\r\n```\r\n\r\n```tsx\r\n// routes/index.tsx\r\nimport type { KVOAuthRoutes } from '../main.ts';\r\n\r\nconst url: KVOAuthRoutes = '/oauth/github/signin';\r\n\r\nexport default function Home () {\r\n\treturn (\r\n\t\t<a href={url}>Sign In</a>\r\n\t)\r\n}\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1803",
                "comments": []
            },
            {
                "pr_number": 1805,
                "title": "chore: make it easier to debug markers",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1805",
                "comments": []
            },
            {
                "pr_number": 1814,
                "title": "fix: code frame not showing up in dev mode",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1814",
                "comments": []
            },
            {
                "pr_number": 1808,
                "title": "refactor: simplified Deno KV OAuth plugin",
                "body": "This implementation has far fewer moving parts but still allows for the flexibility of multiple providers.",
                "html_url": "https://github.com/denoland/fresh/pull/1808",
                "comments": [
                    "Note to self: update documentation where needed."
                ]
            },
            {
                "pr_number": 1822,
                "title": "fix: conditional island children not rendered",
                "body": "We didn't take islands into account which have no owners, but might still receive server rendered children.\r\n\r\nFixes https://github.com/denoland/fresh/issues/1810",
                "html_url": "https://github.com/denoland/fresh/pull/1822",
                "comments": []
            },
            {
                "pr_number": 1823,
                "title": "fix: show marker confusion",
                "body": "Noticed myself getting confused by marker state, so I've updated the island tests to assert that they are not visible after reviving islands.",
                "html_url": "https://github.com/denoland/fresh/pull/1823",
                "comments": []
            },
            {
                "pr_number": 1821,
                "title": "feat: ask for project arg if missing on update",
                "body": "The `.` is a bit easy to miss in our update instructions. Our `init` command asks for the directory to scaffold a new project in if it's missing and we should do the same for our update script. Removed the `dim` styling of the command in the update warning too, as we got feedback that that is not readable on some terminals.\r\n\r\nDon't know how to write a test and pass user input to `prompt`.",
                "html_url": "https://github.com/denoland/fresh/pull/1821",
                "comments": []
            },
            {
                "pr_number": 1820,
                "title": "ci: run on latest stable version of Deno",
                "body": "This PR changes CI to include the latest stable version of Deno, alongside canary. This is important for picking up bugs in canary. This seems like a reasonable thing to have for overall stability.\r\n\r\nPossible prerequisite for #1819",
                "html_url": "https://github.com/denoland/fresh/pull/1820",
                "comments": []
            },
            {
                "pr_number": 1824,
                "title": "Add Partials",
                "body": "This PR adds a new concept called \"partials\" that enables spa-like client navigation as well allowing the server to only update parts of the page. The concept is inspired by htmx, with additional improvements to allow a single HTTP response to update N-partials and the ability to keep islands alive.\r\n\r\nThe work on partials has reached a state where it's far enough along the journey where it's easier to iterate on it further in `main`. I don't expect there to be many changes, other than maybe a bit of bikeshedding on attribute names or things like that.\r\n\r\nThe documentation will be updated in another PR, didn't want to make this PR any bigger. Official comms will follow as well about this feature, so please don't tweet/write about it. We'll cut a new release soon \ud83e\udd1e .\r\n\r\nThis PR might seem gigantic with >3000 additions, but about ~2500 from that are test fixtures. The amount of test fixtures is pretty high, because there are a lot of cases to cover to ensure that islands are not destroyed or that reconciliation doesn't move nodes around in an unexpected manner.\r\n\r\nFixes https://github.com/denoland/fresh/issues/1609",
                "html_url": "https://github.com/denoland/fresh/pull/1824",
                "comments": []
            },
            {
                "pr_number": 1826,
                "title": "chore: update Deno KV OAuth plugin and docs",
                "body": "These changes aim to improve the clarity and understandability of the Deno KV OAuth plugin. It also updates to use the latest version of the module.",
                "html_url": "https://github.com/denoland/fresh/pull/1826",
                "comments": []
            },
            {
                "pr_number": 1825,
                "title": "fix: only send revive() script when needed",
                "body": "Fixes a regression caused by the partials PR #1824 .",
                "html_url": "https://github.com/denoland/fresh/pull/1825",
                "comments": []
            },
            {
                "pr_number": 1829,
                "title": "chore: append newline to produced json",
                "body": "Every time ` deno run -Ar https://fresh.deno.dev/update .` is run, the `deno.json[c]` file gets a newline removed which contradicts formatting rules.",
                "html_url": "https://github.com/denoland/fresh/pull/1829",
                "comments": [
                    "Thank you very much!",
                    "This was driving me nuts. Thank you for fixing it. I started a PR to call out to Deno to do the formatting to make sure this file is always compliant with the Deno fmt rules as configured for the project.  But a squirrel walked by and then I saw this.  Do you think there's value in the Deno fmt call out instead?",
                    "@mgenereu Yeah, I think ultimately we should call `deno fmt` on the whole project after an update or init. It's fast enough that we can do that.",
                    "So much better than my simplistic approach!",
                    "> @mgenereu Yeah, I think ultimately we should call `deno fmt` on the whole project after an update or init.\r\n\r\nI didn't do it because I didn't know if the user is using `deno fmt` on their project.  I just figured `deno.json` was getting completely reserialized anyways that additional formatting from `deno fmt` was a \"best default\" until the user can decide to run their formatter or not afterward."
                ]
            },
            {
                "pr_number": 1837,
                "title": "fix: docs islands not hydrated on safari 12",
                "body": "Safari 12 is definitely a bit ancient, but supporting it isn't much effort.\r\n\r\nFixes https://github.com/denoland/fresh/issues/1834",
                "html_url": "https://github.com/denoland/fresh/pull/1837",
                "comments": [
                    "> marvinhagemeister\r\n_Safari Ios 12 is definitely a bit ancient, but supporting it isn't much effort._\r\n\r\nSorry, I cannot agree with that. We have around 5000 restaurants in the EU, with around 20 iPads in every restaurant. Of course, those iPads are not completely new. We use the latest Complex VueJs3-APP without any problems. Apps are installed in a Native app manner.\r\n\r\nThe Deno simple example doesn't work at all. I like the idea and technology of DENO.FRESH; it is the best I've seen in the last few years. And I want to have any possibility to offer this technology to my customers. The polyfill idea is good, and I hope it's enough for my goals.",
                    "Sounds like you have a unique userbase and there is nothing wrong with that. The changes in this PR address this issue and make it possible to use Fresh in these scenarios too. I'm not sure why you're not happy with that. Is there anything more you'd like us to do?",
                    "No, it all ok, i want only to mark \"Safari 12Ios is a bit ancient but still in use\"."
                ]
            },
            {
                "pr_number": 1830,
                "title": "showcase: Add Deno Artwork",
                "body": "- Added Deno Artwork to showcase. This Fresh project uses Deno KV to allow GitHub users to react to Deno-inspired artwork. (Initial artwork comes from the archived `denoland/dotland` repository.)",
                "html_url": "https://github.com/denoland/fresh/pull/1830",
                "comments": []
            },
            {
                "pr_number": 1831,
                "title": "Optimizing Performance: Leveraging Parallel Execution with `Promise.all` \u2708",
                "body": "Hi, this pull request introduces a minor performance boost by running a specific function in parallel using `Promise.all`, which utilizes hardware resources and improves performance.\r\n\r\nExtremely sorry if I made any mistakes :(",
                "html_url": "https://github.com/denoland/fresh/pull/1831",
                "comments": [
                    "> Thanks\r\n\r\n\ud83e\udef1\ud83c\udffc\u200d\ud83e\udef2\ud83c\udffe\u2728"
                ]
            },
            {
                "pr_number": 1838,
                "title": "fix: partial hash navigation causing loop",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1838",
                "comments": []
            },
            {
                "pr_number": 1840,
                "title": "feat: mark active or ancestor links",
                "body": "I've seen lots of code which manually passes around the current URL to set some sort of `active` class on the current URL. Fresh already knows about the current URL and when we render an `<a>`-tag, so this PR automatically adds `data-current` for links with an exact match or `data-ancestor` for links that partially match the current URL.\r\n\r\nNote that the links are expected to be root relative and start with `/` instead of absolute URLs.",
                "html_url": "https://github.com/denoland/fresh/pull/1840",
                "comments": []
            },
            {
                "pr_number": 1839,
                "title": "fix: `remoteAddr` hardcoded to `localhost:1234`",
                "body": "Fixes #1585.\r\n\r\nThis fix is based on the implementation of [Jabolol](https://github.com/Jabolol) which he [linked](https://github.com/Jabolol/fresh/blob/ee0d00c717e9acbad44080599696e9ea27144ead/src/server/mod.ts#L168-L181) in the issue.",
                "html_url": "https://github.com/denoland/fresh/pull/1839",
                "comments": []
            },
            {
                "pr_number": 1841,
                "title": "fix: scoped `npm:` packages not working",
                "body": "Just cut a new release for the esbuild loader which fixes an issue with scoped packages and the `npm:` specifier. See https://github.com/lucacasonato/esbuild_deno_loader/releases/tag/0.8.2",
                "html_url": "https://github.com/denoland/fresh/pull/1841",
                "comments": []
            },
            {
                "pr_number": 1844,
                "title": "Switched to use Deno formatting rules",
                "body": "Switched `update.ts` to use Deno fmt command on `deno.json` so it respects the `deno.json` `fmt` configuration.  Tested with 4 space indentation. ",
                "html_url": "https://github.com/denoland/fresh/pull/1844",
                "comments": [
                    "Builds on #1829's hard work."
                ]
            },
            {
                "pr_number": 1845,
                "title": "docs: fix anchor links",
                "body": "Replaces https://github.com/denoland/fresh/pull/1277",
                "html_url": "https://github.com/denoland/fresh/pull/1845",
                "comments": []
            },
            {
                "pr_number": 1846,
                "title": "docs: improve code blocks mobile layout",
                "body": "This was a bit tricky to debug, because the parent container has flex layout and the inner content was causing a flex blowout.",
                "html_url": "https://github.com/denoland/fresh/pull/1846",
                "comments": []
            },
            {
                "pr_number": 1847,
                "title": "fix: use consistent partial attribute naming",
                "body": "Result of an internal discussion in the team. Every fresh specific attribute starts with `f-*`",
                "html_url": "https://github.com/denoland/fresh/pull/1847",
                "comments": []
            },
            {
                "pr_number": 1849,
                "title": "fix: add more space around code frame html",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1849",
                "comments": []
            },
            {
                "pr_number": 1848,
                "title": "fix: missing Component with async app + layout",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1848",
                "comments": []
            },
            {
                "pr_number": 1851,
                "title": "chore: potential race conditions in e2e tests",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1851",
                "comments": []
            },
            {
                "pr_number": 1850,
                "title": "docs: use builtin active link detection",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1850",
                "comments": []
            },
            {
                "pr_number": 1852,
                "title": "fix: active links outside partials not updated",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1852",
                "comments": []
            },
            {
                "pr_number": 1853,
                "title": "fix: throw error when no partials found",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1853",
                "comments": []
            },
            {
                "pr_number": 1854,
                "title": "fix: docs nav not working",
                "body": "This wasn't intended to land on main",
                "html_url": "https://github.com/denoland/fresh/pull/1854",
                "comments": []
            },
            {
                "pr_number": 1855,
                "title": "docs: reload when `../src` changes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1855",
                "comments": []
            },
            {
                "pr_number": 1859,
                "title": "fix: only render keyed comments when needed",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1859",
                "comments": []
            },
            {
                "pr_number": 1860,
                "title": "feat: collect partials deeply from response",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1860",
                "comments": []
            },
            {
                "pr_number": 1858,
                "title": "feat: support scroll restoration for partials",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1858",
                "comments": []
            },
            {
                "pr_number": 1861,
                "title": "feat: only enable partials when attribute is set",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1861",
                "comments": []
            },
            {
                "pr_number": 1862,
                "title": "feat: Add types for partial attributes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1862",
                "comments": []
            },
            {
                "pr_number": 1863,
                "title": "feat: add support for partial <head> merging",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1863",
                "comments": []
            },
            {
                "pr_number": 1864,
                "title": "fix: duplicate partial head tags",
                "body": "Follow up to #1863",
                "html_url": "https://github.com/denoland/fresh/pull/1864",
                "comments": []
            },
            {
                "pr_number": 1866,
                "title": "docs: fix code snippet formatting",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1866",
                "comments": []
            },
            {
                "pr_number": 1865,
                "title": "docs: switch to partial navigation",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1865",
                "comments": []
            },
            {
                "pr_number": 1867,
                "title": "feat: support `f-partial` on buttons",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1867",
                "comments": []
            },
            {
                "pr_number": 1868,
                "title": "Expose metafile.json",
                "body": "This PR exposes ESbuild's metafile at `/_frsh/js/{build_id}/metafile.json` so we can use ESbuild's bundle analyzer https://esbuild.github.io/analyze/ to analyze our bundle sizes. \r\n\r\nA future work would be to merge and not use `snapshot.json` in favor `metafile.json` since the later contains the snapshot info. ",
                "html_url": "https://github.com/denoland/fresh/pull/1868",
                "comments": []
            },
            {
                "pr_number": 1869,
                "title": "fix: codeframe not visible with custom _500.tsx",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1869",
                "comments": []
            },
            {
                "pr_number": 1871,
                "title": "fix: init error by bare specifier import",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1871",
                "comments": []
            },
            {
                "pr_number": 1872,
                "title": "fix: remove another bare type import",
                "body": "With this I can run the init script again.",
                "html_url": "https://github.com/denoland/fresh/pull/1872",
                "comments": []
            },
            {
                "pr_number": 1875,
                "title": "fix: meta charSet -> charset",
                "body": "EDIT: Seems like something is wrong in the jsx factory types in Preact. Filed an issue here: https://github.com/preactjs/preact/issues/4154",
                "html_url": "https://github.com/denoland/fresh/pull/1875",
                "comments": []
            },
            {
                "pr_number": 1879,
                "title": "docs: add styling links example page",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1879",
                "comments": []
            },
            {
                "pr_number": 1878,
                "title": "docs: add partials documentation",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1878",
                "comments": []
            },
            {
                "pr_number": 1880,
                "title": "docs: improve admonition styles",
                "body": "Before:\r\n\r\n<img width=\"651\" alt=\"Screenshot 2023-10-06 at 22 19 58\" src=\"https://github.com/denoland/fresh/assets/1062408/00544ef7-c815-43aa-9968-08d8746b5e1d\">\r\n\r\nAfter:\r\n\r\n<img width=\"664\" alt=\"Screenshot 2023-10-06 at 22 19 41\" src=\"https://github.com/denoland/fresh/assets/1062408/7db335ac-300f-471e-bac1-787dbcd6ec92\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1880",
                "comments": []
            },
            {
                "pr_number": 1881,
                "title": "chore: remove console.log",
                "body": "Here is hope that our linter will get a `no-console` rule someday...",
                "html_url": "https://github.com/denoland/fresh/pull/1881",
                "comments": []
            },
            {
                "pr_number": 1888,
                "title": "docs: improve sidebar active style",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1888",
                "comments": []
            },
            {
                "pr_number": 1883,
                "title": "Add FilterHN to showcase.json",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1883",
                "comments": []
            },
            {
                "pr_number": 1870,
                "title": "feat: Use href instead of origin on Partial ",
                "body": "Use `location.href` on partials so we can create refresh buttons without relying on islands or on the request\r\n\r\nThe idea is to be able to write code like this:\r\n```tsx\r\nconst Refresh () => {\r\n   return <button f-partial=\"?refresh\">Refresh Page</button>\r\n}\r\n```\r\n\r\ninstead of this\r\n```tsx\r\nconst Refresh ({href}: {href: string}) => {\r\n   const url = new URL(href)\r\n   \r\n   url.searchParams.set('refresh', \"true\")\r\n   \r\n   return <button f-partial=`${url.href}`>Refresh Page</button>\r\n}\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1870",
                "comments": [
                    "Just added some tests. Please let me know if you need anything else :)",
                    "Just saw the tests were failing, now they are all passing :) "
                ]
            },
            {
                "pr_number": 1873,
                "title": "fix: Partial state deserialization on simple islands",
                "body": "This PR fixes an issue with deserialization of Fresh Partial.\r\n\r\nWhen no special type is used on __FRESH_STATE, the requiresSerialization variable is false, which causes the`deserialize` function to be null, thus making a void state, thus not hydrating correctly the islands inside the fresh state. \r\n\r\nThis PR addresses this issue by using the good&old JSON.parse in these cases.",
                "html_url": "https://github.com/denoland/fresh/pull/1873",
                "comments": [
                    "Hi @marvinhagemeister. \r\n\r\nLooking at the code, I've noticed a test for `serializes props`. Taking a deeper look on why this test was not failing with mainstream code, I've figured out that the `<Fader/>` component was making the deserialize function needed (since it's an island). Removing the `<Fader/>` made the tests fail with mainstream code and pass with the proposed changes. \r\n\r\nSince there's already a test for nested islands, removing <Fader/> from `routes/island_props` test this case. \r\n\r\nTell me what you think, thanks!",
                    "Done, thanks @marvinhagemeister !"
                ]
            },
            {
                "pr_number": 1890,
                "title": "Update showcase.json",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1890",
                "comments": []
            },
            {
                "pr_number": 1889,
                "title": "fix: allow setting server config from fresh config",
                "body": "Fixes https://github.com/denoland/fresh/issues/1815",
                "html_url": "https://github.com/denoland/fresh/pull/1889",
                "comments": []
            },
            {
                "pr_number": 1895,
                "title": "refactor: simplify www test",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1895",
                "comments": []
            },
            {
                "pr_number": 1894,
                "title": "chore: synchronize CI and local tests",
                "body": "These should be kept the same in the future so tests are run identically locally and in CI.",
                "html_url": "https://github.com/denoland/fresh/pull/1894",
                "comments": []
            },
            {
                "pr_number": 1898,
                "title": "fix: don't store codeframe on error object",
                "body": "This makes the output a little cleaner.",
                "html_url": "https://github.com/denoland/fresh/pull/1898",
                "comments": []
            },
            {
                "pr_number": 1899,
                "title": "chore: release 1.5.0",
                "body": "\ud83c\udf89 ",
                "html_url": "https://github.com/denoland/fresh/pull/1899",
                "comments": []
            }
        ],
        "1.4.3": [
            {
                "pr_number": 1681,
                "title": "fix: build id mismatch between CI + deploy",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1681",
                "comments": []
            },
            {
                "pr_number": 1711,
                "title": "chore: disable canary deno tests temporarily",
                "body": "All CIs are currently failing to due formatting differences in canary. Disable that in CI for now until formatting changes have been promoted to stable. Then we can run the CI tests on both deno versions again.",
                "html_url": "https://github.com/denoland/fresh/pull/1711",
                "comments": []
            },
            {
                "pr_number": 1720,
                "title": "fix(server): pass context into 500 handlers",
                "body": "closes #1717\r\n\r\nThis allows state to properly get passed into `_app.tsx` when rendering `_500.tsx` pages, as evidenced by the test.",
                "html_url": "https://github.com/denoland/fresh/pull/1720",
                "comments": []
            },
            {
                "pr_number": 1723,
                "title": "fix(server): sanitize brackets from island names",
                "body": "closes #1708\r\n\r\nNeed to get rid of brackets from island names as well, because brackets aren't valid in javascript variable names.",
                "html_url": "https://github.com/denoland/fresh/pull/1723",
                "comments": []
            },
            {
                "pr_number": 1713,
                "title": "docs: fix app wrapper docs",
                "body": "This is just a document mistake, but it would be better to make some modifications:\r\n\r\n<img width=\"785\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/19886374/b2d6ab34-256a-4e60-b1c7-d00743ede042\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1713",
                "comments": []
            },
            {
                "pr_number": 1665,
                "title": "docs: mention required `--unstable` flag in Deno KV OAuth example",
                "body": "I ran into some friction getting this example to work and felt like a note in the documentation would really have helped.\r\n\r\nhttps://github.com/denoland/deno/issues/19992#issuecomment-1660389090 lead me to the answer.",
                "html_url": "https://github.com/denoland/fresh/pull/1665",
                "comments": [
                    "Looks like a quick `deno fmt` should make the CI green.",
                    "@marvinhagemeister I wasn't making any changes to code files.. just markdown, would `deno fmt` do anything with those? I'll rebase and try this again..?",
                    "Yes, `deno fmt` also formats markdown.",
                    "Thanks for following up on this! For me, this PR meets the conditions to resolve https://github.com/denoland/deno/issues/19992#issuecomment-1660389090. "
                ]
            },
            {
                "pr_number": 1727,
                "title": "fix(doc): example code should return the response",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1727",
                "comments": []
            },
            {
                "pr_number": 1721,
                "title": "chore(server): export DestinationKind",
                "body": "closes https://github.com/denoland/fresh/issues/1709",
                "html_url": "https://github.com/denoland/fresh/pull/1721",
                "comments": []
            },
            {
                "pr_number": 1732,
                "title": "chore(deps): bump actions/checkout from 3 to 4",
                "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node20 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li>Support fetching without the --progress option by <a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n<li>Release 4.0.0 by <a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1447\">actions/checkout#1447</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@\u200btakost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li><a href=\"https://github.com/simonbaird\"><code>@\u200bsimonbaird</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v4.0.0\">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>\n<h2>v3.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Mark test scripts with Bash'isms to be run via Bash by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1377\">actions/checkout#1377</a></li>\n<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li>Release 3.6.0 by <a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/RobertWieczoreck\"><code>@\u200bRobertWieczoreck</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li><a href=\"https://github.com/luketomlinson\"><code>@\u200bluketomlinson</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.3...v3.6.0\">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>\n<h2>v3.5.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li>Add support for sparse checkouts by <a href=\"https://github.com/dscho\"><code>@\u200bdscho</code></a> and <a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n<li>Release v3.5.3 by <a href=\"https://github.com/TingluoHuang\"><code>@\u200bTingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1376\">actions/checkout#1376</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/megamanics\"><code>@\u200bmegamanics</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@\u200bDimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li><a href=\"https://github.com/dfdez\"><code>@\u200bdfdez</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v3.5.3\">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>\n<h2>v3.5.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Use correct API url / endpoint in GHES by <a href=\"https://github.com/fhammerl\"><code>@\u200bfhammerl</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1289\">actions/checkout#1289</a> based on <a href=\"https://redirect.github.com/actions/checkout/issues/1286\">#1286</a> by <a href=\"https://github.com/1newsr\"><code>@\u200b1newsr</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.1...v3.5.2\">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>\n<h2>v3.5.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve checkout performance on Windows runners by upgrading <code>@\u200bactions/github</code> dependency by <a href=\"https://github.com/BrettDong\"><code>@\u200bBrettDong</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/BrettDong\"><code>@\u200bBrettDong</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v4.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1067\">Support fetching without the --progress option</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1436\">Update to node20</a></li>\n</ul>\n<h2>v3.6.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1377\">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/579\">Add option to fetch tags even if fetch-depth &gt; 0</a></li>\n</ul>\n<h2>v3.5.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1196\">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1287\">Fix typos found by codespell</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1369\">Add support for sparse checkouts</a></li>\n</ul>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@\u200bactions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@\u200bactions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@\u200bactions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/770\">Add input <code>set-safe-directory</code></a></li>\n</ul>\n<h2>v3.0.1</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac\"><code>3df4ab1</code></a> Release 4.0.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1447\">#1447</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc\"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=\"https://redirect.github.com/actions/checkout/issues/1067\">#1067</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac\"><code>97a652b</code></a> Update default runtime to node20 (<a href=\"https://redirect.github.com/actions/checkout/issues/1436\">#1436</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
                "html_url": "https://github.com/denoland/fresh/pull/1732",
                "comments": []
            },
            {
                "pr_number": 1702,
                "title": "docs: fix small typos",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1702",
                "comments": []
            },
            {
                "pr_number": 1731,
                "title": "fix: wrong type for html boolean attrs",
                "body": "HTML boolean attributes must be treated as being `true` when present. See: https://developer.mozilla.org/en-US/docs/Glossary/Boolean/HTML\r\n\r\nFixes https://github.com/denoland/fresh/issues/1725",
                "html_url": "https://github.com/denoland/fresh/pull/1731",
                "comments": []
            },
            {
                "pr_number": 1734,
                "title": "fix: stream static files from disk",
                "body": "This avoids reading them into memory upfront. This is mostly a performance optimization and reduces memory consumption. This will likely reduce cold start time too.\r\n\r\nThis should help in mitigating https://github.com/denoland/deploy_feedback/issues/481",
                "html_url": "https://github.com/denoland/fresh/pull/1734",
                "comments": []
            },
            {
                "pr_number": 1710,
                "title": "fix: main index not found in group",
                "body": "Fixes https://github.com/denoland/fresh/issues/1689",
                "html_url": "https://github.com/denoland/fresh/pull/1710",
                "comments": []
            },
            {
                "pr_number": 1696,
                "title": "fix: Add `_fresh` to .gitignore on update",
                "body": "Fixes #1680 ",
                "html_url": "https://github.com/denoland/fresh/pull/1696",
                "comments": [
                    "I added some test but there are some things I would like to add.\r\n\r\n- I found it difficult to find the tests\r\n- There is some room for refactoring the update tests\r\n\r\nI don't mind picking up some of this work. I would suggest splitting the tests into `init_test.ts` and `update_test.ts`.\r\n\r\nAlso, why import the asserts from `deps.ts` and not directly from `$std`?",
                    "> I don't mind picking up some of this work. I would suggest splitting the tests into `init_test.ts` and `update_test.ts`.\r\n\r\nAgree, splitting these up makes sense.\r\n\r\n> Also, why import the asserts from `deps.ts` and not directly from $std?\r\n\r\nThat was before my time, but I'd guess that this was done so that there are less places to update when moving to a newer version of std."
                ]
            },
            {
                "pr_number": 1735,
                "title": "fix: dev command loading snapshot",
                "body": "This PR changes the `dev.ts` script so that it doesn't import `main.ts` anymore if the new `config` parameter was passed. This changes the architecture in that the `dev` mode doesn't sit on top of `main` anymore which allows us to properly detect if we're in dev mode without other means. By calling into `ServerContext` directly instead of somewhere abstracted away behind `start` we can set all options ourselves, like if we want to skip loading the snapshot or not.\r\n\r\nNote that this still preserves the previous behavior when no `fresh.config.ts` file is used. So this isn't a breaking change.\r\n\r\nFixes #1650",
                "html_url": "https://github.com/denoland/fresh/pull/1735",
                "comments": []
            },
            {
                "pr_number": 1687,
                "title": "docs: add section for \"Rendering islands on client only\"",
                "body": "Changes: \r\n- new section on \"Islands\" page about \"Rendering islands on client only\" \r\n- in description about islands: state more clearly now that they will be rendered on the Server AND (hydrated) on the client. \r\n\r\nFixes: #1686 \r\n\r\n@marvinhagemeister I have a feeling i might do some more of these small docs changes. \r\nI don't want to batch them to not delay unrelated improvements too much. \r\nShould I simply tag you for new PRs (like this), or do you get notified of new PRs anyway?",
                "html_url": "https://github.com/denoland/fresh/pull/1687",
                "comments": [
                    "Please run `deno fmt`",
                    "@iuioiua done running `deno fmt` :)"
                ]
            },
            {
                "pr_number": 1736,
                "title": "fix: Missing error on invalid island children",
                "body": "In #1674 a reproduction was posted where a json object was passed to an island instead of an expected JSX element.\r\n\r\n```jsx\r\n<Island>{{ foo: 123 }}</Island>\r\n```\r\n\r\nWhilst this is technically possible in Preact, _if_ the receiving component knows how to deal with that, it's not something that's encouraged. It breaks the compositional nature of components and leads to difficult to understand errors.\r\n\r\nInstead users should pass data via any other prop where the already existing serialization mechanism we have in Fresh will kick in. The `children` prop is reserved for JSX nodes only.\r\n\r\nAll this PR does, is throw an error when it detects that the user is trying to pass something invalid via `children` to an island",
                "html_url": "https://github.com/denoland/fresh/pull/1736",
                "comments": []
            },
            {
                "pr_number": 1738,
                "title": "chore: fix update check tests downloading deps",
                "body": "Deno looks up the cache dir via `HOME`. We replaced that with a tmp dir in our tests, which lead to all dependencies being downloaded from scratch. This PR changes that so that we use a different environment variable for our tests. That way we can reuse the existing cache which is much faster.",
                "html_url": "https://github.com/denoland/fresh/pull/1738",
                "comments": [
                    "Merging myself since this just speeds up tests."
                ]
            },
            {
                "pr_number": 1737,
                "title": "www: fix broken link",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1737",
                "comments": [
                    "Ah looks like a quick `deno fmt` locally will resolve the formatting and make the CI green.\r\n\r\nEDIT: I took the liberty of pushing a commit with the formatting fixes."
                ]
            },
            {
                "pr_number": 1740,
                "title": "fix: incorrect island child validation",
                "body": "I messed up the check in #1736 a little and threw on valid children. This PR addresses that.",
                "html_url": "https://github.com/denoland/fresh/pull/1740",
                "comments": [
                    "Merging, since that's blocking another PR of mine."
                ]
            },
            {
                "pr_number": 1743,
                "title": "fix: env files not loaded in build task",
                "body": "Fixes https://github.com/denoland/fresh/issues/1695",
                "html_url": "https://github.com/denoland/fresh/pull/1743",
                "comments": []
            },
            {
                "pr_number": 1742,
                "title": "fix: only show update message once per day",
                "body": "Changes the update check behavior so that the update message is only shown once per day.\r\n\r\nFixes: https://github.com/denoland/fresh/issues/1673",
                "html_url": "https://github.com/denoland/fresh/pull/1742",
                "comments": []
            },
            {
                "pr_number": 1745,
                "title": "chore: release 1.4.3",
                "body": "\ud83c\udf89 ",
                "html_url": "https://github.com/denoland/fresh/pull/1745",
                "comments": []
            }
        ],
        "1.4.2": [
            {
                "pr_number": 1648,
                "title": "fix: attributes on `<body>` not being rendered",
                "body": "Fixes #1646 .",
                "html_url": "https://github.com/denoland/fresh/pull/1648",
                "comments": []
            },
            {
                "pr_number": 1653,
                "title": "docs(www): update hello bar for Fresh 1.4",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1653",
                "comments": [
                    "Perhaps, we can keep a small release checklist somewhere."
                ]
            },
            {
                "pr_number": 1656,
                "title": "fix: exclude `_fresh` dir from lint + fmt",
                "body": "Fixes #1652 ",
                "html_url": "https://github.com/denoland/fresh/pull/1656",
                "comments": []
            },
            {
                "pr_number": 1657,
                "title": "fix: remove debug code",
                "body": "Accidentally committed these with https://github.com/denoland/fresh/pull/1617/files .\r\n\r\nOpened a feature request that we should have a `no-console` lint rule https://github.com/denoland/deno/issues/20187",
                "html_url": "https://github.com/denoland/fresh/pull/1657",
                "comments": [
                    "Merging myself since it's just the removal of an accidental `console.log`"
                ]
            },
            {
                "pr_number": 1659,
                "title": "fix: refresh not working",
                "body": "Regression was introduced in #1638 accidentally by not rendering module scripts into the HTML.\r\n\r\nFixes #1647",
                "html_url": "https://github.com/denoland/fresh/pull/1659",
                "comments": []
            },
            {
                "pr_number": 1661,
                "title": "www: fix broken link",
                "body": "As reported here https://github.com/denoland/fresh/pull/1522#issuecomment-1681556426 ",
                "html_url": "https://github.com/denoland/fresh/pull/1661",
                "comments": [
                    "Merging myself, since it just fixes a broken link"
                ]
            },
            {
                "pr_number": 1658,
                "title": "fix: twind duplicating css classes when `className` is used instead of `class`",
                "body": "Both the `twind` and `twindV1` plugin didn't properly handle the case when `className` is used to set classes instead of `class`. This would lead to CSS classes being applied twice.\r\n\r\nFixes #1655",
                "html_url": "https://github.com/denoland/fresh/pull/1658",
                "comments": []
            },
            {
                "pr_number": 1664,
                "title": "www: fix incorrect links",
                "body": "Fixes #1663",
                "html_url": "https://github.com/denoland/fresh/pull/1664",
                "comments": []
            },
            {
                "pr_number": 1668,
                "title": "fix: invalid html structure",
                "body": "Fixes #1666",
                "html_url": "https://github.com/denoland/fresh/pull/1668",
                "comments": [
                    "Merging myself because fix is super obvious."
                ]
            },
            {
                "pr_number": 1671,
                "title": "www: fix typo",
                "body": "Fixes #1670",
                "html_url": "https://github.com/denoland/fresh/pull/1671",
                "comments": []
            },
            {
                "pr_number": 1669,
                "title": "chore: release 1.4.2",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1669",
                "comments": []
            }
        ],
        "1.4.1": [
            {
                "pr_number": 1642,
                "title": "fix: broken init script",
                "body": "Turns out that the init script must not import aliased paths, otherwise it breaks because the current cwd doesn't have a `deno.json` file.",
                "html_url": "https://github.com/denoland/fresh/pull/1642",
                "comments": []
            },
            {
                "pr_number": 1645,
                "title": "chore: release 1.4.1",
                "body": "Mainly to fix an issue with the init script.",
                "html_url": "https://github.com/denoland/fresh/pull/1645",
                "comments": []
            }
        ],
        "1.4.0": [
            {
                "pr_number": 1501,
                "title": "Update showcase.json",
                "body": "add Liberchat to Showcase",
                "html_url": "https://github.com/denoland/fresh/pull/1501",
                "comments": [
                    "thanks"
                ]
            },
            {
                "pr_number": 1504,
                "title": "style: consistently spell Fresh",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1504",
                "comments": []
            },
            {
                "pr_number": 1502,
                "title": "www: use smart quotes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1502",
                "comments": []
            },
            {
                "pr_number": 1505,
                "title": "style: fix remaining inconsistencies",
                "body": "Follow-up of #1504",
                "html_url": "https://github.com/denoland/fresh/pull/1505",
                "comments": []
            },
            {
                "pr_number": 1507,
                "title": "Accessbility tweaks and fixes for docs/www",
                "body": "First let me say thank you so much for Deno Fresh \u2013 it's a trill to use and learn!\r\n\r\nWith this PR I want to give back with some of my knowledge.\r\n\r\nThis PR focuses on accessibilty fixes that makes a screen reader read redundant stuff which can make it harder to understand what is being read.\r\n\r\nTo summarize:\r\n- Added `aria-hidden=\"true\"` to a bunch of decorative icons.\r\n- Some text had too low contrast.\r\n- Replaced the container for `<LemonDrop />` to be a `<div>` instead of `<section>`, as a section should have a heading and this element is purely a decorative feature ([from w3c](https://www.w3.org/TR/2014/PR-html5-20140916/sections.html#the-section-element)).\r\n\r\nIf there are any questions, suggestions or anything, please let me know :)",
                "html_url": "https://github.com/denoland/fresh/pull/1507",
                "comments": []
            },
            {
                "pr_number": 1510,
                "title": "fix: async route typing",
                "body": "The `ctx.state` type can now be passed in an async route component. I omitted tests, as this is just a matter of typing. Happy to add some if they're deemed needed.\r\n\r\nFixes #1509\r\nRelated https://github.com/denoland/saaskit/pull/393#issuecomment-1647142200",
                "html_url": "https://github.com/denoland/fresh/pull/1510",
                "comments": []
            },
            {
                "pr_number": 1500,
                "title": "fix: middleware state reset between middlewares",
                "body": "Fixes #1497 .",
                "html_url": "https://github.com/denoland/fresh/pull/1500",
                "comments": []
            },
            {
                "pr_number": 1503,
                "title": "fix: duplicate references for same signals",
                "body": "When two islands accessed the same signals we'd create two separate ones instead of pointing to the same signal reference upon deserialization in the client.\r\n\r\nFixes #1488 , Fixes https://github.com/preactjs/signals/issues/389.",
                "html_url": "https://github.com/denoland/fresh/pull/1503",
                "comments": []
            },
            {
                "pr_number": 1499,
                "title": "fix: Only show update message if current < latest",
                "body": "Noticed that we still had a case where the cache has the old value latest and users may have just upgraded to a newer version than in the cache, that we'd still show the upgrade message. This was because we only checked if `current !== latest`, which doesn't account for the `current > latest`.\r\n\r\nNote that this only during the time interval between a new release and the next update check. Once the update check updates the cache we don't run in the situation where `current > latest`. \r\n\r\nTo address that I've added a basic semver comparison check.",
                "html_url": "https://github.com/denoland/fresh/pull/1499",
                "comments": []
            },
            {
                "pr_number": 1518,
                "title": "fix: parse multiple route params in same part",
                "body": "Our existing way to parse file paths to patterns for routes was a bit rudimentary. It only allowed parameters to be the full path segments:\r\n\r\nBefore:\r\n\r\n- `foo/[bar]@foo` -> `foo/[bar]@foo`\r\n\r\nAfter:\r\n\r\n- `foo/[bar]@foo` -> `foo/:bar@foo`\r\n\r\nFixes #1516",
                "html_url": "https://github.com/denoland/fresh/pull/1518",
                "comments": []
            },
            {
                "pr_number": 1521,
                "title": "www: fix tests not run on CI",
                "body": "Noticed that the tests for `www` were not run as part of the CI and were failing.",
                "html_url": "https://github.com/denoland/fresh/pull/1521",
                "comments": []
            },
            {
                "pr_number": 1522,
                "title": "www: move latest docs into `latest` folder",
                "body": "This PR moves the markdown files for the latest docs into a `latest` folder, similar to how we already do it for `canary`. This should make it more obvious which files to change.",
                "html_url": "https://github.com/denoland/fresh/pull/1522",
                "comments": [
                    "You are probably already aware and working on a fix, but just in case, all the docs seem to return an HTTP 500 error response since this commit",
                    "@JTRNS Thanks for pointing it out. Resolved with #1523 ",
                    "It looks like this PR change broke the remote case of rendering-markdown example.\r\n\r\nhttps://github.com/denoland/fresh/blob/9f97e3423cc57f141a0b5819a1c028e967d49ef3/docs/latest/examples/rendering-markdown.md?plain=1#L31-L38"
                ]
            },
            {
                "pr_number": 1523,
                "title": "www: fix docs returning 500",
                "body": "Missed a case where we look for the folder version :/\r\n\r\nFixes an accidental regression introduced in #1522 .",
                "html_url": "https://github.com/denoland/fresh/pull/1523",
                "comments": []
            },
            {
                "pr_number": 1515,
                "title": "fix: allow string based event handlers in SSR",
                "body": "We don't officially recommend it as string based event handlers are only safe when it's a static string to avoid any form of injections. The fresh linting preset will throw an error if it's not a static string already, but `preact/debug` still throws on these. At runtime we can't really differentiate where a string was coming from, but user's must actively bypass TS warnings AND the linting rule, which to me seems like an adequate guardrail.\r\n\r\nFixes #1309",
                "html_url": "https://github.com/denoland/fresh/pull/1515",
                "comments": []
            },
            {
                "pr_number": 1520,
                "title": "add basic Dockerfile support to project generator",
                "body": "Will add a basic functioning docker file in the base directory of the generated project. ",
                "html_url": "https://github.com/denoland/fresh/pull/1520",
                "comments": [
                    "I'm pretty strongly of the opinion that this should be behind a flag of some sort. This feels like an extra configuration file that a lot of people will never use. ",
                    "Looks better to me. I still think this should be behind a `--docker` flag. Could you try to implement that?",
                    "> Looks better to me. I still think this should be behind a `--docker` flag. Could you try to implement that?\r\n\r\nI don't mind at all. ",
                    "This is a great idea, thanks for making a PR! I agree that putting this behind a `--docker` flag is the way to go. As great as docker is, it's something you usually come across at a later stage in your career. If you're completely new to web development and want to build a website then you don't know what docker is. Because of that it feels like adding a prompt to the init command adds unnecessary friction for newer users.\r\n\r\nSo lets keep it behind `--docker`. That way advanced users can benefit from Fresh generating the Dockerfile and newer users are not confronted with a choice they might not know about. Happy to merge it once the prompt is removed.",
                    "@wsb1994 Something wrong here:\r\n```ts\r\nconst flags = parse(Deno.args, {\r\n  boolean: [\"force\", \"twind\", \"vscode, docker\"],\r\n  default: { \"force\": null, \"twind\": null, \"vscode\": null, \"docker\": null },\r\n});\r\n```\r\nIt would be `\"vscode\", \"docker\"` instead."
                ]
            },
            {
                "pr_number": 1525,
                "title": "fix(init): typo in flags parsing",
                "body": "I missed this while reviewing #1520. Thanks to @osddeitf for pointing that out!",
                "html_url": "https://github.com/denoland/fresh/pull/1525",
                "comments": []
            },
            {
                "pr_number": 1506,
                "title": "Route layout",
                "body": "This is an initial implementation of a _layout file implementation that allows for applying layouts to routes. It supports cascading _layout files in route sub directories and treats them all as optional.\r\n\r\nThere are a good number of tests that were broken when I forked, so could use some pointers on where to add additional tests for this.",
                "html_url": "https://github.com/denoland/fresh/pull/1506",
                "comments": [
                    "I was able to make some additions to the fixture.  So if you run deno task fixture, you should be able to navigate to the following paths to see it in action:\r\n/route-layout\r\n/route-layout/sub\r\n/route-layout/skip\r\n/route-layout/skip/sub\r\n\r\nThose were some of the use cases i was checking out. You can see that it has no impact on existing pages:\r\n/\r\n/islands\r\n/books\r\n\r\n",
                    "My bad on that, forgot to rerun deno fmt after adding the fixture tests. Hopefully that resolves what i saw in the workflow error.",
                    "I haven't looked at this in detail yet, but just noting that we have a similar PR: https://github.com/denoland/fresh/pull/870. If we go with this one, then we should close 870.",
                    "How should i go about toggling routeConfig wrapper layouts based on a header? 'hx-request' in my case. ",
                    "@bendik Can you please open a new issue instead of commenting on merged PRs?"
                ]
            },
            {
                "pr_number": 1526,
                "title": "fix: lots of typos",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1526",
                "comments": []
            },
            {
                "pr_number": 1527,
                "title": "feat(ci): Spell checking",
                "body": "follow up PR to #1526 (this PR will be failing CI until #1526 gets merged)\r\nref: https://github.com/denoland/deno_std/pull/3459",
                "html_url": "https://github.com/denoland/fresh/pull/1527",
                "comments": []
            },
            {
                "pr_number": 1536,
                "title": "fix(server): change RouteContext data type parameter default to any",
                "body": "closes https://github.com/denoland/fresh/issues/1528\r\n\r\nI have a large comment in 1528 explaining what's going on here.\r\n\r\nDuring the course of researching this, I found `deno check **/*.ts` to type check all the files in the project. It turns out we have this issue in our code base as well! `tests/fixture_server_components/main.ts` shows this exact error, because `routes/context/[id].tsx` and `routes/fail.tsx` don't qualify `RouteContext` with any type parameters.\r\n\r\nIn a soon-to-be-opened PR, I will suggest that we type check our entire project as part of CI. If we had always been doing this, then we would have caught this problem before users had to report an issue.",
                "html_url": "https://github.com/denoland/fresh/pull/1536",
                "comments": []
            },
            {
                "pr_number": 1537,
                "title": "chore: clean up remaining type errors in project",
                "body": "Resulting from the investigation in https://github.com/denoland/fresh/pull/1536, this resolves three type errors in the project. The import_map one is for `www/routes/docs/[...slug].tsx`.",
                "html_url": "https://github.com/denoland/fresh/pull/1537",
                "comments": []
            },
            {
                "pr_number": 1539,
                "title": "chore(init): remove blank line from _404 template",
                "body": "Found in https://github.com/denoland/fresh/pull/1454#issuecomment-1655170384. The project produced by `init` doesn't pass the formatting check. Perhaps we should expand the scope of this PR to have a test run the `safe` command (from 1454) on the newly initialized project? I can happily do this in this PR or a separate one. Or if we decide against the `safe` command, we could manually run type checks, linting, and formatting on the initialized project in a test.",
                "html_url": "https://github.com/denoland/fresh/pull/1539",
                "comments": [
                    "ci failed due to `error: Import 'https://deno.land/std@0.193.0/streams/text_line_stream.ts' failed: 500 Internal Server Error`\r\nplease rerun",
                    "We could add a step to the CI that creates a new Fresh project and type checks it. To me that's preferable because that way the creating a new project stays fast.",
                    "I'm rereading my comment and it definitely could have been phrased better. I'm suggesting an addition to `cli_test.ts` which runs `deno task check` on the newly initialized project. This wouldn't impact the creation of a new project. And then this would get caught when a developer changes the init script locally and runs tests. (Hopefully we're all running tests locally before pushing to remote, right!?)\r\n\r\nI can add the new test, if you think this is a good idea."
                ]
            },
            {
                "pr_number": 1544,
                "title": "www: fix broken canary update link",
                "body": "Fixes #1543 .",
                "html_url": "https://github.com/denoland/fresh/pull/1544",
                "comments": []
            },
            {
                "pr_number": 1546,
                "title": "Updated Paquet Showcase",
                "body": "I have updated the Paquet screenshots and links since they were out of date.",
                "html_url": "https://github.com/denoland/fresh/pull/1546",
                "comments": []
            },
            {
                "pr_number": 1489,
                "title": "feat(server): dev safety checks",
                "body": "closes #1416  \r\ncloses #1524\r\n\r\nas discussed in the aforementioned issue, @deer was so kind to let me finish this one off.\r\nas expected it gave me quite some nice understanding of `fresh`'s internals.\r\n\r\nthis pr introduces the following check when being in `dev` mode:  \r\n- [x] only one _app.tsx is allowed per application and it must have default export\r\n- [x] one 500.tsx and it must have default export\r\n- [x] one 404.tsx and it must have default export\r\n- [x] ~~pascal case or kebab case islands (island name)~~ (this one became obsolete w/ 1.3)\r\n- [x] route must have handler or component\r\n- [x] route patterns must be unique \r\n- [x] if static override, ensure there is no normal static directory\r\n- [x] static file conflict with routes (because static files have higher priority)\r\n- [x] plugin doesn't call render\r\n- [x] plugin each defined module must be a js/ts module\r\n\r\nthe functionality can be tested by navigating into `tests/fixture_dev_checks/` and running `deno task start`\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1489",
                "comments": [
                    "Thanks for finishing this up. Looks pretty good, but I wonder if we want to specifically create a union type for all the categories and then reference them as something like this:\r\n```tsx\r\nreturn [{\r\n      category: DevChecks.ModuleExport,\r\n      message: `Your ${moduleName} file does not have a default export.`,\r\n      fileLink: moduleName,\r\n    }];\r\n```\r\ninstead of\r\n```tsx\r\nreturn [{\r\n      category: \"Module Export\",\r\n      message: `Your ${moduleName} file does not have a default export.`,\r\n      fileLink: moduleName,\r\n    }];\r\n```\r\n\r\nAdditionally, what about implementing the check in https://github.com/denoland/fresh/pull/1414? And taking the tests as well. Then I can just close that one, and a maintainer can close https://github.com/denoland/fresh/pull/539. And then you can resolve three issues at once (the two you mention, plus 475 which I was going to resolve).",
                    "@deer thanks for the suggestion. will incorporate everything you mentioned!",
                    "Apologies for the churn. I merged the PR too quickly and it's currently blocking me on feature work, so I've reverted it in #1567. So far I encountered that the handlers rule doesn't account for them being an array.\r\n\r\nThe output is a bit messy when there are multiple errors. Maybe some visual hierarchy via colors can help?\r\n\r\nMost rules don't print the file name where the error happened which makes it difficult to track down where the error is coming from. The `route.name` property that many rules rely on is not the file name."
                ]
            },
            {
                "pr_number": 1538,
                "title": "chore(ci): type check entire project in ci",
                "body": "The logical continuation of https://github.com/denoland/fresh/pull/1536 and https://github.com/denoland/fresh/pull/1537. Now that the project is clean (after those are merged), we should prevent any such errors from sneaking in again in the future.\r\n\r\nA question here: why are individual things type checked in the CI? Specifically:\r\n```yaml\r\n      - name: Type check init script\r\n        run: deno check --remote init.ts\r\n\r\n      - name: Type check website\r\n        run: deno check main.ts dev.ts\r\n        working-directory: www/\r\n\r\n      - name: Type check demo\r\n        run: deno check --remote main.ts dev.ts\r\n        working-directory: demo\r\n\r\n      - name: Type check tests/fixture\r\n        run: deno check main.ts dev.ts\r\n        working-directory: tests/fixture/\r\n\r\n      - name: Type check tests/fixture_error\r\n        run: deno check main.ts dev.ts\r\n        working-directory: tests/fixture_error/\r\n```\r\n\r\nOpening as a draft because:\r\n1) this will fail due to the other PRs not being merged yet\r\n2) open question regarding duplicate type checking\r\n3) should I pull the check into the matrix like the other type checks?\r\n\r\nI do agree that `deno check --remote init.ts` should remain separate, but the other four seem superfluous if we decide to check the whole project.",
                "html_url": "https://github.com/denoland/fresh/pull/1538",
                "comments": [
                    "Thoughts on removing the extra type checks? Thoughts on why we type check individual items in every matrix run? I picked `startsWith(matrix.os, 'ubuntu') && matrix.deno == 'canary'` for type checking since that's what Lino did for typos, but maybe we should do the full type check in every run.\r\n\r\nThis is fortunately passing now.",
                    "Thanks, I think that's very similar to what I've done in https://github.com/denoland/fresh/pull/1454. So maybe I'll pull the changes to `deno.json` out of 1454 and leave that focused on `init.ts`.\r\n\r\nSo here in this PR I'd have... \r\n* `check:types` which does `deno check **/*.ts && deno check **/*.tsx`\r\n* change the existing `run: deno check **/*.ts` to `run: deno task check:types`\r\n\r\nAny thoughts on my confusion around the existing type checks in CI? And how it runs for all matrix variations?",
                    "> LGTM! It's OK to run the type check on all platforms + versions.\r\n\r\nOk, I can remove the condition then. Should I also remove the other type checks, now that we're checking everything at once?",
                    "Sure \ud83d\ude42",
                    ">error: Import 'https://deno.land/std@0.173.0/path/posix.ts' failed: 500 Internal Server Error\r\n    at https://deno.land/std@0.173.0/path/mod.ts:26:25\r\n\r\nPlease rerun CI \ud83e\udd1e "
                ]
            },
            {
                "pr_number": 1534,
                "title": "fix(server): add type to Plugin so that MiddlewareHandler is typed correctly",
                "body": "closes https://github.com/denoland/fresh/issues/1531\r\n\r\nSo the user's code goes from:\r\n```tsx\r\nexport function getLoggerHandler(logSender?: RemoteLogSenderFunction): Plugin {\r\n  const handler: MiddlewareHandler<Logger> = async function (\r\n    _req: Request,\r\n    ctx: MiddlewareHandlerContext<Logger>\r\n  ) {\r\n    ctx.state.logger = new LogModule(logSender);\r\n    return await ctx.next();\r\n  };\r\n\r\n  return {\r\n    name: \"loggerPlugin\",\r\n    middlewares: [\r\n      {\r\n        middleware: {\r\n          handler: handler as MiddlewareHandler<Record<\"logger\", unknown>>,\r\n        },\r\n        path: \"/\",\r\n      },\r\n    ],\r\n  };\r\n}\r\n```\r\nto\r\n```tsx\r\nexport function getLoggerHandler(logSender?: RemoteLogSenderFunction): Plugin<Logger> {\r\n  const handler: MiddlewareHandler<Logger> = async function (\r\n    _req: Request,\r\n    ctx: MiddlewareHandlerContext<Logger>\r\n  ) {\r\n    ctx.state.logger = new LogModule(logSender);\r\n    return await ctx.next();\r\n  };\r\n\r\n  return {\r\n    name: \"loggerPlugin\",\r\n    middlewares: [\r\n      {\r\n        middleware: {\r\n          handler: handler,\r\n        },\r\n        path: \"/\",\r\n      },\r\n    ],\r\n  };\r\n}\r\n```\r\n\r\nThoughts?",
                "html_url": "https://github.com/denoland/fresh/pull/1534",
                "comments": [
                    "Hmmm, the test plugin should probably also use this..."
                ]
            },
            {
                "pr_number": 1550,
                "title": "fix(ci): type error in dev_checks fixture",
                "body": "I think https://github.com/denoland/fresh/pull/1538 was merged without merging in https://github.com/denoland/fresh/pull/1489 and rerunning CI.\r\n\r\n@marvinhagemeister, I try to avoid pinging you specifically to merge my PRs, but in this case I'll make an exception. Without this fix I think all future CI runs will fail.",
                "html_url": "https://github.com/denoland/fresh/pull/1550",
                "comments": [
                    "Whoops, I thought somebody had rerun the CI already because it was green.",
                    "Hmmm, not sure how it works for you as maintainer, but when I look at a PR (e.g. #1454 -- look, I did it!) I see:\r\n> This branch is out-of-date with the base branch\r\n\r\nPerhaps this doesn't happen if you don't refresh the page or something when merging multiple PRs in a short time frame.",
                    "Ohh right that makes sense. I read over that part and only looked at the green checkmark \ud83d\ude05 "
                ]
            },
            {
                "pr_number": 1545,
                "title": "fix(server): merge competing PluginMiddleware handlers together",
                "body": "blocked by https://github.com/denoland/fresh/pull/1534\r\n\r\nThis issue arises when multiple plugins try to create middleware at the same path. We need to merge them together, similar to [here](https://github.com/denoland/fresh/blob/75f5761ca460efb9517887433064561fcb4392db/tests/fixture/routes/_middleware.ts#L62).\r\n\r\nI've added a test for this, which is currently not passing the type checks, due to 1534 mentioned above. The test throws some extra middleware onto the root route, and also creates a new route that has multiple handlers from a single plugin. Another plugin then adds here as well. The final result is asserted in the test. Prior to this change, the existing `plugin routes and middleware` test was failing if another middleware was added from a separate plugin (which happened to me in a side project). The test is left in place.\r\n\r\nAdditionally, I've fixed an issue with specifying routes with the introduction of `formatMiddlewarePath`. Now developers of plugins no longer have to specify leading and trailing slashes. This maintains backwards compatibility.",
                "html_url": "https://github.com/denoland/fresh/pull/1545",
                "comments": [
                    "Once #1534 is merged, then I will update the plugins with types so that the tests run.",
                    "@bjesuiter, I think this solves the issue you mentioned [here](https://github.com/denoland/fresh/issues/1514#issuecomment-1648545715), at least for middleware. If we think this is the right approach, then I can create a separate PR for fixing/improving the way plugin authors specify routes. (This PR just improve how it's done for middleware, in addition to the bug fix.)",
                    "@deer I looked at this issue here and all the other connected issues we created to try to make sense, what exactly solves the problem I mentioned in https://github.com/denoland/fresh/issues/1514#issuecomment-1648545715. \r\n\r\n## My Thoughts on the middleware handler thematic\r\n\r\n### Bloated syntax for defining middleware handlers\r\nConsidering the \"routePlugin\" definition in [the PR](https://github.com/denoland/fresh/pull/1545/files#diff-5d3be94b363b7606991803e441fec019f4a09884d8aff3e3ecbf0998e08ea9ef) (for some reason i cannot permalink to the file div for this): \r\n\r\n```ts\r\nexport default function routePlugin(options: Options): Plugin {\r\n  return {\r\n    name: \"routePlugin\",\r\n    middlewares: [{\r\n      middleware: { handler: testMiddleware },\r\n      path: \"/\",\r\n    }, {\r\n      middleware: {\r\n        handler: twoPointlessMiddlewares,\r\n      },\r\n      path: \"lots-of-middleware\",\r\n    }],\r\n    routes: [{\r\n      path: \"/_app\",\r\n      component: AppBuilder(options),\r\n    }],\r\n  };\r\n}\r\n```\r\n\r\n1. Why do we accept an array of handlers for the same path here: \r\n```ts\r\n{\r\n      middleware: {\r\n        handler: twoPointlessMiddlewares,\r\n      },\r\n      path: \"lots-of-middleware\",\r\n    }\r\n```\r\n\r\n2. Couldn't this structure be simplified to: \r\n\r\n```ts\r\nreturn {\r\n    name: \"routePlugin\",\r\n    middlewares: [\r\n    {\r\n      handler: testMiddleware\r\n      path: \"/\",\r\n    }, \r\n    {\r\n       handler: twoPointlessMiddlewares,\r\n      path: \"lots-of-middleware\",\r\n    }]\r\n}\r\n```\r\n\r\n3. Does it need to be called \"handler\"? \r\n```ts\r\n  handler: twoPointlessMiddlewares,\r\n```\r\nIf it supports an array of handlers, I'd like to call it \"handlers\". \r\nBut this might be confusing either way depending on the coding level of the user. \r\n\r\n### Merging of middlewares at the same path seems nice \r\n\r\nIf I see this correctly, this PR adds the option to merge 2 or more middleware handlers for the same route by simply making a concatenation of them. Do I view this correctly? \r\n\r\nThis might explain, why you thought of allowing multiple middleware handlers for one route in a plugin definition, since the merging code is in the framework at the end. \r\n\r\n#### Suggestion: Disallow for multi-handlers per route in one plugin\r\nBut I think, that we should limit the possibilities for plugin authors a little bit here. \r\nMy rule would be: A plugin author can only add one middleware handler per route. \r\nThen the code in src/server/context.ts of the fresh framework would still merge the multiple handlers from different Plugins, but each plugin can only have one handler per route. \r\n\r\nQuestions/Thoughts for that: \r\n1. Would that limit some functionality I didn't thought of? \r\n2. This would also solve the naming problem: each path in a plugin middleware definition would've only one \"handler\" again ^^\r\n3. Do you want to allow multiple handlers per path from a plugin because of plugin combinations/chaining of plugins?? ",
                    "@deer \r\n\r\n# Now my thoughts on how this could apply to routes from plugins \r\n\r\n_put this in a second comment for you to be able to answer differently to both of them ^^_\r\n\r\n## Doing route merging the same as middleware is harder \r\n\r\nI think it's not possible to simply use the same logic for merging routes with the same path from different plugins as it is for middlewares. \r\nReason: routes can return various different things, like components, raw Results, multiple handlers depending on HTTP verbs. \r\n\r\n=> Therefore I'd forbid two plugins registering the same routes. \r\n=> **Suggestion**:  This would be a nice use-case for relative URLs in Plugins! \r\nWhen plugins define their routes as relative, we can make the basePath for these relative urls configureable from the outside world of the plugin! Depending on the plugin, it doesn't matter for the functionality at which basePath it's attached. \r\nIf the plugin really needs an absolute path, we should throw an error when there's more than one route at the same absolute path. \r\n\r\n## Which issue is solved with this PR compared to my original problem with the absolute path [here](https://github.com/denoland/fresh/issues/1514#issuecomment-1648545715)? \r\n\r\nWhen I look at the original thread, my main problem was with the  missing '/' at the beginning of the route path. \r\nI'm not able to see how this is improved by the ideas in this PR, other than the \"setting the base path outside the plugin\" idea from above. \r\n\r\nWhat did you mean exactly when you said: \r\n> I think this solves the issue you mentioned https://github.com/denoland/fresh/issues/1514#issuecomment-1648545715, \r\n> at least for middleware. If we think this is the right approach`\r\n- which issue of the ones I mention do you mean here? \r\n- what approach do you mean might be the right one in this PR? \r\n\r\n## I like the \"Improving dev time dev errors\" PR \r\n\r\nI think, [this PR with improving the dev time dev errors you mentioned](https://github.com/denoland/fresh/issues/1416) below my original problem with the absolute/relative paths, is really nice. \r\nI haven't looked into it in detail, but more error when developing seems very good. \r\n\r\n\r\n",
                    "Thanks for the very detailed posts. Let's see if I can correctly respond to all the points. I clearly didn't express myself clearly. Let me try to correct that: all I meant was that \"this approach\" can be used to solve the problem of specifying paths, if we apply it to routes. Prior to this fix, if a plugin author wanted to specify middleware that runs at a particular location, they would have to write `path: /my-location/` which is perhaps a bit silly. Now they can just write `path: my-location`. Now, on to your great feedback...\r\n\r\n> 1. Why do we accept an array of handlers for the same path here:\r\n\r\nOne middleware route can already specify multiple handlers, e.g. [this](https://github.com/denoland/fresh/blob/75f5761ca460efb9517887433064561fcb4392db/tests/fixture/routes/_middleware.ts#L62). This functionality was introduced by https://github.com/denoland/fresh/pull/553 and I think we should offer plugin authors the same functionality.\r\n\r\n>2. Couldn't this structure be simplified to:\r\n\r\nYes, I see your point that it is currently a bit bloated. From `types.ts` we have...\r\n```tsx\r\nexport interface PluginMiddleware {\r\n  /** A path in the format of a filename path without filetype */\r\n  path: string;\r\n\r\n  middleware: Middleware;\r\n}\r\n\r\nexport interface Middleware<State = Record<string, unknown>> {\r\n  handler: MiddlewareHandler<State> | MiddlewareHandler<State>[];\r\n}\r\n```\r\nThis makes it slightly easier to inject the middleware into the server context, at the cost of developer experience to plugin authors. I agree it would be simpler if we did something like:\r\n```tsx\r\nexport interface PluginMiddleware {\r\n  /** A path in the format of a filename path without filetype */\r\n  path: string;\r\n  middleware?: Middleware;\r\n  handler?: MiddlewareHandler<State> | MiddlewareHandler<State>[];\r\n}\r\n```\r\nThis would enable your suggested:\r\n```tsx\r\nreturn {\r\n    name: \"routePlugin\",\r\n    middlewares: [\r\n    {\r\n      handler: testMiddleware\r\n      path: \"\",\r\n    }, \r\n    {\r\n      handler: twoPointlessMiddlewares,\r\n      path: \"lots-of-middleware\",\r\n    }]\r\n}\r\n```\r\n>3. Does it need to be called \"handler\"?\r\n\r\nI'm just copying what's already in `types.ts`. Of course we could consider changing it, but this seems relatively minor, especially when hovering over `handler:` in IDEs shows that it supports an array as well. And once we have a great \"Writing a plugin\" example, there should be no problem here. If only someone were to write that... \ud83d\ude43 \r\n\r\nOk, so now your second post.\r\n\r\n>Doing route merging the same as middleware is harder\r\n\r\nAgree, I don't think there should be any route merging for plugins. Middleware merging is already a thing that happens, so I'm just making it happen for plugins. But there's no route merging as is, so we certainly shouldn't introduce it for plugins. \r\n\r\n> Which issue is solved with this PR compared to my original problem with the absolute path https://github.com/denoland/fresh/issues/1514#issuecomment-1648545715?\r\n\r\nI believe I answered that at the beginning of this post.\r\n> `path: /my-location/` which is perhaps a bit silly. Now they can just write `path: my-location`\r\n\r\nSo extending this idea to routes, the existing:\r\n```tsx\r\nroutes: [{\r\n      path: \"/_app\",\r\n      component: AppBuilder(options),\r\n    }\r\n```\r\nwould change its path declaration to \"_app\" if it should run at the root route. The core issue is that the plugin loader does this:\r\n```tsx\r\n`./routes${route.path}.ts`\r\n```\r\nIt shouldn't force plugin developers to start their path with a slash. We should instead be able to do things like this:\r\n```ts\r\npath: \"index\"\r\npath: \"folder/[asdf]\"\r\npath: \"folder/subfolder/index\"\r\n```\r\nWe should instead do a conditional check on the path and prepend a slash if necessary. I believe this would solve your problem of `/postcss/[...path]` vs `postcss/[...path]`.\r\n\r\n> I like the \"Improving dev time dev errors\" PR\r\nWe should extend this concept to do a few things for plugins. Given that a plugin author might not be authoring their plugin in the context of a fresh application, we can't rely on any sort of dynamic analysis there. (Perhaps some improved linting at some point?)\r\n\r\nMore likely would be two things:\r\n1) a single plugin has configured conflicting routes. There should be a message to the user encouraging them to contact the plugin author to let them know that they've done something really silly.\r\n2) Multiple plugins conflict with each other. If two plugins are trying to push handlers to the same route, then we should let the user know that the plugins they're trying to use are conflicting with each other.\r\n\r\nPlease let me know if I've missed something, or if anything is still unclear.",
                    "@deer Thanks for the detailed response! Going over it now. \r\n\r\n1. Thanks for pointing out #553, this was exactly what I missed as explanation for why we should have multiple middlewares per route. \r\n\r\n2. Happy that you like the new style of \r\n\r\n```ts\r\nreturn {\r\n    name: \"routePlugin\",\r\n    middlewares: [\r\n    {\r\n      handler: testMiddleware\r\n      path: \"\",\r\n    }, \r\n    {\r\n      handler: twoPointlessMiddlewares,\r\n      path: \"lots-of-middleware\",\r\n    }]\r\n}\r\n```\r\n\r\n=> Do we go on implementing this change? (Probably in another PR, to not bloat this one :D) \r\n\r\n3. Yes, the `handler` naming is not that critical, i only find it annoying from time to time and wanted to know if it was intentional or some kind of leftover :D  \r\nImo we can leave it like this for now to not introduce more construction sites in the code than necessary. \r\n\r\n4. I support this: \r\n```ts\r\nWe should instead do a conditional check on the path and prepend a slash if necessary. I believe this would solve your problem of /postcss/[...path] vs postcss/[...path].\r\n```\r\n\r\nThanks for the clarification about `postcss/[...path]` and `/postcss/[...path]`, i really couldn't figure it out while reading the PR first time. \r\n\r\n5. I also see these two cases for dev errors: \r\n\r\n> More likely would be two things:\r\n> \r\n> a single plugin has configured conflicting routes. There should be a message to the user encouraging them to contact the > plugin author to let them know that they've done something really silly.\r\n> Multiple plugins conflict with each other. If two plugins are trying to push handlers to the same route, then we should let the user know that the plugins they're trying to use are conflicting with each other.\r\n\r\nI think I don't have more questions for this PR, will comment on some other ones in the future again :) \r\nWorking with you feels great, thanks for that! :)\r\n\r\n",
                    "Now that 1534 was merged, I will clean this up later today.",
                    "ci / test (v1.x, macOS-latest) (pull_request) is failing due to\r\n>error: Import 'https://deno.land/x/imagescript@1.2.15/utils/wasm/jpeg.js' failed: 500 Internal Server Error\r\n    at https://deno.land/x/imagescript@1.2.15/ImageScript.js:7:26\r\n\r\nI'm see this more and more as of late.",
                    "To summarize the work produced by the discussions:\r\n1. simplify plugin middleware by doing the following:\r\n```tsx\r\nexport interface PluginMiddleware {\r\n  /** A path in the format of a filename path without filetype */\r\n  path: string;\r\n  middleware?: Middleware;\r\n  handler?: MiddlewareHandler<State> | MiddlewareHandler<State>[];\r\n}\r\n```\r\nThis will make the developer experience easier for plugin creators, at the slight cost of more complicated code to load plugins.\r\n\r\n2. Simplify the creation of routes from plugins, by not requiring slashes at the beginning. This is confusing as is.\r\n3. Create a \"Writing a plugin\" example.\r\n4. Add checks to https://github.com/denoland/fresh/blob/main/src/server/dev_checks.ts for two things:\r\n4a. routes within a plugin conflicting\r\n4b. routes across plugins conflicting\r\n\r\n@bjesuiter, did I miss anything? I will create issues for these tonight.",
                    "@deer please tag me in the \"how to write a plug-in issue\" I already started a branch for that locally :)"
                ]
            },
            {
                "pr_number": 1561,
                "title": "chore: simplify route creation logic",
                "body": "No behaviour changes, just noticed that it could be written with less loops. Saves about `1ms` (not much really) but is a little shorter to read.",
                "html_url": "https://github.com/denoland/fresh/pull/1561",
                "comments": [
                    "This is much better, thanks."
                ]
            },
            {
                "pr_number": 1562,
                "title": "refactor: pre-sort all routes",
                "body": "Instead of sorting `routes`, `layouts` and `middlewares` individually we can sort them all at once. Didn't notice any perf differences but to me it makes the code a bit easier to read. As a plus we only have one sort function to deal with instead of 3 separate ones.",
                "html_url": "https://github.com/denoland/fresh/pull/1562",
                "comments": []
            },
            {
                "pr_number": 1565,
                "title": "chore: speed up layout tests",
                "body": "The layout tests were a bit slow. Noticed that they only check if the server sent HTML is correct and don't need any JS to be executed client side. This means we can skip launching a full `puppeteer` process and simply assert against the fetched HTML. This brings down the layout test time from a couple of seconds down to `<100ms`.\r\n\r\nWrote a tiny pretty printer that parsers the linkedom document into something for humans to debug when for example a selector isn't found:\r\n\r\n<img width=\"747\" alt=\"Screenshot 2023-08-01 at 15 33 18\" src=\"https://github.com/denoland/fresh/assets/1062408/6d0afc5f-6fce-4f0f-b268-8cc9cc8594ec\">\r\n\r\n_Note the charset casing issue is resolved in `preact-render-to-string`, just need to cut a new version_\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1565",
                "comments": []
            },
            {
                "pr_number": 1554,
                "title": "showcase: add over-ip",
                "body": "Add [over-ip](https://over-ip.dragon-vi.be) to the showcase, a simple _chat_ program about shouting noises into the void. Made as a test/showcase of a 'full stack' program using deno kv and websockets. The source code is public on GitLab (link on the \ud83e\udd95\ud83c\udf4b emojis)",
                "html_url": "https://github.com/denoland/fresh/pull/1554",
                "comments": []
            },
            {
                "pr_number": 1567,
                "title": "Revert: feat(server): add safety checks during `dev`",
                "body": "Revert: feat(server): add safety checks during `dev` (#1489)\r\n\r\nI merged #1489 too quickly. Reverting this PR because it has a couple of false positives that block me on feature work and I don't have time to look into these at the moment.",
                "html_url": "https://github.com/denoland/fresh/pull/1567",
                "comments": [
                    "Does the entire thing need to be reverted or can you just comment them out to disable the checks? ",
                    "> Does the entire thing need to be reverted or can you just comment them out to disable the checks?\r\n\r\nI'm not a fan of having commented out code in the repo. We can always re-land PRs once their fixed."
                ]
            },
            {
                "pr_number": 1575,
                "title": "chore(CI): make formatting same across platforms",
                "body": "This will help make CI homogeneous across platforms. Related to #1573.",
                "html_url": "https://github.com/denoland/fresh/pull/1575",
                "comments": []
            },
            {
                "pr_number": 1571,
                "title": "chore(CI): fix and simplify caching",
                "body": "This change also removes the `deno cache ...` step, which isn't needed, and moves type checks to after caching is complete. This should reduce the amount of import errors we're seeing in CI.\r\n\r\nReference: https://deno.land/manual@v1.35.3/advanced/continuous_integration#speeding-up-deno-pipelines",
                "html_url": "https://github.com/denoland/fresh/pull/1571",
                "comments": []
            },
            {
                "pr_number": 1570,
                "title": "chore(CI): rework lighthouse action",
                "body": "This action is slightly simpler and more performant.\r\n\r\nReference: https://github.com/marketplace/actions/lighthouse-ci-action",
                "html_url": "https://github.com/denoland/fresh/pull/1570",
                "comments": [
                    "Is having a Lighthouse action a requirement for this repo? Genuine question.",
                    "I don't think it's a requirement per se. When working on the website I tend to run it locally myself. But then again it's kinda nice to have maybe.",
                    "Perhaps, it'd be of greater justifiable value if we were to require performance budgets to be met. References:\r\n* https://github.com/marketplace/actions/lighthouse-ci-action#budgetpath\r\n* https://web.dev/use-lighthouse-for-performance-budgets"
                ]
            },
            {
                "pr_number": 1563,
                "title": "feat: add support for route groups",
                "body": "This PR adds support for route groups which allows you to use different layouts for routes in the same URL segment.\r\n\r\n```txt\r\n/routes\r\n  /(marketing)\r\n    /_layout.tsx   <-- only applies to about.tsx and career.tsx\r\n    /about.tsx\r\n    /career.tsx\r\n  /(info)\r\n    /_layout.tsx   <-- only applies to index.tsx and contact.tsx\r\n    /index.tsx\r\n    /contact.tsx\r\n```\r\n\r\nTo be able to do this we need to keep track of the original route paths. Previously, matching `_layout` and `_middleware` was done via their `URLPattern`, but this doesn't work with groups anymore. With groups multiple `_layout` files can have the same `URLPattern` and it becomes ambiguous as to which file to pick.\r\n\r\nTo solve this we need to match on the original file path semantics instead of their resulting `URLPattern`. To do that the PR adds an additional property `baseRoute` to each route which is the normalised file path. When a route matches we can retrieve that (like `/foo/(bar)/(bob)/about`) and easily match the needed layout files.\r\n\r\nThe PR is a bit longer than I'd hoped. Most of the changes relate to changing the internal route signature from:\r\n\r\n```ts\r\ninterface Route {\r\n  [K in \"GET\" | \"PATCH\" ...]: ...\r\n}\r\n```\r\n\r\nto\r\n\r\n```ts\r\ninterface Route {\r\n  baseRoute: string;\r\n  methods: {\r\n    [K in \"GET\" | \"PATCH\" ...]: ...\r\n  }\r\n}\r\n```\r\n\r\nInstead of making `baseRoute` just a string, I made it a nominal type. Noticed that I ran into a couple of errors during development where some values started with a `/`, others didn't etc. With the nominal type we can force it to have been parsed first and ensure it always has the expected format.\r\n\r\nFixes #1150 .",
                "html_url": "https://github.com/denoland/fresh/pull/1563",
                "comments": [
                    "oh no, looks like I broke some tests \ud83d\ude48 ",
                    "Alright, ready to review now \ud83c\udf89 "
                ]
            },
            {
                "pr_number": 1569,
                "title": "chore(CI): remove redundant steps",
                "body": "`deno task check:types` and `deno test -A` take care of everything.",
                "html_url": "https://github.com/denoland/fresh/pull/1569",
                "comments": []
            },
            {
                "pr_number": 1574,
                "title": "fix: typo `boder-box` to `border-box`",
                "body": "minor typographical error in init.ts setup, affects one line in style.css resulting in an invalid property",
                "html_url": "https://github.com/denoland/fresh/pull/1574",
                "comments": []
            },
            {
                "pr_number": 1557,
                "title": "chore(CI): combine install Chrome jobs",
                "body": "Reference: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsenv",
                "html_url": "https://github.com/denoland/fresh/pull/1557",
                "comments": []
            },
            {
                "pr_number": 1584,
                "title": "chore: format on save",
                "body": "I feel as though this is a reasonable default to have. This eliminates one more thing that a contributor must remember to do before submitting a PR.",
                "html_url": "https://github.com/denoland/fresh/pull/1584",
                "comments": []
            },
            {
                "pr_number": 1583,
                "title": "chore(CI): parallel tests",
                "body": "Let's give this a few tries and see if we can weed out the root causes.",
                "html_url": "https://github.com/denoland/fresh/pull/1583",
                "comments": [
                    "5x CI runs without a single failure. It seems parallel testing and caching are working well! \ud83d\ude80"
                ]
            },
            {
                "pr_number": 1588,
                "title": "www: fix 404 on \"Using Deno KV OAuth\" example",
                "body": "visiting [Using Deno KV Oauth](https://fresh.deno.dev/docs/examples/using-deno-kv-oauth) yields a 404.  \r\nthis pr fixes it by adding the correct article link to the toc.",
                "html_url": "https://github.com/denoland/fresh/pull/1588",
                "comments": []
            },
            {
                "pr_number": 1573,
                "title": "chore: `deno task ok`",
                "body": "This task checks formatting, linting, types and performs tests in one. Now, before committing, a contributor only needs to run `deno task ok` without worrying about each aspect of the repo is ok. This has worked great in Deno SaaSKit's repo.\r\n\r\nIf reasonable, this task should be used in CI to (almost) guarantee parity in checks between the local machine and CI.\r\n\r\nNote to self: once this is merged, update the manual.",
                "html_url": "https://github.com/denoland/fresh/pull/1573",
                "comments": []
            },
            {
                "pr_number": 1449,
                "title": "fix(server): make AppProps generic",
                "body": "closes https://github.com/denoland/fresh/issues/1446\r\n\r\nSince I haven't done anything purely working on types, I thought this would be a good way to jump in. I just copied over the generics from `PageProps` -- not sure if this is the right thing to do.\r\n\r\nI noticed we don't have any tests for this stuff. Thoughts on using something like https://github.com/SamVerschueren/tsd here?",
                "html_url": "https://github.com/denoland/fresh/pull/1449",
                "comments": [
                    "> I noticed we don't have any tests for this stuff. Thoughts on using something like https://github.com/SamVerschueren/tsd here?\r\n\r\nThe standard library has [a module](https://deno.land/std@0.193.0/testing/types.ts?doc=) for testing types. I'd recommend using that instead.\r\n",
                    "Thanks for pointing that out. I tried writing a test, although I'm not sure how useful it is. Thoughts?",
                    "@iuioiua, you're my types guy. Thoughts about this one? ",
                    "Based on the completion of code for this task, we may not need to include any additional development at this point. However, I believe it\u2019s important to address LayoutProps concurrently with this task to maintain consistency between the APIs, as discussed in issue #1580.\r\n\r\nTherefore, I would like to directly address the following question within this PR: Should AppProps and LayoutProps be the same type, rather than separate? Should AppProps extend LayoutProps?\r\n\r\nBy making this decision now, we can improve the maintainability of the code base for future changes that require synchronizing these wrapper pattern props. In my opinion, AppProps should extend LayoutProps. Since AppWrapper itself is a Layout, extending LayoutProps allows us to keep a hook for potential additional functionality that may not be available in every Layout.",
                    "I think that medium-term we should move towards deprecating `_app.tsx`. Layouts should be able to do everything that the `_app.tsx` can do now. I'm in favor of them being separate types.",
                    "> I think that medium-term we should move towards deprecating _app.tsx. Layouts should be able to do everything that the _app.tsx can do now. I'm in favor of them being separate types.\r\n\r\nI've been thinking about this and initially I was in favor of deprecating `_app.tsx` too. But thinking some more about it you likely want to be able to also overwrite layouts to opt out of inheriting them. That's currently a feature we don't have but if we had, than you kinda likely still want to have all the meta tags etc from `_app.tsx` instead of having to declare everything from scratch again. So `_app.tsx` is somewhat of a special layout."
                ]
            },
            {
                "pr_number": 1591,
                "title": "fix(update): update script actually supports comments in jsonc",
                "body": "closes https://github.com/denoland/fresh/issues/1576\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1591",
                "comments": []
            },
            {
                "pr_number": 1594,
                "title": "chore(server): simplify plugin route creation",
                "body": "closes #1560\r\n\r\nAs specified in the issue, we should have a simpler way of specifying routes. Forcing the leading slash is confusing and pointless.",
                "html_url": "https://github.com/denoland/fresh/pull/1594",
                "comments": []
            },
            {
                "pr_number": 1592,
                "title": "fix(server): make LayoutProps generic",
                "body": "closes #1580",
                "html_url": "https://github.com/denoland/fresh/pull/1592",
                "comments": []
            },
            {
                "pr_number": 1598,
                "title": "www: fix agolia being initialized twice",
                "body": "Initializing two instances of agolia is no good. Also noticed that they ship their own version of Preact. So I changed it so that it uses ours too.\r\n\r\nFixes #1593",
                "html_url": "https://github.com/denoland/fresh/pull/1598",
                "comments": []
            },
            {
                "pr_number": 1599,
                "title": "feat(server): support https",
                "body": "closes https://github.com/denoland/fresh/issues/901, closes https://github.com/denoland/fresh/issues/809\r\n\r\nWe currently have (all referenced and relevant types included for clarity):\r\n```tsx\r\nexport type StartOptions = ServeInit & FreshOptions;\r\n\r\nexport interface ServeInit extends Partial<Deno.ListenOptions> {\r\n  signal?: AbortSignal;\r\n  onError?: (error: unknown) => Response | Promise<Response>;\r\n  onListen?: (params: { hostname: string; port: number }) => void;\r\n}\r\n\r\nexport interface ListenOptions {\r\n  port: number;\r\n  hostname?: string;\r\n}\r\n\r\n```\r\n\r\nAnd after this change we have (all referenced and relevant types included for clarity):\r\n```tsx\r\nexport type StartOptions = Partial<Deno.ServeTlsOptions> & FreshOptions;\r\n\r\nexport interface ServeTlsOptions extends ServeOptions {\r\n  cert: string;\r\n  key: string;\r\n}\r\n\r\nexport interface ServeOptions {\r\n  port?: number;\r\n  hostname?: string;\r\n  signal?: AbortSignal;\r\n  reusePort?: boolean;\r\n  onError?: (error: unknown) => Response | Promise<Response>;\r\n  onListen?: (params: { hostname: string; port: number }) => void;\r\n}\r\n```\r\n\r\nSo this change adds the necessary `cert` and `key` to the options bag, and the unnecessary (at least for this change, but overall possibly beneficial) `reusePort`.\r\n\r\nNow that we're type checking the project, I created a \"test\" for this by introducing a `main_tls.ts` file which tries to start a fresh server with `cert` and `key` specified. We'll rely on the deno runtime tests themselves to confirm this works, but this at least asserts that the properties are passable. Note that we get a type error if the actual change here is reverted, proving that https isn't currently supported.",
                "html_url": "https://github.com/denoland/fresh/pull/1599",
                "comments": []
            },
            {
                "pr_number": 1454,
                "title": "feat(init): add check task to run all static analysis",
                "body": "closes https://github.com/denoland/fresh/issues/784\r\n\r\nThe author of 784 has very kindly provided a repo to reproduce the issue. I agree, the error message when starting the project is horrible:\r\n```\r\ndeno task start\r\nTask start deno run -A --watch=static/,routes/ dev.ts\r\nCheck file:///Users/reed/code/temp/issue-fresh-dx/dev.ts\r\nWatcher Process started.\r\nThe manifest has been generated for 3 routes and 1 islands.\r\nerror: Uncaught (in promise) SyntaxError: Unexpected reserved word at file:///Users/reed/code/temp/issue-fresh-dx/islands/Counter.tsx:12:5\r\n  await import(entrypoint);\r\n  ^\r\n    at async dev (https://deno.land/x/fresh@1.2.0/src/dev/mod.ts:140:3)\r\n    at async file:///Users/reed/code/temp/issue-fresh-dx/dev.ts:5:1\r\nWatcher Process failed. Restarting on file change...\r\n```\r\n\r\nIt does highlight the problematic file `Counter.tsx`, but the error shown isn't super clear. I don't understand why we're not type checking projects before. After I add the `check` command to the `start` task I get the following:\r\n```\r\ndeno task start\r\nTask start deno check main.ts && deno run -A --watch=static/,routes/ dev.ts\r\nCheck file:///Users/reed/code/temp/issue-fresh-dx/main.ts\r\nerror: TS7006 [ERROR]: Parameter 'p' implicitly has an 'any' type.\r\n  const wrongFunction = (p) => {\r\n                         ^\r\n    at file:///Users/reed/code/temp/issue-fresh-dx/islands/Counter.tsx:11:26\r\n\r\nTS1308 [ERROR]: 'await' expressions are only allowed within async functions and at the top levels of modules.\r\n    await p();\r\n    ~~~~~\r\n    at file:///Users/reed/code/temp/issue-fresh-dx/islands/Counter.tsx:12:5\r\n\r\nTS1356 [ERROR]:     Did you mean to mark this function as 'async'?\r\n      const wrongFunction = (p) => {\r\n                            ~~~~~~~~\r\n        at file:///Users/reed/code/temp/issue-fresh-dx/islands/Counter.tsx:11:25\r\n\r\nFound 2 errors.\r\n```\r\nThis makes it abundantly clear what's wrong with the project. If someone doesn't want to type check their project, it should be decently clear about how to remove the `deno check main.ts && ` part from the task. But the other way -- figuring out how to add this isn't so obvious. (I only got it working after a few attempts, e.g. `deno check dev.ts` doesn't catch the error. How checking `main.ts` checks the other files in the project is still a mystery to me. As another hurdle to figuring out how to do this on your own: https://deno.land/manual@v1.35.0/tools doesn't mention `check`, so this is difficult to find.)",
                "html_url": "https://github.com/denoland/fresh/pull/1454",
                "comments": [
                    "On the other hand this will make startup slow, deno disabled typechecking by default everywhere for this reason\r\n\r\nAlso is there a reason to not just use `deno run --check .. dev.ts` , I'm not 100 % sure but in my usage I think it feels like it typechecks more stuff then just `deno check file`\r\n\r\nMaybe at  least we should have `start:fast` or something that doesn't type check",
                    "Also I remember the argument for disabling type-checking by default was that the editor should have the checks via the lsp already and the uesr shouldn't need to pay the costly startup time for the same redundant diagnostics. I guess the mentality is the user should fix errors before running the file",
                    "Agree that the error message thrown by V8 is confusing and not as user friendly as it should be. I'm a little worried about introducing a type-check step when launching the server as it slows down the startup sequence very noticeably. For smaller projects that is likely not much of a concern, but with bigger ones you tend to end up in situations where type checking takes more than 30s.\r\n\r\nI feel like another alternative is custom linting rules. I've added one that catches when an `await` keyword is used in a non-async function here https://github.com/denoland/deno_lint/pull/1176 . That way users get immediate feedback in their editors and it won't affect the startup time.",
                    "Why not use `deno run --check ....`? Because this is a photo of me:\r\n![b7e](https://github.com/denoland/fresh/assets/1494757/f83a71a7-bee9-42f1-b908-93690bba06c2)\r\nSo two things:\r\n1. great point on this possibly being slow for large projects\r\n2. thanks for showing me the `--check` flag for run. I suppose I should go through the commands listed from doing `deno --help` and then the subcommands as well, just to see the full spectrum of things out there.\r\n\r\nThe point about \"the user _should_ fix errors before running the file\" is, I think, easily countered with \"have you ever met humans before?\" \ud83d\ude02  But more seriously:\r\n1. they might make a change that causes an error in another file and not be aware of it\r\n2. knowledge of best practices is, by definition, tribal knowledge. Newcomers will not have this knowledge until they've cut themselves enough (like I've done here).\r\n\r\nIn general I'm in favor of providing a safe space that gives friendly error messages. Do we agree with that? If so, is there some way that we could enable this by default and let people opt out if necessary? Given that this is a change to the init script, I don't think it will impact existing projects. And if an experienced user is creating a new project and doesn't want to type check in dev mode, they can easily delete the relevant part from the `start` command. But it's not so easy to come across this idea (type checking before starting) as a newbie.\r\n\r\nOf course it's perfectly ok to just close this as well -- it is just a _request_ after all.",
                    "I've reworked this to introduce a `safe` command. `check` seems like the better choice, but I don't want to cause confusion with the built in `deno check` command.\r\n\r\nFun fact: if you do this in a newly created project, it doesn't pass. When we build the `_404.tsx` file, there's an empty line at the top, so `deno fmt --check` complains. PR incoming.",
                    "I like `check` as the task name more than `safe`. With `safe` I'm not sure what it means and it seems less descriptive to me. ",
                    "i like `check` better as well, and if you think it won't be confusing, then great. now people can just `deno task check` in their projects \ud83d\ude4c ",
                    "I realized we also need to check .tsx files as well \ud83e\udd26 . And it seems useful enough to have in the fresh source itself, no?",
                    "> Shall we align this with #1538, using `deno task check:types`?\r\n\r\nI don't think so. I find myself doing all of these things, and I wanted a shortcut. I could imagine other people do the same as well, and also want a shortcut. So \"check:types\" isn't descriptive of linting and formatting _and_ type checking. And if you're suggesting removing linting/formatting, then I'm also not in favor of that \ud83d\ude05 , since I want all at once.",
                    "> error: TS2614 [ERROR]: Module '\"https://deno.land/x/puppeteer@16.2.0/mod.ts\"' has no exported member 'Page'. Did you mean to use 'import Page from \"https://deno.land/x/puppeteer@16.2.0/mod.ts\"' instead?\r\n  Page,\r\n\r\nAnother strange CI failure, which didn't happen on any of the other variants in this run..."
                ]
            },
            {
                "pr_number": 1596,
                "title": "chore: speed up server component tests",
                "body": "This speeds up the tests in `server_component_tests.ts` from 8s -> 4s. Not too much, but I'll take it.",
                "html_url": "https://github.com/denoland/fresh/pull/1596",
                "comments": []
            },
            {
                "pr_number": 1600,
                "title": "feat: co-locate islands + non-route files",
                "body": "This PR allows non-route files to be co-located in the `routes/` directory. Whenever we encounter a folder named `(_foo)` where `foo` can be any word, we'll skip that when crawling the file system for routes. When such a folder is named `(_islands)`, we'll treat the files inside it as islands.\r\n\r\n```sh\r\n/routes\r\n  /(_islands)     # files treated as islands\r\n    ...\r\n  /(_components)  # ignored, no special meaning\r\n    ...\r\n  /index.tsx      # your typical route\r\n``` \r\n\r\nFixes #1486",
                "html_url": "https://github.com/denoland/fresh/pull/1600",
                "comments": [
                    "Really like this. Nice work!"
                ]
            },
            {
                "pr_number": 1605,
                "title": "chore: remove console.log",
                "body": "Accidentally merged a `console.log` in #1600 .",
                "html_url": "https://github.com/denoland/fresh/pull/1605",
                "comments": []
            },
            {
                "pr_number": 1355,
                "title": "feat: support conditional island JSX children",
                "body": "This PR address the scenario where a server rendered JSX tree is passed to an island but isn't rendered initially in the client. In that case we cannot reconstruct it from the DOM alone and some form of serialization is needed. This PR stores the not rendered children part in a `<template>` tag so that it can be revived in the client.\r\n\r\nThis PR is based on #1324.\r\n\r\nFixes #1322 ",
                "html_url": "https://github.com/denoland/fresh/pull/1355",
                "comments": [
                    "I really appreciate the comments in the new code."
                ]
            },
            {
                "pr_number": 1597,
                "title": "feat: support async layout functions",
                "body": "This PR adds support for making Layouts behave similar to async route components. At some point I'll probably need to add proper async components in Preact, but for now this works and aligns well with the existing capabilities we have for routes.\r\n\r\n```tsx\r\nexport default async function AsyncLayout(\r\n  req: Request,\r\n  ctx: RouteContext,\r\n  { Component }: LayoutProps,\r\n) {\r\n  return (\r\n    <div class=\"async-layout\">\r\n      <p>Async layout</p>\r\n      <Component />\r\n    </div>\r\n  );\r\n}\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1597",
                "comments": []
            },
            {
                "pr_number": 1579,
                "title": "fix: add missing state property to interface",
                "body": "Corrects the props interface used in 404 pages to reflect that `state` is available as well.\r\n\r\nCloses #1578",
                "html_url": "https://github.com/denoland/fresh/pull/1579",
                "comments": [
                    "Thanks for taking the initiative to open a PR. What about adding a test to make sure this doesn't get broken in the future? ",
                    "@deer I could not find any references on how to test pure Typescript changes/types. There's no existing `types_test.ts` to add to. Would this mean creating a new `fixture_???` purely to check types? Should we create a `types_test.ts` that is just type checked and does something like below?\r\n\r\n```ts\r\nexport default function NotFound(props: UnknownPageProps<{ foo: number }, { bar: boolean }>) {\r\n  props.data.foo satisfies number;\r\n  props.state.bar satisfies boolean;\r\n}\r\n```\r\n\r\nThe above would be enough to test the `UnknownPageProps` type, but not sure where to put it to be type checked.",
                    "I meant a functional test that confirms the state is actually passed into the test _404 page. Currently there's a `tests/fixture/routes/_404.tsx` file that you could possibly modify. Look at how the tests are done in the `main_test.ts` file. Perhaps you can piggyback on an existing `_middleware.ts` which sets the state, but try going to an invalid url. That should get the state set, and then route to the 404.",
                    "I gave it a try. I added some types for the generics, and updated the `_404.tsx` file.\r\nNot sure if I should add a new test case, or updating existing one was enough\r\n\r\nLet me know what you think \ud83d\ude04",
                    "Looks like the CI is failing due to formatting issues. You can resolve these by running `deno fmt` locally and committing the changes.",
                    "Sorry, thought I had format on automatically on save, and workflow did not when I made the PR. Hope fully it should be OK now \ud83d\ude00"
                ]
            },
            {
                "pr_number": 1603,
                "title": "www: rewriting \"data fetching\" code example",
                "body": "Creating pull request on issue #1553",
                "html_url": "https://github.com/denoland/fresh/pull/1603",
                "comments": []
            },
            {
                "pr_number": 1606,
                "title": "chore: add test for checking initialized project",
                "body": "This is, I think, the natural followup to https://github.com/denoland/fresh/pull/1539 and https://github.com/denoland/fresh/pull/1454. Now that we have an easy way to type check the initialized project, we should assert that there are no type errors in that project.\r\n\r\nThis adds three seconds on my slow computer, but I think it's worth it; releasing code with red squiggles or linting or formatting errors is a bit silly.",
                "html_url": "https://github.com/denoland/fresh/pull/1606",
                "comments": []
            },
            {
                "pr_number": 1611,
                "title": "feat: allow layout and _app overrides",
                "body": "This PR adds two new options to route configuration to override previously inherited layouts or skip the `_app` template.\r\n\r\n```tsx\r\nexport const config: RouteConfig = {\r\n  rootLayout: true, // Mark this route as the root layout\r\n  appTemplate: false // Disable `_app` template\r\n};\r\n\r\nexport default function MyPage() {\r\n  return <p>Hello world</p>;\r\n}\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1611",
                "comments": [
                    "Ah looks like I need to take another look at the tests.",
                    "Alright, addressed the test failures."
                ]
            },
            {
                "pr_number": 1615,
                "title": "docs(concepts): add middlware redirect section",
                "body": "Fixes https://github.com/denoland/fresh/issues/1607",
                "html_url": "https://github.com/denoland/fresh/pull/1615",
                "comments": []
            },
            {
                "pr_number": 1617,
                "title": "feat: Support setting `<html>` in `_app` template",
                "body": "This PR allows us to create the `<html>`-tag ourselves in `_app.tsx`. In case we didn't render any `<html>` tag we fall back to the current way of adding an internal outer template. This allows you to set the `lang` attribute on `<html>` without having to go through various abstractions, etc.\r\n\r\n```tsx\r\nimport { AppProps } from \"$fresh/server.ts\";\r\n\r\nexport default function App({ Component }: AppProps) {\r\n  return (\r\n    <html lang=\"de\">\r\n      <head>\r\n        ...\r\n      </head>\r\n      <body>\r\n        <Component />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n```\r\n\r\nI tried various approaches to achieve this like adding a marker and replacing that in the HTML string. That proved to be bad for security as the marker could be injected by users. So I landed on the approach in this PR where we essentially swap out user supplied `<html>`, `<head>` and `<body>` tags with an invisible Fragment. We store the props of the old vnode and after the body has rendered we'll render our internal outer template with the user supplied values. Basically this works close to how it worked before.\r\n\r\nFixes #1529, fixes #1595",
                "html_url": "https://github.com/denoland/fresh/pull/1617",
                "comments": [
                    "Merging, as I got verbal approval internally.",
                    "Looks great. Excited to be moving in the right direction!"
                ]
            },
            {
                "pr_number": 1624,
                "title": "www: remove counters in sidebar",
                "body": "Small design change that removes the decimal numbered list in the sidebar. Always found they include visual noise and don't really have a purpose.\r\n\r\nBefore:\r\n\r\n| Before | After |\r\n|---|---|\r\n| <img width=\"446\" alt=\"Screenshot 2023-08-12 at 16 00 32\" src=\"https://github.com/denoland/fresh/assets/1062408/7493ac36-ae4f-4b8e-b364-0f862b262c2c\"> | <img width=\"490\" alt=\"Screenshot 2023-08-12 at 16 00 36\" src=\"https://github.com/denoland/fresh/assets/1062408/4bed97ce-c799-4a10-abcc-ec989540330b\"> |\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1624",
                "comments": [
                    "Glad to see this has been done!"
                ]
            },
            {
                "pr_number": 1614,
                "title": "docs(concepts) make islands.md examples run without errors",
                "body": "Addresses https://github.com/denoland/fresh/issues/1582\r\n\r\nI've tried to break up my changes so that only the first one or two commits can be taken if they are the only ones that are helpful.",
                "html_url": "https://github.com/denoland/fresh/pull/1614",
                "comments": [
                    "@marvinhagemeister Thank you for the changes, and for the feedback. \r\n\r\nI wanted to make one other change, but I am not sure what the text should say instead of what it says now. There is a paragraph that talks about not needing to serialize children: https://github.com/setibeings/fresh/blob/eafe8a901a3c9496561cc6b0059882a44e649747/docs/latest/concepts/islands.md?plain=1#L105C1-L109C1 \r\n\r\nIt uses the pronoun \"we\" which I think could trip somebody up if they aren't sure if they're reading about something that THEY should be able to tell by looking at the HTML returned by the server.",
                    "@setibeings Good catch. Looks like that is a copy & paste error from the blog post on my part. That section is meant to refer to Fresh the framework itself.",
                    "I'm not sure if this is the blog post, but I'll just plan on reading it today and take a crack at rephrasing the paragraph I mentioned. \r\n\r\nhttps://deno.com/blog/intro-to-islands",
                    "@setibeings it references a section from this blog post https://deno.com/blog/fresh-1.2#passing-jsx-to-islands-and-nesting-islands-within-each-other",
                    "Looks like there is a formatting error. Running `deno fmt` locally will resolve these and make the CI green \ud83d\udc4d ",
                    "Converting to draft because I now want to add an HTML Example. ",
                    "Take a look at what I wrote and let me know if it matches what you think when you get a moment. Thanks for bearing with me."
                ]
            },
            {
                "pr_number": 1629,
                "title": "www: new fenced code block design",
                "body": "This extracts the design bits out of #1623 so that this can be merged in advance. The language switcher in #1623 itself needs a bit more work.\r\n\r\n<img width=\"878\" alt=\"Screenshot 2023-08-13 at 10 43 57\" src=\"https://github.com/denoland/fresh/assets/1062408/3b0f1c9c-b013-42de-99c0-6c7f7a22d142\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1629",
                "comments": [
                    "Merging myself, since this PR is only a minor UX change for the docs site."
                ]
            },
            {
                "pr_number": 1630,
                "title": "chore: speed up some tests",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1630",
                "comments": [
                    "Merging, because this just makes tests faster."
                ]
            },
            {
                "pr_number": 1626,
                "title": "feat: support async app template",
                "body": "This PR adds support for async `_app` templates. It was the last thing which didn't support that. Now all routes, layouts or the app template all behave the same internally. In doing so I noticed that we can make the rendering function a lot simpler and make a bunch of error checks redundant. ",
                "html_url": "https://github.com/denoland/fresh/pull/1626",
                "comments": [
                    "FYI: I've simplified a bit the async route component TS types too, since they all have the same args, except for a route not having `Component`"
                ]
            },
            {
                "pr_number": 1619,
                "title": "fix: rename layout config options",
                "body": "This addresses some feedback on the naming of the layout config options. Whilst changing that I noticed that we don't have a test for when a layout disables the `_app` template.",
                "html_url": "https://github.com/denoland/fresh/pull/1619",
                "comments": []
            },
            {
                "pr_number": 1627,
                "title": "feat: add helpers to make Fresh less TypeScripty",
                "body": "Had an idea to make async route component less TypeScripty by not requiring you to add all the type arguments yourself. Similar to vite's `defineConfig` function, the `defineRoute` function is mostly for automatic type inference.\r\n\r\nBefore:\r\n\r\n```tsx\r\nimport { RouteContext } from \"$fresh/server.ts\";\r\n\r\nexport default async function Page(req: Request, ctx: RouteContext) {\r\n const name = await fetchSomeData()\r\n\r\n  return (\r\n    <div class=\"home-page\">\r\n      <p>Hello {name}</p>\r\n    </div>\r\n  );\r\n});\r\n```\r\n\r\nAfter:\r\n\r\n```tsx\r\nimport { defineRoute } from \"$fresh/server.ts\";\r\n\r\nexport default defineRoute(async (req, ctx) => {\r\n const name = await fetchSomeData()\r\n\r\n  return (\r\n    <div class=\"home-page\">\r\n      <p>Hello {name}</p>\r\n    </div>\r\n  );\r\n});\r\n```\r\n\r\nIt doesn't seem like much, but it makes quickly hacking on Fresh a lot more enjoyable because you don't have to look up the correct types all the time anymore.\r\n\r\nFixes #1608",
                "html_url": "https://github.com/denoland/fresh/pull/1627",
                "comments": [
                    "Needed to widen the manifest types because TS cannot match based on arity. See https://twitter.com/drosenwasser/status/1691130933704036352 and related issue https://github.com/microsoft/TypeScript/issues/55370.\r\n\r\nI think it's fine since we generate the manifest ourselves anyway. As a bonus this fixes #1608"
                ]
            },
            {
                "pr_number": 1637,
                "title": "Fix example routes",
                "body": "I have never used Fresh, but I was glancing through the documentation and this looked incorrect.",
                "html_url": "https://github.com/denoland/fresh/pull/1637",
                "comments": [
                    "Hm, this test failure should be unrelated to my change."
                ]
            },
            {
                "pr_number": 1635,
                "title": "www: Various documentation improvements",
                "body": "- We call `_app.tsx` app wrapper in our docs but in the code they were called `appTemplate`. Switched that over to `appWrapper` everywhere\r\n- Updated the `Layouts` docs and call it `Layouts` instead of `Route Layouts`\r\n- Delete the `setting the lang` page in the canary docs as that was only necessary in older Fresh version's, because you couldn't render the `<html>` tag yourself. With Fresh 1.4 you can.\r\n- Merge `Route Groups` doc into `Routing`.\r\n- Change title of middleware docs to `Middlewares` instead of `Route middlewares`.\r\n- Add documentation for `defineApp`, `defineLayout` and `defineRoute`",
                "html_url": "https://github.com/denoland/fresh/pull/1635",
                "comments": []
            },
            {
                "pr_number": 1638,
                "title": "fix: render state not unique per render",
                "body": "This PR addresses a rendering correctness issue. In #1636 it was discovered that serialized island props were shared across renders when the server dealt with multiple requests at the same time. I did a bisect locally and the issue seems to be present since at least Fresh 1.0.\r\n\r\n## The problem\r\n\r\nThe gist of the problem is that we need to set up some global variables to track what Preact is rendering and to be aware of when we are trying to render an island so that we can inject markers in the HTML for the browser to continue from. This is fine in synchronous code and rendering with `preact-render-to-string` works that way anyway. Async route component don't change that, because they are not treated as a component, but rather a normal function that happens to return JSX.\r\n\r\nCompletely oversimplified the situation looked like this:\r\n\r\n```ts\r\n// This is a greatly oversimplified example, to demonstrate the issue.\r\n// The actual code is more complex than this.\r\n\r\n// Global to track which islands we rendered\r\nlet encounteredIslands = [];\r\n\r\nasync function renderAsyncPlugins(app, plugins) {\r\n  for (const plugin of plugins) {\r\n    // ...\r\n  }\r\n  \r\n  return renderToString(app);\r\n}\r\n\r\nexport function render(app, plugins) {\r\n  // bad reset globals before async code\r\n  encounteredIslands = [];\r\n  \r\n  // this calls synchronous `render()` from `preact-render-to-string` under the hood\r\n  const html = await renderAsyncPlugins(app, plugins);\r\n  \r\n  // check which islands we rendered\r\n  for (const islands of encounteredIslands) {\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\nThe problem is the async bit in between. There is no guarantee that you're dealing with the same global variables after the Promise is awaited. The globals are effectively leaked across renders. There were some problematic usage of globals similar to this scenario too.\r\n\r\n## The solution\r\n\r\nThe code has been rewritten so that you have to pass a rendering context around and cannot use globals. Instead of resetting the remaining globals at the start of the function and risk introducing asynchronicity later, that part has moved to be as close as possible to the `renderToString` call.\r\n\r\n```ts\r\n// Again, this is a greatly oversimplified example, to demonstrate the solution.\r\n// The actual code is more complex than this.\r\n\r\n// Global to track which islands we rendered\r\nlet encounteredIslands;\r\n\r\nasync function renderAsyncPlugins(app, plugins, renderState) {\r\n  for (const plugin of plugins) {\r\n    // ...\r\n  }\r\n  \r\n  // Better: remaining globals moved as close as possible to the renderToString call\r\n  try {\r\n    encounteredIslands = renderState.encounteredIslands;\r\n    return renderToString(app);\r\n  } finally {\r\n    // cleanup\r\n    encounteredIslands = undefined;\r\n  }\r\n}\r\n\r\nexport function render(app, plugins) {\r\n  const renderState = { ... }\r\n  \r\n  // this calls synchronous `render()` from `preact-render-to-string` under the hood\r\n  const html = await renderAsyncPlugins(app, plugins, renderState);\r\n  \r\n  // check which islands we rendered, but now we access our render state instead\r\n  for (const islands of renderState.encounteredIslands) {\r\n    // ...\r\n  }\r\n}\r\n```\r\n\r\nWhilst the basic problem is simple to understand, the rendering code in Fresh relied on a lot of assumptions and used Preact's `options.vnode`-API incorrectly. It assumed that it would be called as part of the synchronous render pass, which there is no guarantee for. The only guarantee this hook gives is that it's called when a vnode is created. But vnodes can be created anywhere, not just during rendering. A simple example where a vnode is created outside of rendering:\r\n\r\n```jsx\r\n// Created outside of rendering\r\nconst vnode = <div />\r\n\r\nrenderToString(vnode);\r\n```\r\n\r\nLongterm, the solution is to upstream the render state context API to `preact-render-to-string`, so that these kind of API mis-usages cannot happen and that no manual globals are needed.\r\n\r\nIn essence this PR therefore rewrites our whole rendering pipeline to get rid of any potential places to leak state across renders. This unfortunately makes the PR pretty big, but the new rendering code is much easier to follow now as a plus.\r\n\r\nFixes #1636",
                "html_url": "https://github.com/denoland/fresh/pull/1638",
                "comments": []
            },
            {
                "pr_number": 1604,
                "title": "feat: prebundle code + restore from snapshot",
                "body": "This PR allows you to prebundle all islands and other code needed for the browser ahead of time. The workflow with this is that you have a GitHub action where you build the assets and then deploy from there.\r\n\r\nPros:\r\n- Files are served as quick as deploy + fresh can serve them\r\n- No need to fetch dependencies when an isolate spins up\r\n- Makes deployments reproducible since they cannot be affected by outages from third parties like esm.sh anymore\r\n- The bigger the island code the more noticeable the speed improvement\r\n\r\nCons:\r\n- Makes deployments 10-15s longer\r\n- Requires GH Actions to be set up\r\n\r\nAssets can be generated by running `deno task build` and the `main.ts` script will pick up the snapshots automatically if one is there. When it does it prints a message to the terminal.\r\n\r\n<img width=\"775\" alt=\"Screenshot 2023-08-07 at 17 47 24\" src=\"https://github.com/denoland/fresh/assets/1062408/b6754f38-d29c-4191-9322-aefd20426e8d\">\r\n\r\n\r\nThe speed difference is best shown with a video. In the ahead of time (AOT) bundled version the agolia search loads nearly instantaneously. Go to https://fresh-www-test.deno.dev/ to see that for yourself.\r\n\r\nhttps://github.com/denoland/fresh/assets/1062408/a7191855-bd5b-423e-a36b-2bdde763660f\r\n\r\nThe main difference to #1450 is, that this accounts for plugins and includes a way to generate the bundles + snapshots directly in Fresh.\r\n\r\nFixes #1062\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1604",
                "comments": [
                    "This is a very similar approach to what I did in #1084 for a PoC. I think this is the right way to do it. +1 for the concept.",
                    "Gonna do the documentation update in another PR since the deploy page needs an overall in general.",
                    "\r\nWe should add this to the documentation.\r\n\r\n",
                    "Added a page to our documentation and I think the PR is ready to be merged.",
                    "Let me take a look!",
                    "Nice! Excited to have this land."
                ]
            },
            {
                "pr_number": 1640,
                "title": "fix: load snapshot message shown for build",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1640",
                "comments": [
                    "Merging, because that's super harmless and the test verifies the change."
                ]
            },
            {
                "pr_number": 1641,
                "title": "chore: switch to AOT build deployment",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1641",
                "comments": []
            },
            {
                "pr_number": 1639,
                "title": "chore: release 1.4.0",
                "body": ":tada:",
                "html_url": "https://github.com/denoland/fresh/pull/1639",
                "comments": []
            }
        ],
        "1.3.1": [
            {
                "pr_number": 1483,
                "title": "fix: Prevent deserialize break on safari < 15.4",
                "body": "## The problem\r\nThe `Array.prototype.at` is only available at safari >= 15.4 [caniuse](https://caniuse.com/?search=Array.prototype.at)\r\n![image](https://github.com/denoland/fresh/assets/15680320/3f351eb6-f84c-404e-ab10-35584fef55be). So, the hydration breaks in older browsers.\r\n\r\nPreview: https://deco-sites-fashion-nfcj5n1zeycg.deno.dev/\r\n\r\n## The solution\r\nThis PR changes the `.at(-1)` to `[array.length - 1]`.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1483",
                "comments": []
            },
            {
                "pr_number": 1492,
                "title": "chore: don't run tests in parallel on CI",
                "body": "Trying out if the windows CI gets more stable when we don't run our tests in parallel.",
                "html_url": "https://github.com/denoland/fresh/pull/1492",
                "comments": [
                    "Well looks like it does solve the issue.",
                    "Merging, because it unblocks the other PRs where the windows CI is failing pretty often."
                ]
            },
            {
                "pr_number": 1490,
                "title": "fix(search): add explicit target for search button deps",
                "body": "closes #1441 (hopefully \ud83e\udd1e ).\r\n\r\nfollowing the discussion in the aforementioned issue, it just might be the case that esm.sh is spitting out the wrong target for our island.\r\n\r\nthis has been also been a re-appearing issue on `fresh_charts` and `saaskit` when introducing a client-side rendered `chart.js` chart.\r\n\r\nfor further reference there's also the following issue:\r\nhttps://github.com/denoland/fresh/issues/1125\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1490",
                "comments": []
            },
            {
                "pr_number": 1480,
                "title": "fix: generate only one random Content-Security-Policy nonce per render",
                "body": "This pull request modifies the server rendering step to generate only one random Content-Security-Policy (CSP) nonce per each `render(...)` call (when CSP headers are enabled).\r\n\r\nPreviously a separate nonce was generated during rendering for each module script and the inline script. This was not strictly necessary: [one nonce for every response](https://web.dev/strict-csp/#step-1-decide-if-you-need-a-nonce-or-hash-based-csp) is enough. Having multiple nonces ends up making things (_very theoretically_) easier for an attacker's standpoint, as just one of the multiple nonces has to be guessed to circumvent the CSP.\r\n\r\nThis pull request also modifies the internal `addImport` helper to skip nonce generation, as those nonces didn't end up being used anywhere.",
                "html_url": "https://github.com/denoland/fresh/pull/1480",
                "comments": []
            },
            {
                "pr_number": 1493,
                "title": "docs: return Responses from async routes",
                "body": "Add a little section that explains that you can also return a `Response` object form an async route component.",
                "html_url": "https://github.com/denoland/fresh/pull/1493",
                "comments": []
            },
            {
                "pr_number": 1467,
                "title": "docs: update twindv1 example to resolve type issue",
                "body": "The docs currently recommend a `twind.config.ts` like this:\r\n```ts\r\nimport { defineConfig } from \"https://esm.sh/@twind/core@1.1.3\";\r\nimport presetTailwind from \"https://esm.sh/@twind/preset-tailwind@1.1.4\";\r\nimport presetAutoprefix from \"https://esm.sh/@twind/preset-autoprefix@1.0.7\";\r\n\r\nexport default {\r\n  ...defineConfig({\r\n    presets: [presetTailwind(), presetAutoprefix()],\r\n  }),\r\n  selfURL: import.meta.url,\r\n};\r\n```\r\nBut this leads to an unfriendly error in `main.ts` like this:\r\n```\r\nArgument of type '{ selfURL: string; darkMode?: DarkModeConfig; darkColor?: DarkColor<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<...>; }> | undefined; ... 7 more ...; finalize: Finalize<...>[]; }' is not assignable to parameter of type 'Options'.\r\n  Types of property 'darkColor' are incompatible.\r\n    Type 'DarkColor<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }> | undefined' is not assignable to type 'DarkColor<BaseTheme> | undefined'.\r\n      Type 'DarkColor<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }>' is not assignable to type 'DarkColor<BaseTheme>'.\r\n        Types of parameters 'context' and 'context' are incompatible.\r\n          Type 'Context<BaseTheme>' is not assignable to type 'Context<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }>'.\r\n            The types returned by 'theme()' are incompatible between these types.\r\n              Type 'BaseTheme' is not assignable to type 'BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }'.deno-ts(2345)\r\n```\r\nI don't find this particularly useful, and the issue has been raised a few times in discord. This [discussion](https://github.com/denoland/fresh/discussions/1447) links to a workaround (towards the end of the comment) that makes the red squiggle go away. Simply cast it like this: `presetTailwind() as Preset`.\r\n\r\nGiven the number of complaints about this, I think it's reasonable to add this to the example until someone finds what the real issue is.",
                "html_url": "https://github.com/denoland/fresh/pull/1467",
                "comments": [
                    "Should we perhaps raise an issue upstream? I know twind is essentially a dead project as far as I know but making a PR to fix typing doesn't seem unreasonable. I'd be willing to give it a look at some point in the near future.",
                    "Agree, seems inactive. The last serious commit was on Jan 24th. I suspect not much will come from your PR, if you choose to create it.\r\n\r\nTherefore I'm still in favor of updating what we can control here.",
                    "I think this raises a valid concern about relying on a dead library. Perhaps someone could fork it into another project that is perhaps more active?",
                    "Agree, twind seems unfortunately unmaintained and it seems to make sense to look for an alternative. For now I think it's best to keep the docs up to date and switch to something else once we decided on something."
                ]
            },
            {
                "pr_number": 1376,
                "title": "docs: add \"Using CSP\" example",
                "body": "closes https://github.com/denoland/fresh/issues/981\r\n\r\nThis took a while, but was good to learn about how CSP works (and, if I'm honest, what it is). There aren't any tests for this stuff. Maybe that can be a followup issue if we're happy with the direction here.",
                "html_url": "https://github.com/denoland/fresh/pull/1376",
                "comments": []
            },
            {
                "pr_number": 1482,
                "title": "fix: current version not updated in update check",
                "body": "Discovered an issue with the update check logic which caused the current version never to be updated once it was written into the cache file.\r\n\r\n@lino-levan I think this is the same issue you were seeing yesterday.",
                "html_url": "https://github.com/denoland/fresh/pull/1482",
                "comments": [
                    "Ah okay, given no other reports I thought I might just have another broken install \ud83d\ude05. Let me take a look.",
                    "On this branch:\r\n<img width=\"576\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/11367844/d3a6d873-f59a-48dd-ac15-3d7b2454dd20\">\r\n\r\nNice! Looks like the fix works. I still don't understand *where* it's reading the fresh version from if not from the import map, but it seems to work well now. LGTM.",
                    "Fresh creates a very small JSON file to keep track of when it last did the update check in the user's home dir. The default current version was read from `version.json`, but immediately after that we read the cache file which overwrote that version with the one in the cache file."
                ]
            },
            {
                "pr_number": 1495,
                "title": "Fix island ordering bug",
                "body": "Rendering an island that was instantiated inside an island, but was rendered outside of said island in another component, triggered an edge case which would lead to duplicated HTML. We were missing a check for when an island ends up being nested in another one to keep the current vnode stack in sync.\r\n\r\nFixes the duplicate HTML issue mentioned in #1491 .\r\n\r\nBefore:\r\n\r\n<img width=\"382\" alt=\"Screenshot 2023-07-20 at 21 02 41\" src=\"https://github.com/denoland/fresh/assets/1062408/3acc4ce9-48df-4490-81e9-b9034d65e16d\">\r\n\r\nAfter:\r\n\r\n<img width=\"367\" alt=\"Screenshot 2023-07-20 at 21 02 57\" src=\"https://github.com/denoland/fresh/assets/1062408/6163b446-4734-4f64-9808-44e166c3f84e\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1495",
                "comments": [
                    "Added a commit that fixes a very related issue where the ordering got wrong in Preact `10.16.0`. It has to do with it calling `insertBefore` instead of `appendChild` like in Preact `10.15.1`. That uncovered a bug in our `insertBefore` shim.",
                    "Merging myself, since both users of the two related issues confirmed that the changes resolve it. The changes are harmless too and have tests in place as well."
                ]
            },
            {
                "pr_number": 1498,
                "title": "chore: release 1.3.1",
                "body": "Mostly because of #1482 which would lead to the update message being shown more often than it should which is annoying.\r\n\r\nThis release contains a couple of fixes related to island ordering as well.",
                "html_url": "https://github.com/denoland/fresh/pull/1498",
                "comments": []
            }
        ],
        "1.3.0": [
            {
                "pr_number": 1298,
                "title": "www: update banner for v1.2",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1298",
                "comments": []
            },
            {
                "pr_number": 1299,
                "title": "fix(www): incorrect `changing-the-src-dir` path on  `examples` docs page",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1299",
                "comments": []
            },
            {
                "pr_number": 1301,
                "title": "www: actually link to 1.2",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1301",
                "comments": []
            },
            {
                "pr_number": 1302,
                "title": "fix: remove duplicated esbuild imports",
                "body": "This somehow snuck in during the src/build/ refactor.\n",
                "html_url": "https://github.com/denoland/fresh/pull/1302",
                "comments": []
            },
            {
                "pr_number": 1304,
                "title": "docs: fix `Signal` type typo",
                "body": "Fixes https://github.com/denoland/fresh/pull/1234#discussion_r1231793006",
                "html_url": "https://github.com/denoland/fresh/pull/1304",
                "comments": []
            },
            {
                "pr_number": 1292,
                "title": "docs: add \"initializing the server\" example",
                "body": "closes https://github.com/denoland/fresh/issues/235\r\n\r\nTurns out there's tons of gold hanging around in issues, just waiting for someone to put it out in the open for people to read. I certainly didn't think of this pattern on my own, but it's very useful.",
                "html_url": "https://github.com/denoland/fresh/pull/1292",
                "comments": []
            },
            {
                "pr_number": 1310,
                "title": "feat: Allow passing props to renderNotFound method",
                "body": "This update allows for passing custom props to `renderNotFound` method and making `_404.tsx` pages customizable based on the place it was triggered from.\r\n\r\nFixes https://github.com/denoland/fresh/issues/1300",
                "html_url": "https://github.com/denoland/fresh/pull/1310",
                "comments": []
            },
            {
                "pr_number": 1306,
                "title": "docs: add \"Using Fresh canary version\" example",
                "body": "I've done all of these things at one point or another, and I guess it would be useful if these techniques were documented.\r\n\r\nPlease help with some of the wording, in particular \"nonstandard\" and \"latest commit\". Maybe there are better words / phrases available.",
                "html_url": "https://github.com/denoland/fresh/pull/1306",
                "comments": []
            },
            {
                "pr_number": 1312,
                "title": "www: fix copy button",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1312",
                "comments": []
            },
            {
                "pr_number": 1319,
                "title": "docs: Export missing Plugin types and fix PluginAsyncRenderContext links",
                "body": "Fixes https://github.com/denoland/fresh/issues/1315",
                "html_url": "https://github.com/denoland/fresh/pull/1319",
                "comments": []
            },
            {
                "pr_number": 1318,
                "title": "fix: Exclude Twitter/Slack bots from root page redirects",
                "body": "It's caused by 307 redirects that most Open Graph protocols happily follow.\r\nUnfortunately, there's no single trivial way to \"catch\" them all, so we'll need to go the \"manual\" route for now and add them for every more widely used vendor.\r\n\r\nFixes https://github.com/denoland/fresh/issues/1313\r\n\r\n---\r\n\r\nBefore Twitter:\r\n<img width=\"588\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/1523305/8cefebb7-a3d8-4408-b037-fdbdb05006a8\">\r\n\r\nAfter Twitter:\r\n<img width=\"591\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/1523305/b7592dcd-f09d-4e6c-b8e0-fa869bd021eb\">\r\n\r\nBefore Slack:\r\n<img width=\"320\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/1523305/49badea4-11c5-473f-ae65-3cfe4b0dd99f\">\r\n\r\nAfter Slack:\r\n<img width=\"309\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/1523305/9547436f-9391-464a-8c4a-669e22f97a0b\">",
                "html_url": "https://github.com/denoland/fresh/pull/1318",
                "comments": []
            },
            {
                "pr_number": 1271,
                "title": "docs(examples): Using twind v1 + fix syntax highlighting in language",
                "body": "Went ahead and fixed the syntax highlighting in `setting-the-language` as a drive-by cleanup.",
                "html_url": "https://github.com/denoland/fresh/pull/1271",
                "comments": [
                    "ref: https://github.com/denoland/fresh/issues/1220",
                    "> Went ahead and fixed the syntax highlighting in `setting-the-language` as a drive-by cleanup.\r\n\r\nthanks",
                    "@marvinhagemeister Please take a look!",
                    "The example code gives an error:\r\n\r\n```\r\nerror: TS2345 [ERROR]: Argument of type '{ selfURL: string; darkMode?: DarkModeConfig; darkColor?: DarkColor<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<...>; }> | undefined; ... 7 more ...; finalize: Finalize<...>[]; }' is not assignable to parameter of type 'Options'.\r\n  Types of property 'darkColor' are incompatible.\r\n    Type 'DarkColor<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }> | undefined' is not assignable to type 'DarkColor<BaseTheme> | undefined'.\r\n      Type 'DarkColor<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }>' is not assignable to type 'DarkColor<BaseTheme>'.\r\n        Types of parameters 'context' and 'context' are incompatible.\r\n          Type 'Context<BaseTheme>' is not assignable to type 'Context<BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }>'.\r\n            The types returned by 'theme()' are incompatible between these types.\r\n              Type 'BaseTheme' is not assignable to type 'BaseTheme & TailwindTheme & { screens: Record<string, MaybeArray<ScreenValue>>; colors: Record<string, MaybeColorValue>; }'.\r\nawait start(manifest, { plugins: [twindPlugin(twindConfig)] });\r\n```\r\n\r\nI just created a project running `deno run -A -r https://fresh.deno.dev` and copy-paste the contents exactly as they are in the example for `main.js` and `twind.config.ts`."
                ]
            },
            {
                "pr_number": 1320,
                "title": "feat: improve starter template design",
                "body": "Made it so that the same styles apply for the twind preset and the non-twind one. When twind is not selected we'll create a plain old style sheet directly and insert it into the head via a generated `_app.tsx`.\r\n\r\nBefore:\r\n\r\n<img width=\"988\" alt=\"Screenshot 2023-06-17 at 19 03 02\" src=\"https://github.com/denoland/fresh/assets/1062408/a1f8c61a-8da2-421d-bc08-71d853327d54\">\r\n\r\nAfter:\r\n\r\n<img width=\"986\" alt=\"Screenshot 2023-06-17 at 18 59 34\" src=\"https://github.com/denoland/fresh/assets/1062408/306eb19f-1f21-47a9-8986-184c04d3136e\">\r\n\r\nFixes #1308 .",
                "html_url": "https://github.com/denoland/fresh/pull/1320",
                "comments": []
            },
            {
                "pr_number": 1317,
                "title": "feat: serialize bigints for islands",
                "body": "Ran into this one earlier today, definitely a rough edge. Hope that I didn't miss anything!",
                "html_url": "https://github.com/denoland/fresh/pull/1317",
                "comments": []
            },
            {
                "pr_number": 1275,
                "title": "feat(init): make project name as default header title",
                "body": "default header title should be same as project name",
                "html_url": "https://github.com/denoland/fresh/pull/1275",
                "comments": []
            },
            {
                "pr_number": 1233,
                "title": "docs: add \"Contributing\" section",
                "body": "This just copies the main repo, which does the job.",
                "html_url": "https://github.com/denoland/fresh/pull/1233",
                "comments": [
                    "Can you add a section to the manual about \"Contributing to `fresh`\" with instructions on tests, fmt, and lint?",
                    "I was thinking of working on https://github.com/denoland/fresh/issues/657, but then I saw this. Please close the issue once this is merged. I'd also suggest the link in `README.md` be changed to https://deno.com/manual/references/contributing#submitting-a-pr-to-fresh, so that people are taken to exactly the right place.\r\n\r\nThere's also the two closed https://github.com/denoland/fresh/pull/465 and https://github.com/denoland/fresh/pull/658. Before I delete my branch that introduces a `CONTRIBUTING.md` file (because what you have here seems like the preferred approach, I'd still recommend some sort of tips section. I had...\r\n```\r\n- [Conventional commits](https://www.conventionalcommits.org/en/v1.0.0-beta.2/#summary)\r\n  are great when titling your PR.\r\n- Tests, documentation, and examples always help to provide extra context.\r\n- You'll likely need to install\r\n  [deno-puppeteer](https://github.com/lucacasonato/deno-puppeteer#installation)\r\n  in order to run the tests.\r\n```\r\n",
                    "> I was thinking of working on #657, but then I saw this. Please close the issue once this is merged. I'd also suggest the link in `README.md` be changed to https://deno.com/manual/references/contributing#submitting-a-pr-to-fresh, so that people are taken to exactly the right place.\r\n\r\nDone and done.\r\n\r\n> - [Conventional commits](https://www.conventionalcommits.org/en/v1.0.0-beta.2/#summary) are great when titling your PR.\r\n\r\nGood idea. But this repo isn't the place to do that. I instead created an issue with this suggestion in the manual repo ([here](https://github.com/denoland/manual/issues/679)).\r\n\r\n> - Tests, documentation, and examples always help to provide extra context.\r\n\r\nMaybe let's get this PR landed first. We can explore how we can improve instructions in an issue or PR after.\r\n\r\n> - You'll likely need to install [deno-puppeteer](https://github.com/lucacasonato/deno-puppeteer#installation) in order to run the tests.\r\n\r\n~~I believe this is done anyway upon running `deno task test`~~\r\n\r\nOk, I'll add that in.",
                    "This PR is ready for review.",
                    "https://github.com/denoland/manual/blob/main/references/contributing.md?plain=1#L165\r\nWhat is the ` - this` doing at the end here? \ud83e\uddd0",
                    "Doh! Will fix \ud83e\udd72",
                    "@marvinhagemeister, PTAL. I'll fix the typo mentioned in https://github.com/denoland/fresh/pull/1233#issuecomment-1590486475 independently.",
                    "@marvinhagemeister Looks like this was inadvertently closed when manual#681 was merged."
                ]
            },
            {
                "pr_number": 1278,
                "title": "feat: don't require connInfo in request handler",
                "body": "This makes testing easier, because users now do not need to pass a\nfake `ConnInfo` themselves anymore.\n",
                "html_url": "https://github.com/denoland/fresh/pull/1278",
                "comments": []
            },
            {
                "pr_number": 1323,
                "title": "fix: incorrect coloring in ansi256 terminals",
                "body": "Looks like the built in `Terminal.app` app on macOS is the only one which doesn't support 24bit colors yet. I've attempted to work on a more generalised solution for converting color spaces in deno itself in https://github.com/denoland/deno/pull/18549 , but that takes a little more time to get ready. For now just using the closest match for fresh's brand color in `ansi256` space is a good enough.\r\n\r\n\r\nBefore:\r\n\r\n<img width=\"370\" alt=\"Screenshot 2023-06-18 at 20 23 43\" src=\"https://github.com/denoland/fresh/assets/1062408/77224899-49e8-4791-80b1-1a396c6a63b9\">\r\n\r\n\r\nAfter:\r\n<img width=\"356\" alt=\"Screenshot 2023-06-18 at 20 23 53\" src=\"https://github.com/denoland/fresh/assets/1062408/088135e5-9310-4ef7-b06d-460da4566a22\">\r\n\r\nHere is a comparison on the original color value from a terminal that supports 24bit colors and the closest ansi256 color.\r\n\r\nOriginal:\r\n\r\n<img width=\"245\" alt=\"Screenshot 2023-06-18 at 20 28 38\" src=\"https://github.com/denoland/fresh/assets/1062408/792e7efa-97ce-42d1-8bd4-e8e6f9baa2a4\">\r\n\r\n\r\nAnsi256:\r\n\r\n<img width=\"253\" alt=\"Screenshot 2023-06-18 at 20 28 18\" src=\"https://github.com/denoland/fresh/assets/1062408/8aa64d04-d52f-45c3-9d07-7561acbc4cd0\">\r\n\r\n\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1323",
                "comments": []
            },
            {
                "pr_number": 1333,
                "title": "Oldest Deno version should change to 1.31.0",
                "body": "Fresh uses `Deno.Command` since [this commit](https://github.com/denoland/fresh/commit/7e72fa236c1abc183aae31e5532af914ed060ec5) (release as [1.1.5](https://github.com/denoland/fresh/compare/1.1.4...1.1.5)) to run command. However, `Deno.Command` was first introduced in [Deno 1.28.0](https://github.com/denoland/deno/releases/tag/v1.28.0) as an unstable function and became stable at [Deno 1.31.0](https://github.com/denoland/deno/releases/tag/v1.31.0).\r\n\r\nIf you're running latest Fresh with older version of Deno, an error will be raised as below:\r\n\r\n```\r\nerror: Uncaught (in promise) TypeError: Deno.Command is not a constructor\r\n  const proc = new Deno.Command(Deno.execPath(), {\r\n               ^\r\n    at generate (https://deno.land/x/fresh@1.2.0/src/dev/mod.ts:91:16)\r\n    at https://deno.land/x/fresh@1.2.0/init.ts:378:7\r\n\r\n```\r\n\r\nTherefore, the oldest version of Deno should change to 1.31.0.\r\n\r\nIf there's any problem of this PR, please let me know. Thank you!",
                "html_url": "https://github.com/denoland/fresh/pull/1333",
                "comments": []
            },
            {
                "pr_number": 1336,
                "title": "feat(starter): add 404 page template",
                "body": "This required moving the catchall greet route to `/greet/[name].tsx`\r\n\r\nPreview:\r\n\r\n![Screenshot 2023-06-21 at 10 42 00](https://github.com/denoland/fresh/assets/1062408/84990762-c7b9-4ee3-9b8d-9da0971973bb)\r\n\r\nFixes #1335 ",
                "html_url": "https://github.com/denoland/fresh/pull/1336",
                "comments": []
            },
            {
                "pr_number": 1337,
                "title": "chore: simplify folder tests",
                "body": "Noticed while working on #1335  that we could make folder testing a little easier on the eyes.",
                "html_url": "https://github.com/denoland/fresh/pull/1337",
                "comments": []
            },
            {
                "pr_number": 1327,
                "title": "fix: `update.ts` fails when there is no islands directory",
                "body": "Fix #1326 \r\n\r\nFixed to ignore the error if the directory did not exist, referring to the change diff in #1185.",
                "html_url": "https://github.com/denoland/fresh/pull/1327",
                "comments": [
                    "I added a test to see if the command can be executed.\r\nDoes it look ok like this...?"
                ]
            },
            {
                "pr_number": 1332,
                "title": "add uspb.deno.dev",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1332",
                "comments": []
            },
            {
                "pr_number": 1325,
                "title": "add showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1325",
                "comments": []
            },
            {
                "pr_number": 1340,
                "title": "chore: add index layout to island tests",
                "body": "This PR adds links to the index route of the island fixture for nested islands. Makes it much easier to click through them.",
                "html_url": "https://github.com/denoland/fresh/pull/1340",
                "comments": [
                    "Merging myself because this only affects testing fixtures."
                ]
            },
            {
                "pr_number": 1348,
                "title": "fix: signals not serialized with newer versions",
                "body": "Newer versions of @preact/signals-core have a `toJSON` method which is called by `JSON.stringify` automatically. This means we miss signals during serialization. This PR adds a check if the value we received was from an unwrapped signal.\r\n\r\nFixes #1342",
                "html_url": "https://github.com/denoland/fresh/pull/1348",
                "comments": [
                    "@marvinhagemeister could you have a look at [preactjs/signals#389](https://github.com/preactjs/signals/issues/389)?\r\nI tried with Fresh v1.3, the signal seems to be deserialized correctly, but it becomes 2 different signals client side.\r\nI also tried with Fresh v1.2, the signal is deserialized incorrectly into primitive value, that is the same as the issue this PR fixed."
                ]
            },
            {
                "pr_number": 1349,
                "title": "fix: update script supports deno.jsonc files",
                "body": "closes https://github.com/denoland/fresh/issues/800\r\n\r\nI refactored the test a bit because it seemed to be getting a bit repetitive. There's now an `updateAndVerify` function which is called from the three cases:\r\n1. execute update command\r\n2. execute update command deno.jsonc support\r\n3. execute update command (no islands directory)",
                "html_url": "https://github.com/denoland/fresh/pull/1349",
                "comments": [
                    "It's debatable whether this \"supports\" `deno.jsonc` because although it can find the file, it still dies if the file actually uses comments? \ud83d\ude1b ",
                    "@frou can you open an issue for that so that we can track it and make sure we resolve that for the next release?"
                ]
            },
            {
                "pr_number": 1351,
                "title": "chore: remove stray console.log in tests",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1351",
                "comments": []
            },
            {
                "pr_number": 1343,
                "title": "docs: add section about \"Middleware Destination\" feature",
                "body": "closes https://github.com/denoland/fresh/issues/1341\r\n\r\nThe issue seems to be the exact case introduced by the \"middleware destination\" concept, but there isn't any documentation for it! Here's a small contribution to kick things off.",
                "html_url": "https://github.com/denoland/fresh/pull/1343",
                "comments": [
                    "Thanks again for this PR. Really appreciate it and sorry if I come off as nitpicky at times."
                ]
            },
            {
                "pr_number": 1352,
                "title": "fix link",
                "body": "real simple \u2764\ufe0f ",
                "html_url": "https://github.com/denoland/fresh/pull/1352",
                "comments": [
                    "Great, but there's a second one on the page as well. I saw this in my https://github.com/denoland/fresh/pull/1347/files, but maybe yours can sneak in first, since it's smaller."
                ]
            },
            {
                "pr_number": 1347,
                "title": "docs: add \"Dealing with CORS\" example",
                "body": "closes https://github.com/denoland/fresh/issues/1247\r\n\r\nI'll let someone who has spent more than one day thinking about CORS have the final say on how this should be phrased. But this is at least a starting point to critique / improve upon.\r\n\r\nTechnically it does even solve the problem, as evidenced by the links [here](https://github.com/denoland/fresh/issues/1247#issuecomment-1603079202). Maybe these should be included in the documentation as an example?",
                "html_url": "https://github.com/denoland/fresh/pull/1347",
                "comments": []
            },
            {
                "pr_number": 1354,
                "title": "showcase: add Battleship",
                "body": "Hello, I have created a Battleship mini game that may be a good addition to the Fresh showcase.\r\n\r\nWeb: https://battleship.deno.dev\r\nRepo: https://github.com/karelklima/battleship\r\n\r\nThe game is built with Fresh islands and Preact signals, demonstrating management of application state outside of the component tree.\r\n\r\nThank you for the consideration!",
                "html_url": "https://github.com/denoland/fresh/pull/1354",
                "comments": []
            },
            {
                "pr_number": 1353,
                "title": "fix: update script broken when using src dir",
                "body": "closes https://github.com/denoland/fresh/issues/1338\r\n\r\nThis is more complex than first expected. It turns out the head of main no longer has this error, because we started swallowing errors in https://github.com/denoland/fresh/pull/1327. I'm not sure this is the right implementation. It seems like we should explicitly check for the `islands` folder instead of ignoring errors. But the obvious approach (https://deno.land/std@0.192.0/fs/mod.ts?s=exists) is apparently forbidden, due to some sort of nonsense with race conditions. Well, not being able to find `islands` because it doesn't exist at all is definitely different than it being buried in a source directory, so we'll need to sort this out at some point.\r\n\r\nI suppose that's now some technical debt to deal with, and not related to this issue. The latest \"error\" when running `update` and using a source directory is the following:\r\n```\r\ndeno run -A -r file:///Users/reed/code/fresh/update.ts .\r\nThe manifest has been generated for 0 routes and 0 islands.\r\n```\r\ni.e. it just doesn't do anything. (To be fair, it does generate a `fresh.gen.ts` in the incorrect location, so I suppose it does _something_.)\r\n\r\nBut of course this isn't what we want. So we'll hunt for a source directory, as defined by the precense of `main.ts`.\r\n\r\nThe fix for this is relatively straightforward. The test implements the user's actions, i.e. init a project, move things, and then try to update.",
                "html_url": "https://github.com/denoland/fresh/pull/1353",
                "comments": [
                    "> This is more complex than first expected. It turns out the head of main no longer has this error, because we started swallowing errors in https://github.com/denoland/fresh/pull/1327. I'm not sure this is the right implementation. It seems like we should explicitly check for the `islands` folder instead of ignoring errors.\r\n\r\nAgree, that's a better approach than swallowing the errors. I was a bit unsure of how many review rounds would be acceptable when merging that. The initial PR had not tests and the author spent time to add extensive ones. So I figured it's good enough and kinda neat to have the tests in `main` and make a PR to address the swallowing of errors on top of that. Haven't gotten to that part yet though."
                ]
            },
            {
                "pr_number": 1356,
                "title": "ref: Make default error page container flexible to fit all content",
                "body": "Flex container will take care of the rest; centering, padding, and making it not expand unnecessarily.\r\n\r\nToo wide container (centered):\r\n<img width=\"1728\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/1523305/8d4ee8fa-0854-4eaa-8ef5-d869742d69dc\">\r\n\r\nToo narrow container (padded):\r\n<img width=\"666\" alt=\"image\" src=\"https://github.com/denoland/fresh/assets/1523305/48b2ab40-9943-4068-a376-222b1cc2919c\">\r\n\r\nFixes https://github.com/denoland/fresh/issues/1344",
                "html_url": "https://github.com/denoland/fresh/pull/1356",
                "comments": []
            },
            {
                "pr_number": 1324,
                "title": "fix: conditional sibling islands DOM order",
                "body": "This happened when both share the same parent and one or both render nothing into the DOM. Once an island starts rendering something into our root fragment that we wrap around each island, it was guaranteed to call `.appendChild()`. But when islands share the same parent this leads to children being added to the very end of the parent DOM node instead of just of the end of the current island tree.\r\n\r\nFor that reason we need to keep at least the end comment marker of an island as a reference point of where `appendChild` should insert children.\r\n\r\nFixes the first issue mentioned in #1322",
                "html_url": "https://github.com/denoland/fresh/pull/1324",
                "comments": [
                    "Random thought: Another alternative could be to insert an empty text node if we want to get rid of the comment.",
                    "Switched to using empty text nodes as markers. Seems to work too and haven't run into CSS issues so far. If something pops up in the future we can always fall back to keeping the comment marker easily."
                ]
            },
            {
                "pr_number": 1361,
                "title": "docs: add \"Creating a CRUD API\" example",
                "body": "closes https://github.com/denoland/fresh/issues/768\r\nsupersedes https://github.com/denoland/fresh/pull/853\r\n\r\nI'm not sure if this is what Ryan had in mind when opened 768. But this PR includes some working code, references Deno KV, and briefly touches on `OPTIONS` as a bonus.\r\n\r\nShould I link to https://deno.com/blog/build-crud-api-oak-denokv where I borrowed some code from? I must admit I'm a bit confused about why Andy chose to write about Oak instead of Fresh in this post...",
                "html_url": "https://github.com/denoland/fresh/pull/1361",
                "comments": [
                    "I've boldly resolved all the conversations, since I think I responded to all of your concerns. The code is definitely better now. Thanks!",
                    "Looks like my change about updating when using a source directory has introduced a flaky test. This is the second time I've seen something like the following:\r\n```\r\nerror: NotFound: No such file or directory (os error 2): rename '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/e8b1d7f8/src/fresh.gen.ts' -> '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/e8b1d7f8/fresh.gen.ts'\r\n```"
                ]
            },
            {
                "pr_number": 1362,
                "title": "fix: Use custom 500 page for *all* handlers if there is one present",
                "body": "That was a really nasty one to track down \ud83d\udc40 This issue is _not_ possible to reproduce if your method handlers are async, as they will correctly produce a promise wrapper around themselves, catching and effectively rejecting thrown errors.\r\n\r\nThe same will happen if you use middlewares (cc @deer - https://github.com/denoland/fresh/issues/1357#issuecomment-1606246219), as the `composeMiddlewares` method will call any attached middlewares first, producing a valid promise chain.\r\n\r\nCloses https://github.com/denoland/fresh/issues/1357",
                "html_url": "https://github.com/denoland/fresh/pull/1362",
                "comments": [
                    "Thanks @kamilogorek, I'm glad someone could get this sorted out. I guess I still have some work to do on my end, since I clearly don't understand promise chains, async/await, and how catch plays with the previous two.",
                    "I believe it's easier to describe it using some small snippets:\r\n\r\n```js\r\n// This will not be captured\r\nfunction foo () {\r\n    throw new Error('wat');\r\n};\r\n\r\nPromise.resolve(foo()).catch((e) => console.log('where are you!?'));\r\n```\r\n\r\n```js\r\n// This will be captured, as function producing result is already inside the promise chain\r\nasync function bar() {\r\n    return 'next please';\r\n}\r\n\r\nfunction foo () {\r\n    throw new Error('wat');\r\n};\r\n\r\nPromise.resolve(bar()).then(() => foo()).catch((e) => console.log('where are you!?'));\r\n\r\n// same goes for this one, despite function producing value for `Promise.resolve` throws\r\nPromise.resolve(bar()).then(() => Promise.resolve(foo())).catch((e) => console.log('where are you!?'));\r\n```\r\n\r\nBasically `Promise.resolve` and `Promise.reject` expect a _value_ to be passed to them. And function throwing an error will not produce one, blowing everything up \ud83d\ude05",
                    "Yup like @kamilogorek described: The error is thrown before the whole Promise stuff becomes active. That's why the `.catch()` has no effect."
                ]
            },
            {
                "pr_number": 1372,
                "title": "fix(test): cli_test now retries to move files",
                "body": "closes https://github.com/denoland/fresh/issues/1371\r\n\r\n```\r\nTest run completed. 100 runs, 0 failures.\r\n```\r\n\r\nIf anyone is curious about the file in `deno run --unstable --allow-run flaky_test_tester.ts`, it looks like this:\r\n```ts\r\nasync function main() {\r\n  const runs = 100;\r\n  let failures = 0;\r\n\r\n  for (let i = 0; i < runs; i++) {\r\n    console.log(`Run #${i + 1}`);\r\n\r\n    const command = new Deno.Command(\"deno\", {\r\n      args: [\"task\", \"test\"],\r\n    });\r\n\r\n    const result = await command.output();\r\n\r\n    const textDecoder = new TextDecoder();\r\n    const stdout = textDecoder.decode(result.stdout);\r\n    const stderr = textDecoder.decode(result.stderr);\r\n\r\n    await Deno.writeTextFile(`run${i + 1}.log`, stdout);\r\n\r\n    if (!result.success) {\r\n      console.log(\"Test failed with error:\", stderr);\r\n      failures++;\r\n    }\r\n  }\r\n\r\n  console.log(`Test run completed. ${runs} runs, ${failures} failures.`);\r\n}\r\n\r\nmain();\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1372",
                "comments": [
                    "I dunno, I ran this locally 100 times and didn't get any leaking async ops. Thoughts?"
                ]
            },
            {
                "pr_number": 1360,
                "title": "refactor: changed Handlers type to MultiHandler",
                "body": "This PR is for issue #1350 \r\n\r\nHey @marvinhagemeister, I did not get what you meant in the 4th step. Kindly help me out here \r\nhttps://github.com/denoland/fresh/issues/1350#issuecomment-1605394508",
                "html_url": "https://github.com/denoland/fresh/pull/1360",
                "comments": [
                    "@aushwin i think what @marvinhagemeister meant was to check that the user exported a function called `handlers` (with an \"s\") instead of `handler` (without an \"s\"). this would help detect confused users who try to create a `handler` but naming the function incorrectly might lead them to think their `handler` is not working, bang their head against their desk for 3 days, and then plunge into depression as they realise they had an extra \"s\" in their function name. but maybe i misunderstood",
                    "@tgy Yeah exactly. I think the type hints in the editor are good enough and gets us 80% there already. Like you said, I was referring to checking the actual exported values from the modules which might be neat. It's more for bonus points and can happen in another PR too.",
                    "@marvinhagemeister @tgy  is it something like this \r\n`MODULE_EXPORT_HANDLERS` is a constant for the string `handlers`\r\n![image](https://github.com/denoland/fresh/assets/54993680/2d59adb7-bc29-4c12-bba4-d75588879504)\r\n\r\nAnd am getting this error in my terminal.\r\n![image](https://github.com/denoland/fresh/assets/54993680/c0e4be38-43c5-4aed-a7dd-6b37fc477bef)\r\n\r\n",
                    "But I guess we need to show this in the error container right ? ",
                    "Hi @marvinhagemeister Any updates on this ?"
                ]
            },
            {
                "pr_number": 1264,
                "title": "feat: state in props",
                "body": "Standing on the shoulders of giants here.\r\nsupersedes: https://github.com/denoland/fresh/pull/1145 & https://github.com/denoland/fresh/pull/833\r\ncloses: https://github.com/denoland/fresh/issues/1128, closes https://github.com/denoland/fresh/issues/663\r\n\r\nNow that `AppProps` extends `PageProps` (thanks to https://github.com/denoland/fresh/pull/1229), there seems to be some duplication of issues and PRs. https://github.com/denoland/fresh/issues/663 (state in `_app`) is a special case of https://github.com/denoland/fresh/issues/1128 (state in props). Likewise, https://github.com/denoland/fresh/pull/833 (add state to `AppProps`) is a special case of https://github.com/denoland/fresh/pull/1145 (add state to `PageProps`).\r\n\r\nBoth the PRs were incredibly instructive to me, but both seemed to get stuck at that classic last hurdle: tests and docs. I've tried my hand at modifying the docs to reference state being available (I think this is ok) and at writing tests (not so sure about this part). Of course I'm happy to receive feedback on all parts (especially including the right way to dust off someone's old PR for something I'm interested in moving forward).",
                "html_url": "https://github.com/denoland/fresh/pull/1264",
                "comments": [
                    "> A thought that crossed my mind is that with the introduction of `state`, we now have `pageProps.data` and `pageProps.state`. Like when is something `data` and when should it be `state`? Or should this be merged into one? I'm unsure myself and curious about what others think about this.\r\n\r\nMy understanding is that `state` comes from middleware and `data` comes from the `Handler` in the same file. This is based on https://fresh.deno.dev/docs/concepts/middleware and https://fresh.deno.dev/docs/concepts/data-fetching.",
                    "Thanks Lino. If I'm honest, the thing I'm most excited for here is that it closes two issues and we can close another PR as no longer necessary \ud83d\ude05 ",
                    "Glad my PR was helpful to you! Thanks for carrying this through to the end! :heart: "
                ]
            },
            {
                "pr_number": 1365,
                "title": "docs: add \"Handling complex routes\" example",
                "body": "In my quest for understanding, I wanted to understand how `RouteConfig` works. I noticed there wasn't an example about using `routeOverride`, so I decided to document what I learned. I've included two sample routes in increasing order of complexity. Let me know if I'm missing something or if there are any changes. Nothing suggestion is too nitpicky!",
                "html_url": "https://github.com/denoland/fresh/pull/1365",
                "comments": [
                    "It strikes again:\r\n```\r\nerror: PermissionDenied: Access is denied. (os error 5): rename 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\7a5dd5d2\\src\\fresh.gen.ts' -> 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\7a5dd5d2\\fresh.gen.ts'\r\n```\r\n\r\nI'll create an issue for this.",
                    "Another great PR \ud83c\udf89 "
                ]
            },
            {
                "pr_number": 1307,
                "title": "docs: add \"Rendering markdown\" example",
                "body": "closes https://github.com/denoland/fresh/issues/1213",
                "html_url": "https://github.com/denoland/fresh/pull/1307",
                "comments": []
            },
            {
                "pr_number": 1368,
                "title": "Add: Refactor code on raw file to improve readability",
                "body": "### Description\r\nAs i already describe on the issue i opened this is for code readability and to improve the quality of the code\r\n\r\nIssue: #1367  ",
                "html_url": "https://github.com/denoland/fresh/pull/1368",
                "comments": [
                    "Thanks for opening a PR! Always great to see new contributors. I'm a little confused as to how the proposed changes would make the code better. What does the `switch`-statement with the additional `true` check improve over the `if`-statement?",
                    "Hey @marvinhagemeister,\r\n- Readibility: I found that making a if else statement make the code a little less readable\r\n- Scalabilty: this is not the main option but in case we want to add more cases it would be easier to scale it.\r\nThis is basically it, i hope you find this helpful. \r\nThanks for the reply.",
                    "> - Readibility: I found that making a if else statement make the code a little less readable\r\n> - Scalabilty: this is not the main option but in case we want to add more cases it would be easier to scale it.\r\n\r\nI feel like this is less a fact but rather highly subjective and comes down to personal preference. The switch statement adds an unnecessary condition here and has the potential issue of the fallthrough semantics when forgetting a `break` statement.\r\n\r\nI'm with you that there is lots of repeated calls in both approaches. What do you think of using a table instead? Something like:\r\n\r\n```js\r\nimport { extname } from \"$std/path/mod.ts\";\r\n\r\nconst contentTypes = new Map([\r\n  [\".html\", \"text/plain\"],\r\n  [\".ts\", \"application/typescript\"],\r\n  [\".js\", \"application/javascript\"],\r\n  [\".tsx\", \"text/tsx\"],\r\n  [\".jsx\", \"text/jsx\"],\r\n  [\".json\", \"application/json\"],\r\n  [\".wasm\", \"application/wasm\"],\r\n]);\r\n\r\nconst value = contentTypes.get(extname(path)) ?? \"text/plain\";\r\nresponse.headers.set(\"Content-Type\", value);\r\n```",
                    "Well that indeed looks like a better solution, it improves the code readability and scalability. \r\nI found this to be a good alternative.\r\nIf you wish i can add a new commit for this new alternative :).\r\nThanks so much for the discussion!",
                    "Go for it. Feel free to add this to this PR.",
                    "I've add a the isHtml statement that i found that is needed for my understanding. If it is not let me know and would be happy to remove isHtml variable and accept variable. \r\nThanks.",
                    "I've reviewed your comments and fix them :)",
                    "I could just add a ! at the end\r\nconst value = isHTML ? \"text/plain\" : contentTypes.get(extname(path))!\r\nbut since we want a default value in case of nullish or undefined i've add the ?? \"text/plain\"\r\nconst value = isHTML ? \"text/plain\" : contentTypes.get(extname(path)) ?? \"text/plain\";",
                    "I've to remove a white space while formatting"
                ]
            },
            {
                "pr_number": 1311,
                "title": "docs: add \"Sharing state between islands\" example",
                "body": "closes https://github.com/denoland/fresh/issues/1248\r\n\r\nI'm definitely not sure if this is what Luca was looking for when he opened 1248. I've basically just lifted the code from https://fresh-with-signals.deno.dev/ with a minimal amount of explanation. Breaking it down like this was super helpful for my personal understanding; not sure if it's good for others.",
                "html_url": "https://github.com/denoland/fresh/pull/1311",
                "comments": [
                    "Is there a way to retrigger tests without a new commit?"
                ]
            },
            {
                "pr_number": 1377,
                "title": "fix: terminal color glitches",
                "body": "Thanks to @sigmaSd for finding out that the glitchiness was caused by the newline. With the changes in this PR the linked issue is resolved for me.\r\n\r\nFixes https://github.com/denoland/deno/issues/19668",
                "html_url": "https://github.com/denoland/fresh/pull/1377",
                "comments": []
            },
            {
                "pr_number": 1279,
                "title": "www: landing page redesign",
                "body": "Scroll down for a screenshot.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1279",
                "comments": [
                    "There was a bit of an internal discussion about keeping the lemon drop as is internally. So I've removed those changes from the PR. I think it's ready to land now.\r\n\r\n![localhost_8000_ (3) 1](https://github.com/denoland/fresh/assets/1062408/eef4f81d-0246-4837-b516-05ebeb7245dd)\r\n\r\n\r\n"
                ]
            },
            {
                "pr_number": 1383,
                "title": "fix(showcase): reorder to have blank entry at the bottom",
                "body": "Looks like the battleship entry (which is very cool!) displaced the special blank entry at the bottom. This reorders things correctly. I also snuck in a very small change to the blank entry to improve the grammar:\r\n`... for prevent conflicting by ...` -> `... for preventing conflicts by ...`",
                "html_url": "https://github.com/denoland/fresh/pull/1383",
                "comments": []
            },
            {
                "pr_number": 1382,
                "title": "fix: update import map to satisfy vs code",
                "body": "As I was working on 1381 I needed to debug something in `www`. So I went to `www/dev.ts`, hit F5, and was promptly greeted with the following lovely message:\r\n```\r\n/usr/local/bin/deno run --import-map ./.vscode/import_map.json --inspect-wait --allow-all ./www/dev.ts\r\nThe manifest has been generated for 10 routes and 5 islands.\r\nmod.ts:129\r\nUncaught TypeError TypeError: Relative import path \"$ga4\" not prefixed with / or ./ or ../ and not in import map from \"file:///Users/reed/code/fresh/www/routes/_middleware.ts\"Debugger listening on ws://127.0.0.1:9229/ws/52d919e4-6c10-464f-acfc-b4613faf48e5\r\nVisit chrome://inspect to connect to the debugger.\r\nDeno is waiting for debugger to connect.\r\nDebugger session started.\r\nerror: Uncaught (in promise) TypeError: Relative import path \"$ga4\" not prefixed with / or ./ or ../ and not in import map from \"file:///Users/reed/code/fresh/www/routes/_middleware.ts\"\r\n    at file:///Users/reed/code/fresh/www/routes/_middleware.ts:3:54\r\n  await import(entrypoint);\r\n  ^\r\n    at async dev (file:///Users/reed/code/fresh/src/dev/mod.ts:158:3)\r\n    at async file:///Users/reed/code/fresh/www/dev.ts:5:1\r\nProcess exited with code 1\r\n```\r\n\r\nOf course it happily starts from the command line, but vs code is special. But if we update the `.vscode/import_map.json` like so, then it will happily start. This also makes the dreaded red squiggles in `www/routes/_middleware.ts` go away.",
                "html_url": "https://github.com/denoland/fresh/pull/1382",
                "comments": []
            },
            {
                "pr_number": 1380,
                "title": "feat(starter): always initialize _app.tsx",
                "body": "https://github.com/denoland/fresh/pull/1320 introduced `_app.tsx` when not using twind. This PR makes it so that `_app.tsx` is always initialized. There was recently a [discussion](https://discord.com/channels/684898665143206084/991511118524715139/1124360575074455604) in discord about this, and there's some confusion about layouts/templates. I thought I would take a look, and was surprised to see that we _do_ initialize `_app.tsx`, but not in all cases.\r\n\r\nWhen using twind, we now produce a nice boring `_app.tsx` for people like this:\r\n```tsx\r\nimport { AppProps } from \"$fresh/server.ts\";\r\n\r\nexport default function App({ Component }: AppProps) {\r\n  return (\r\n    <>\r\n      <Component />\r\n    </>\r\n  );\r\n}\r\n```\r\n\r\nAdditionally, I noticed that there was a blank line at the top of `_app.tsx` when not using twind; I removed that line here.",
                "html_url": "https://github.com/denoland/fresh/pull/1380",
                "comments": []
            },
            {
                "pr_number": 1370,
                "title": "Add: Add a string type to know that our function will return a string",
                "body": "### Description\r\nAdd a type for the function to know that it will return a string\r\n\r\nIssue: #1369 ",
                "html_url": "https://github.com/denoland/fresh/pull/1370",
                "comments": [
                    "Do we actually need this? It seems like typescript can always infer that this returns a string, so I'm not sure what this does. That being said, I'm still new to typescript, so maybe I'm missing something.\r\n\r\nIf anything, it seems like we should _remove_ the static typing from the 2nd method in this file, `assetSrcSet`. It's currently declared like this:\r\n```ts\r\nexport function assetSrcSet(srcset: string): string {\r\n```\r\nand returns like this:\r\n```ts\r\n  return constructed.join(\",\");\r\n```\r\nso we know (and so does typescript) it always returns a string.",
                    "@deer It's more of a cosmetic change, since like you said TS can infer those types. It would help in cases where changes suddenly change the inferred return type though. But that said in all the years working with TS my experience is that this is more of a theoretical risk that I haven't encountered in practice. But I don't mind if somebody wants to add these return types to ramp up on the code base. So I'm happy to merge such PRs when CI passes. ",
                    "It's just like @marvinhagemeister said. It's more about a theoretical risk rather than an actual risk and also for me is to continue with the typing just like i've seen in other functions just like the next one which has a :string as a return. \r\nThank you both!"
                ]
            },
            {
                "pr_number": 1389,
                "title": "chore: extract `withPageName` util",
                "body": "Noticed that I need it in other test files too whilst working on new features. This PR extracts this helper to the `test_utils` file.",
                "html_url": "https://github.com/denoland/fresh/pull/1389",
                "comments": []
            },
            {
                "pr_number": 1393,
                "title": "fix(server): properly sanitize island names",
                "body": "closes https://github.com/denoland/fresh/issues/1391\r\n\r\nThis was interesting to debug. I was able to reproduce the case and saw the following in the `sources` tab:\r\n```js\r\nconst ST = document.getElementById(\"__FRSH_STATE\").textContent;const STATE = JSON.parse(ST).v;import { revive } from \"/_frsh/js/546c8cc610e5f6749bbb353f6c3518c35ac0ff22/main.js\";import Firstsecond/DoubleNested from \"/_frsh/js/546c8cc610e5f6749bbb353f6c3518c35ac0ff22/island-firstsecond/doublenested.js\";revive({firstsecond/doublenested:Firstsecond/DoubleNested,}, STATE[0]);\r\n```\r\n\r\nThat's not good, variables shouldn't have slashes in them!\r\n\r\nAfter a bit of hunting, eventually found this block:\r\n```ts\r\nconst path = url.substring(baseUrl.length).substring(\"islands\".length);\r\nconst baseRoute = path.substring(1, path.length - extname(path).length);\r\nconst name = sanitizeIslandName(baseRoute);\r\nconst id = name.toLowerCase();\r\nif (typeof module.default !== \"function\") {\r\n  throw new TypeError(\r\n    `Islands must default export a component ('${self}').`,\r\n  );\r\n}\r\nislands.push({ id, name, url, component: module.default });\r\n```\r\nwhich is making the actual islands.\r\n\r\nTurns out we're not sanitizing correctly.\r\n```ts\r\nfunction sanitizeIslandName(name: string): string {\r\n  const fileName = name.replace(\"/\", \"\");\r\n  return toPascalCase(fileName);\r\n}\r\n```\r\nThis is only going to strip the first slash. After 1185 was merged, we might have many slashes. I applied a fix, and then I got the following:\r\n```js\r\nconst ST = document.getElementById(\"__FRSH_STATE\").textContent;const STATE = JSON.parse(ST).v;import { revive } from \"/_frsh/js/2e0bfa95a39161dcd4b0c6dd1bb7d0c02fadf6a5/main.js\";import First_second_DoubleNested from \"/_frsh/js/2e0bfa95a39161dcd4b0c6dd1bb7d0c02fadf6a5/island-first_second_doublenested.js\";revive({first_second_doublenested:First_second_DoubleNested,}, STATE[0]);\r\n```\r\nThis looks better and makes the errors go away in the browser's console. Adding a test case and reverting my fix causes the test to fail. Reapplying the fix causes the new test to pass. \ud83d\ude4c ",
                "html_url": "https://github.com/denoland/fresh/pull/1393",
                "comments": []
            },
            {
                "pr_number": 1396,
                "title": "fix: change MultiHandler back to Handlers",
                "body": "This PR reverts #1360 . The deprecation of the `Handlers` type caused a bit of churn in our docs. After a bit of back and forth internally we felt that keeping it `Handlers` and throwing an error instead, when a `handlers` export detected is a better approach.\r\n\r\nAn additional benefit is that the object notation is more widely used and it makes sense to make that as ergonomic as possible.\r\n\r\nFixes #1350",
                "html_url": "https://github.com/denoland/fresh/pull/1396",
                "comments": [
                    "What about using a `handlers` variable name instead of `handler`? That makes the most sense to me.",
                    "@iuioiua that in itself would be a breaking change if we just changed that. We could allow both, but that's also weird.",
                    "True. How much would it complicate things if we supported both during a deprecation period, _if_ we were to do so? To elaborate, I'd assume that having a `handlers` variable name match its type name `Handlers` would be most apparent to a newcomer."
                ]
            },
            {
                "pr_number": 1397,
                "title": "feat(server): multiple island exports",
                "body": "closes https://github.com/denoland/fresh/issues/1394\r\n\r\nI'm not sure if there's a good reason we had this code:\r\n```ts\r\nthrow new TypeError(\r\n  `Islands must default export a component ('${self}').`,\r\n);\r\n```\r\nother than the fact that we just didn't get around to improving it. If so, then consider this the improvement \ud83d\ude04 \r\n\r\nThis stuff was all a bit confusing at first, but I suppose it makes sense now. The basic approach is to start keeping track of the `exportName` for the island, and looping over all the exports of the module. Then we need to pass the `exportName` out to the client as well.\r\n\r\nThis change has the breaking effect of changing the client code we emit. This is visible in the diff to `main_test` where the asserted name goes from `test.js` to `test_default.js`. But this isn't part of the API, so people shouldn't be doing anything with this. If they are, they'll have to switch \ud83d\ude05 \r\n\r\nHere's an example of some islands (from the test case):\r\n```ts\r\n{\r\n  id: \"multiplecounters_default\",\r\n  name: \"MultipleCounters\",\r\n  url: \"file:///Users/reed/code/fresh/tests/fixture/islands/MultipleCounters.tsx\",\r\n  component: [Function: CounterZero],\r\n  exportName: \"default\"\r\n}\r\n{\r\n  id: \"multiplecounters_counterone\",\r\n  name: \"MultipleCounters\",\r\n  url: \"file:///Users/reed/code/fresh/tests/fixture/islands/MultipleCounters.tsx\",\r\n  component: [Function: CounterOne],\r\n  exportName: \"CounterOne\"\r\n}\r\n{\r\n  id: \"multiplecounters_countertwo\",\r\n  name: \"MultipleCounters\",\r\n  url: \"file:///Users/reed/code/fresh/tests/fixture/islands/MultipleCounters.tsx\",\r\n  component: [Function: CounterTwo],\r\n  exportName: \"CounterTwo\"\r\n}\r\n{\r\n  id: \"folder_subfolder_counter_default\",\r\n  name: \"Folder_subfolder_Counter\",\r\n  url: \"file:///Users/reed/code/fresh/tests/fixture/islands/folder/subfolder/Counter.tsx\",\r\n  component: [Function: Counter],\r\n  exportName: \"default\"\r\n}\r\n```\r\n\r\nWith the above islands, we now emit html (what's the right way to say this?) like this:\r\n```html\r\n<!--frsh-multiplecounters_default:default:0-->\r\n<div id=\"counter0\">\r\n    <p>4</p>\r\n    <button id=\"b-counter0\" disabled>+1</button>\r\n</div>\r\n<!--/frsh-multiplecounters_default:default:0-->\r\n<!--frsh-multiplecounters_counterone:CounterOne:1-->\r\n<div id=\"counter1\">\r\n    <p>3</p>\r\n    <button id=\"b-counter1\" disabled>+1</button>\r\n</div>\r\n<!--/frsh-multiplecounters_counterone:CounterOne:1-->\r\n<!--frsh-multiplecounters_countertwo:CounterTwo:2-->\r\n<div id=\"counter2\">\r\n    <p>10</p>\r\n    <button id=\"b-counter2\" disabled>+1</button>\r\n</div>\r\n<!--/frsh-multiplecounters_countertwo:CounterTwo:2-->\r\n<!--frsh-folder_subfolder_counter_default:default:3-->\r\n<div id=\"counter3\">\r\n    <p>4</p>\r\n    <button id=\"b-counter3\" disabled>+1</button>\r\n</div>\r\n<!--/frsh-folder_subfolder_counter_default:default:3-->\r\n```\r\nNote this is coming from the change to the comment generation:\r\n```ts\r\n`frsh-${island.id}:${island.exportName}:${ISLAND_PROPS.length - 1}`\r\n```\r\nWe now pass out the `exportName` to enable the lookup within the module. It looks a bit silly for default exports, because the `id` also has `default` in it as well. Open to suggestions here. I went around in circles trying to simplify this, but eventually just left it.\r\n\r\nFinally we get a script like this:\r\n```js\r\nimport * as MultipleCounters_default from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-multiplecounters_default.js\";import * as MultipleCounters_CounterOne from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-multiplecounters_counterone.js\";import * as MultipleCounters_CounterTwo from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-multiplecounters_countertwo.js\";import * as Folder_subfolder_Counter_default from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-folder_subfolder_counter_default.js\";revive({multiplecounters_default:MultipleCounters_default,multiplecounters_counterone:MultipleCounters_CounterOne,multiplecounters_countertwo:MultipleCounters_CounterTwo,folder_subfolder_counter_default:Folder_subfolder_Counter_default,}, STATE[0]);\r\n```\r\n(Oh, you don't find that easy to read? Me too. Please help. When testing this I manually went and inserted `\\n` to the necessary places in `render.ts` so the client code looks nice. Seems like a good use case for the dev tools issue, where Bartek writes: `Currently Fresh's server doesn't know if it's running in dev mode or not, the dev script is a thin wrapper that generates the manifest and watches for file changes.`)\r\n\r\nSo the formatted version is like this:\r\n```js\r\nimport * as MultipleCounters_default from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-multiplecounters_default.js\";\r\nimport * as MultipleCounters_CounterOne from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-multiplecounters_counterone.js\";\r\nimport * as MultipleCounters_CounterTwo from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-multiplecounters_countertwo.js\";\r\nimport * as Folder_subfolder_Counter_default from \"/_frsh/js/48d9737696c04a606a9f9aaddd5b8b17411852dd/island-folder_subfolder_counter_default.js\";\r\nrevive({multiplecounters_default:MultipleCounters_default,multiplecounters_counterone:MultipleCounters_CounterOne,multiplecounters_countertwo:MultipleCounters_CounterTwo,folder_subfolder_counter_default:Folder_subfolder_Counter_default,}, STATE[0]);\r\n```\r\n\r\nAnd with that I think everything is covered, and there should be enough examples to understand what's going on. I am very happy to receive suggestions on how to simplify this, since I spent far too long trying various things.",
                "html_url": "https://github.com/denoland/fresh/pull/1397",
                "comments": []
            },
            {
                "pr_number": 1399,
                "title": "chore(www): use View Transitions API",
                "body": "This PR enables [View Transition API](https://developer.chrome.com/docs/web-platform/view-transitions/) on fresh.deno.dev.\r\n\r\nWatch the video below to see the difference in behavior.\r\n\r\nNote: For now, you'll need to enable a flag in Chrome to actually try this feature out. (`chrome://flags/#view-transition-on-navigation`)\r\n\r\n**before:**\r\n\r\nhttps://github.com/denoland/fresh/assets/40050810/6ffe6dd0-e7d7-4298-8c84-f38861612cbb\r\n\r\n**after:**\r\n\r\nhttps://github.com/denoland/fresh/assets/40050810/a2d48642-3017-47ef-8953-aec9c0ce6241\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1399",
                "comments": []
            },
            {
                "pr_number": 1381,
                "title": "feat(docs): convert toc to .ts",
                "body": "To make conflicts easier to deal with, we should have a blank line at the end to essentially have a trailing comma. Now we can add a new entry _before_ the blank row without touching any other rows. Borrowed the idea from the showcase.",
                "html_url": "https://github.com/denoland/fresh/pull/1381",
                "comments": [
                    "or should this be `feat(www)`? \ud83e\udd14",
                    "What worked for [denobyexample](https://github.com/denoland/denobyexample/blob/main/toc.ts) is just making the file a typescript file and exporting an object. JS allows trailing commas. I feel like that would be a cleaner solution.",
                    "> What worked for [denobyexample](https://github.com/denoland/denobyexample/blob/main/toc.ts) is just making the file a typescript file and exporting an object. JS allows trailing commas. I feel like that would be a cleaner solution.\r\n\r\nGood idea, that does sound better. Will update when I get a chance.",
                    "+1 on turning it into `.ts` file. Makes typing easier too."
                ]
            },
            {
                "pr_number": 1400,
                "title": "www: add versioning to docs",
                "body": "This PR adds versioning to our documentation. We ran into the scenario where we're documenting a feature that landed in `main`, but wasn't released in a stable version. This led to confusion because the docs didn't match the released version.\r\n\r\nI've went a bit back and forth on the various approaches to versioning and I think I landed on a way that's best for our project and least maintenance intensive. In particular I wanted to avoid a situation where we need to copy all content files and have to backport updates between them. That should only be necessary when we do breaking changes like release Fresh 2.0 or something.\r\n\r\nTo resolve that the versioning follows the one chosen by https://eslint.org/docs/latest/ . Their strategy is to have one current version and one canary. There are no other versions. They implemented it in a way that the repo only contains the canary version and each release copies the canary version to a release version that's then pulled from some storage during the CI step. I very much like the overall approach of having one current and one canary version, but I wanted to avoid the CI logic and keep things simple.\r\n\r\nInstead we have simply two version folders: One current and for canary. The canary folder can inherit pages from the current folder, which avoids us having to sync content.\r\n\r\ntl;dr:\r\n- Links are all the same as without this PR. Canary versions have `/canary` suffix\r\n- Canary docs can inherit pages from current docs to not have to copy everything over\r\n\r\n<img width=\"446\" alt=\"Screenshot 2023-07-03 at 16 40 51\" src=\"https://github.com/denoland/fresh/assets/1062408/688fffd2-a6c9-468e-a44a-f2bba18c127f\">\r\n<img width=\"428\" alt=\"Screenshot 2023-07-03 at 16 40 55\" src=\"https://github.com/denoland/fresh/assets/1062408/835921fe-c404-466b-b2b5-a7c7f790009b\">\r\n\r\nTODO:\r\n- Add tests\r\n- Rename `1.2` to something else but show the version in the version selector.\r\n\r\nFixes #1392 ",
                "html_url": "https://github.com/denoland/fresh/pull/1400",
                "comments": [
                    "This seems to strike the right balance between ease of implementation and functionality, given that it's just you on the team! Let me know once this is fully ready and I will check it out and try poking around with making some doc changes, to test the experience.",
                    "These changes are a little more than I had hoped, but couldn't find a way to make the PR smaller, without breaking the feature. It's best to review this on the deploy preview instance.",
                    "I made a fictitious change to the `Architecture` page and updated the `toc` and got the following diff:\r\n```diff\r\ndiff --git a/docs/toc.ts b/docs/toc.ts\r\nindex 2019f77..2b98e07 100644\r\n--- a/docs/toc.ts\r\n+++ b/docs/toc.ts\r\n@@ -44,7 +44,7 @@ const toc: RawTableOfContents = {\r\n         title: \"Concepts\",\r\n         link: \"latest\",\r\n         pages: [\r\n-          [\"architecture\", \"Architecture\", \"link:latest\"],\r\n+          [\"architecture\", \"Architecture\", \"link:canary\"],\r\n```\r\nEverything works as expected -- i.e. I can swap between the pages using your spiffy dropdown and the content changes accordingly. This makes it easy enough to add new pages. But what does the release strategy look like? Seems like we'll need to manually go through and move the canary pages back to the default locations, and then maybe update the canary toc.\r\n\r\nI suppose we could just leave the canary toc, with the strategy being that all updates go into these docs, and then once per release the release version is overwritten. Am I missing something obvious?",
                    "Current plan is to add docs for new features in fresh to the canary version and improving documentation for existing stuff can happen in the latest version. It's true that making those new pages available in current is a bit of manual work. I'm hoping that it won't be too much and if it becomes an issue we can change it.\r\n\r\nMy thinking behind it was that otherwise improvements to the current docs would only come out on a monthly basis or would need to be done both for the latest and the canary version. But then again, maybe that's not so bad? I don't know, happy to change if the current workflow doesn't work out.\r\n\r\n@deer what do you think would make it easiest for you? I'm curious about your thoughts on that.",
                    "I'm happy to try out the newest approach and see what happens. As you said, it can always be changed. And, given that I don't have to worry about releasing new versions, I don't think I'm impacted by the worst part \ud83d\ude02  "
                ]
            },
            {
                "pr_number": 1411,
                "title": "adding Kanji.Academy to fresh showcase",
                "body": "Adding my 3D japanese characters learning website to fresh showcase",
                "html_url": "https://github.com/denoland/fresh/pull/1411",
                "comments": []
            },
            {
                "pr_number": 1419,
                "title": "chore(docs): cleanup miscellaneous items",
                "body": "closes https://github.com/denoland/fresh/issues/1417\r\n\r\nThis is a bunch of minor cleanup. There are three primary categories (the issue has the full list):\r\n* ensure current docs don't reference new features\r\n  * primarily state in props (not released yet, deleted references from current docs)\r\n  * canary islands no longer references the requirement to have a default export\r\n* consistency of filenames at the top of examples and snippets\r\n* minor grammar changes and similar improvements\r\n\r\nAdditionally a change was made to use the output of `tree` when referencing a folder structure in `concepts/middleware.md`. This matches other parts of the documentation and I think it's more intuitive to understand than a bulleted list.",
                "html_url": "https://github.com/denoland/fresh/pull/1419",
                "comments": []
            },
            {
                "pr_number": 1431,
                "title": "feat: make vscode-deno default formatter",
                "body": "The Prettier extension setting are language specific and would take preference over the global default formatter setting. This lead to the extensions constantly fighting on who gets to format the code on my machine.",
                "html_url": "https://github.com/denoland/fresh/pull/1431",
                "comments": []
            },
            {
                "pr_number": 1428,
                "title": "chore: bump dependencies",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1428",
                "comments": []
            },
            {
                "pr_number": 1434,
                "title": "feat(init.ts): enable lint rules for fresh apps",
                "body": "`deno lint` now supports rules for fresh apps, such as `fresh-handler-export` and `fresh-server-event-handlers`.  This change enables those rules in the project generated by `init.ts`.",
                "html_url": "https://github.com/denoland/fresh/pull/1434",
                "comments": []
            },
            {
                "pr_number": 1438,
                "title": "docs: fix file locations in comments of crud api",
                "body": "closes https://github.com/denoland/fresh/issues/1436\r\n\r\nThis wasn't a regression from my recent cleanup when I standardized filenames in examples, but was wrong when I introduced the example. Oops \ud83d\ude48 ",
                "html_url": "https://github.com/denoland/fresh/pull/1438",
                "comments": [
                    "One thing to keep in mind when doing this: I forgot to check to see if we've branched this doc for canary. Fortunately we hadn't, but just a heads up in case you forgot to check as well."
                ]
            },
            {
                "pr_number": 1423,
                "title": "www: update docs design",
                "body": "This updates the doc page design on larger screen. Best explained via screenshots.\r\n\r\nBefore:\r\n\r\n<img width=\"1214\" alt=\"Screenshot 2023-07-08 at 10 47 40\" src=\"https://github.com/denoland/fresh/assets/1062408/c79266b2-1bde-4ade-a9c4-ad191770d60b\">\r\n\r\nAfter:\r\n\r\n<img width=\"1369\" alt=\"Screenshot 2023-07-08 at 10 47 47\" src=\"https://github.com/denoland/fresh/assets/1062408/2771a7f3-8c04-4766-9422-e407fc9a5a16\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1423",
                "comments": []
            },
            {
                "pr_number": 1402,
                "title": "www: hopefully fix agolia search exceptions",
                "body": "Using the search on the production instance throws a couple of exceptions when using it.\r\n\r\n<img width=\"589\" alt=\"Screenshot 2023-07-03 at 22 31 19\" src=\"https://github.com/denoland/fresh/assets/1062408/2d6929d7-dff5-4ea6-8359-b0178994d7db\">\r\n\r\nTook a while to investigate, because I couldn't reproduce it locally at first. So what's happening is that we use the native `esbuild` binary locally, but use the `wasm` build on deploy. The wasm build of the `esbuild` version we used seems to have a bug and messes up a variable somewhere. Forcing that to be used locally allowed me to reproduce the error. I couldn't pinpoint to exactly where it was going wrong, but simply updating `esbuild` resolves this.",
                "html_url": "https://github.com/denoland/fresh/pull/1402",
                "comments": [
                    "CI error makes me thing that there is an issue with wasm in deno. I can reproduce this outside of testing too.\r\n\r\n```sh\r\nTypeError: NetworkError when attempting to fetch resource.\r\n    at async mainFetch (ext:deno_fetch/26_fetch.js:266:12)\r\n    at async fetch (ext:deno_fetch/26_fetch.js:490:7)\r\n    at async tryToInstantiateModule (https://deno.land/x/esbuild@v0.18.11/wasm.js:1765:682)\r\n```"
                ]
            },
            {
                "pr_number": 1442,
                "title": "feat: support Preact error boundaries",
                "body": "This PR adds support for Preact error boundaries on the server. They allow you to catch errors during rendering and render a fallback UI. In the future we could think of a more native way to do that other than creating a custom `<ErrorBoundary>` component. Anyhow this PRs lays the foundation for all of that.\r\n\r\nExample:\r\n\r\n```jsx\r\nclass ErrorBoundary extends Component {\r\n  state = { error: null };\r\n\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    return this.state.error\r\n      ? this.props.fallback(this.state.error)\r\n      : this.props.children;\r\n  }\r\n}\r\n\r\n// later:\r\n<ErrorBoundary\r\n  fallback={error => <p>Error happened: {error.message}</p>}\r\n>\r\n  <SomeComponentThatThrows />\r\n</ErrorBoundary>\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1442",
                "comments": []
            },
            {
                "pr_number": 1435,
                "title": "refactor: optional directory check",
                "body": "Just a small refactor because we only need to check if it's a directory before we start the search.\r\n\r\nFollow up to #1327",
                "html_url": "https://github.com/denoland/fresh/pull/1435",
                "comments": [
                    "@lucacasonato It looks to be fixed in https://github.com/denoland/deno_std/issues/1310 but then again I find it easier to check it first, rather than wrapping the whole loop in a `try/catch`."
                ]
            },
            {
                "pr_number": 1433,
                "title": "fix: manifest file encoding non-latin chars",
                "body": "This PR ensures that we don't parse file paths as URLs when traversing the file system. Fixes #1432 on the fresh side, but it seems like something in deploy needs to be changed too.",
                "html_url": "https://github.com/denoland/fresh/pull/1433",
                "comments": []
            },
            {
                "pr_number": 1390,
                "title": "docs: add \"Server Components\" concept page",
                "body": "closes https://github.com/denoland/fresh/issues/1384\r\n\r\nHere's a first pass at making this more clear. I'm sure many improvements can be made to the wording here, but I always find it easier to improve something someone else has done than starting from scratch, so I will happily put this up as a starting point.\r\n\r\nAt https://github.com/preactjs/preact/discussions/2879 the people seem to be asking for some clarification of this as well.",
                "html_url": "https://github.com/denoland/fresh/pull/1390",
                "comments": []
            },
            {
                "pr_number": 1314,
                "title": "feat(server): middleware params",
                "body": "closes https://github.com/denoland/fresh/issues/903\r\nsupersedes https://github.com/denoland/fresh/pull/1025\r\n\r\nI drew inspiration from the deficiency in the comment of 1025. Sylc says:\r\n> For a middleware to access the params that are downstream from its level would require, I think, to duplicate in fresh the logic that is currently in the Rutt router.\r\n\r\nFortunately some problems get solved by just sitting around. The router was inlined into Fresh in April via https://github.com/denoland/fresh/pull/1122. So now, as my test confirms, middleware at all layers have access to all the params.\r\n\r\nI did this by refactoring the router into two steps:\r\n1. compute the params and route, based on the request\r\n2. do the actual routing\r\n\r\nIf you look at the existing [router](https://github.com/denoland/fresh/blob/1d606416a8f87016fc08ae5dba3d82c2571f1314/src/server/router.ts#L128) you can see these two parts are there, but they're all lumped together in one method. Everything for the computation of `groups` (i.e. params) is done as we're looping over `processedRoutes`. Presumably this is for speed, so we don't have to loop twice.\r\n\r\nWhat I've done is pull this code out to compute the params and route ahead of time. Then we can set up the `MiddlewareHandlerContext` with the params. Later on, we can reuse the pre-computed params and route when invoking the `FinalHandler` like so:\r\n```ts\r\ninner(\r\n  req,\r\n  ctx,\r\n  paramsAndRouteResult.params,\r\n  paramsAndRouteResult.route,\r\n)\r\n```\r\n\r\nObviously some of the naming here is horrible and I'm happy to receive suggestions. Problems: `paramsAndRouteResult` and `getParamsAndRoute`.",
                "html_url": "https://github.com/denoland/fresh/pull/1314",
                "comments": [
                    "I see Luca has a `handler_2` branch, so maybe this can get closed in lieu of that. Or I can rework this to build on that new version, once it's merged."
                ]
            },
            {
                "pr_number": 1280,
                "title": "fix(server): middleware order incorrect",
                "body": "closes https://github.com/denoland/fresh/issues/1090\r\n\r\nAs we're building up the `ServerContext`, part of the construction involves sorting the routes and middlewares like this:\r\n```\r\nsortRoutes(routes);\r\nsortRoutes(middlewares);\r\n```\r\n\r\nSadly it seems like the sort isn't actually doing anything. We can see this by showing the state before and after:\r\n```\r\nmiddlewares.forEach(x => console.log(x.pattern));\r\nsortRoutes(middlewares);\r\nmiddlewares.forEach(x => console.log(x.pattern));\r\n```\r\nthen we get the following:\r\n```\r\n{/*}?\r\n/layeredMdw{/*}?\r\n/layeredMdw/layer2{/*}?\r\n/layeredMdw/layer2/layer3{/*}?\r\n/layeredMdw/nesting/:tenant/:environment{/*}?\r\n/layeredMdw/nesting/:tenant{/*}?\r\n/layeredMdw/nesting{/*}?\r\n{/*}?\r\n/layeredMdw{/*}?\r\n/layeredMdw/layer2{/*}?\r\n/layeredMdw/layer2/layer3{/*}?\r\n/layeredMdw/nesting/:tenant/:environment{/*}?\r\n/layeredMdw/nesting/:tenant{/*}?\r\n/layeredMdw/nesting{/*}?\r\n```\r\nSo we didn't change anything. With the improved sorting method for middleware (the primary change in this PR), we now get the following:\r\n```\r\n{/*}?\r\n/layeredMdw{/*}?\r\n/layeredMdw/layer2{/*}?\r\n/layeredMdw/layer2/layer3{/*}?\r\n/layeredMdw/nesting/:tenant/:environment{/*}?\r\n/layeredMdw/nesting/:tenant{/*}?\r\n/layeredMdw/nesting{/*}?\r\n{/*}?\r\n/layeredMdw{/*}?\r\n/layeredMdw/layer2{/*}?\r\n/layeredMdw/nesting{/*}?\r\n/layeredMdw/layer2/layer3{/*}?\r\n/layeredMdw/nesting/:tenant{/*}?\r\n/layeredMdw/nesting/:tenant/:environment{/*}?\r\n```\r\n\r\nTo  implement this, I split out the sorting for middleware into a new `sortMiddleware` method, because I didn't want to impact too much. I introduced a `route_sorting_test` file which asserts the new order of `middleware`, and asserts the existing order of `routes`.\r\n\r\nAdditionally, there's a functional test reproducing the case from @benadamstyles . I have some routes like this:\r\n1. /routes/layeredMdw/nesting/_middleware.ts\r\n2. /routes/layeredMdw/nesting/[tenant]/_middleware.ts\r\n3. /routes/layeredMdw/nesting/[tenant]/[environment]/_middleware.ts\r\n4. /routes/layeredMdw/nesting/[tenant]/[environment]/[id].tsx\r\n\r\nAnd I'm able to successively build up state in the right order, which should match up with his expectations (and the documentation).\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1280",
                "comments": [
                    "Hey @marvinhagemeister, I updated the test to include the new route from the fixture. I suppose this isn't strictly necessary, but when I originally created the test I thought \"I want to assert all the middleware routes\". Since that thought happened, another middleware was added, so I threw it in.\r\n\r\nAdditionally I thought I'd share the inner workings of the sorting algorithm, since I somehow forgot that from before.\r\n\r\nBefore:\r\n```\r\n/layeredMdw{/*}? {/*}? 0\r\n/layeredMdw/layer2{/*}? /layeredMdw{/*}? 0\r\n/layeredMdw/layer2/layer3{/*}? /layeredMdw/layer2{/*}? 0\r\n/layeredMdw/nesting/:tenant/:environment{/*}? /layeredMdw/layer2/layer3{/*}? 0\r\n/layeredMdw/nesting/:tenant{/*}? /layeredMdw/nesting/:tenant/:environment{/*}? 0\r\n/layeredMdw/nesting{/*}? /layeredMdw/nesting/:tenant{/*}? 0\r\n/state-in-props{/*}? /layeredMdw/nesting{/*}? 0\r\n```\r\n\r\nAfter\r\n```\r\n/layeredMdw{/*}? {/*}? 1\r\n/layeredMdw/layer2{/*}? /layeredMdw{/*}? 1\r\n/layeredMdw/layer2/layer3{/*}? /layeredMdw/layer2{/*}? 1\r\n/layeredMdw/nesting/:tenant/:environment{/*}? /layeredMdw/layer2/layer3{/*}? 1\r\n/layeredMdw/nesting/:tenant{/*}? /layeredMdw/nesting/:tenant/:environment{/*}? -1\r\n/layeredMdw/nesting/:tenant{/*}? /layeredMdw/layer2{/*}? 1\r\n/layeredMdw/nesting/:tenant{/*}? /layeredMdw/nesting/:tenant/:environment{/*}? -1\r\n/layeredMdw/nesting/:tenant{/*}? /layeredMdw/layer2/layer3{/*}? 1\r\n/layeredMdw/nesting{/*}? /layeredMdw/layer2/layer3{/*}? -1\r\n/layeredMdw/nesting{/*}? /layeredMdw{/*}? 1\r\n/layeredMdw/nesting{/*}? /layeredMdw/layer2{/*}? 0\r\n/state-in-props{/*}? /layeredMdw/nesting{/*}? -1\r\n/state-in-props{/*}? /layeredMdw{/*}? 0\r\n/state-in-props{/*}? /layeredMdw/layer2{/*}? -1\r\n```\r\n\r\nFinally, there were a few things with new names I had to uptake. handlers->multihandler and router->handler",
                    "```\r\nfresh-init subdirectory ... start up the server => ./tests/cli_test.ts:313:13\r\nerror: Leaking async ops:\r\n  - 1 async operation to op_read was started in this test, but never completed.\r\n  - 1 async operation to op_spawn_wait was started in this test, but never completed.\r\nTo get more details where ops were leaked, run again with --trace-ops flag.\r\n```\r\nThis isn't from my test, but I'll still look into this since it's been causing some noise recently.",
                    "Is there anything left to do here, @marvinhagemeister? I did follow up on the flakiness that caused the tests to fail: I ran them 500 times locally and couldn't reproduce the issue, so I'm not sure what else I can do for now.",
                    "Well, this conflicts with your latest changes now. And it will conflict with my middle params PR, so I'll wait for that to get merged before fixing this.",
                    "Nah I think it's good to be merged. Was just busy with other stuff. Merged the middle params PR.",
                    "Ok, updated the ever-conflicting `fresh.gen.ts` and `main_test.ts` so this is finally good to go \ud83d\ude4c "
                ]
            },
            {
                "pr_number": 1410,
                "title": "feat: prevent duplicate routes when generating manifest",
                "body": "closes https://github.com/denoland/fresh/issues/1378\r\n\r\nNow if someone has e.g. `routes/user.ts` and `routes/user.tsx` we'll throw an error message when generating the manifest, instead of allowing people to shoot themselves in the foot and have massive confusion / pain.\r\n\r\nI need some help with the test. It definitely asserts the functionality, but if the startup process doesn't error, the test hangs. Is there an easy way to tell `Deno.Command` to stop after X seconds?",
                "html_url": "https://github.com/denoland/fresh/pull/1410",
                "comments": [
                    "The test becomes a little easier when you create a `./tests/fixture_my_test` folder instead of creating a project from scratch with every run.\r\n\r\nWhat do you mean the startup process doesn't error? Does it print the correct exit code or is that wrong too? Wondering if it's either not being teared down correctly or if the error message isn't flushed before the process aborts.",
                    "Ok, I can refactor it to introduce a new test folder. I have another PR planned after this in the same space, so maybe it's good to have a new fixture.\r\n\r\nWhat I mean is the following. When I do:\r\n```ts\r\nconst cliProcess = new Deno.Command(Deno.execPath(), {\r\n  args: [\r\n    \"run\",\r\n    \"-A\",\r\n    `tests/fixture_route_analysis/dev.ts`,\r\n  ],\r\n  stdin: \"null\",\r\n  stdout: \"piped\",\r\n  stderr: \"piped\",\r\n});\r\n```\r\nand the project doesn't error (because I reverted my fix, in order to test that the test fails correctly), then the test just runs forever. Because the server successfully starts up.",
                    "Right, I see the issue. The server is a long running process so `Deno.Command` never finishes if it booted successfully. Instead you could spawn the process similar to how it's done in `startFreshServer()` and check if the server is ready message was printed. That means the server booted successfully and the duplicate route error logic wasn't hit as that part runs before that.",
                    "Thanks for the hint. I've updated the test and when I revert my fix, it actually fails. Reapplying the fix causes the test to pass.",
                    "In theory this is ready to review, but we've hit the flaky test on windows (noting the OS for record keeping).",
                    "LGTM, Re-ran the CI for now. Not sure why it was flaky"
                ]
            },
            {
                "pr_number": 1426,
                "title": "fix: trailingSlash option",
                "body": "Closes #1425 \r\n\r\nThe current trailingSlash option is fundamentally broken and I'm not really sure how it ever worked:\r\n- It just added a \"/\" to the end of the href instead of the pathname. If your URL had a hash or query parameter it would crash instantly.\r\n- It added a trailing slash to files which causes problems for the router\r\n- It added a trailing slash to internal paths which causes problems for the router\r\n\r\nThese should be fixed in this PR.",
                "html_url": "https://github.com/denoland/fresh/pull/1426",
                "comments": [
                    "Tests added!",
                    "I always forget about windows \ud83d\ude05 ",
                    "LGTM, thanks for the PR \ud83d\udc4d "
                ]
            },
            {
                "pr_number": 1415,
                "title": "fix: twind including unused CSS rules",
                "body": "While working on #1388 I noticed that our twind plugins add CSS classes based on vnode creation instead of when a vnode is actually used during rendering. Just because a vnode was created, doesn't mean that it will be used. Common scenarios where that's not the case is conditional rendering.\r\n\r\n```jsx\r\nlet vnode = <div class=\"text-red-600\" />\r\nif (someCondition) {\r\n  vnode = <div class=\"text-blue-600\" />\r\n}\r\n```\r\n\r\nThis will make #1388 easier as the rendering there is still synchronous under the hood and we can keep track of local state synchronously.\r\n\r\nWhilst `options.__b` (=`options._diff`) was initially not intended to be a public render hook for Preact, it has been stable since the original 10.x release a couple of years ago. Problem is that changing that now in itself would be a breaking change. We should expose it through typings or something else though at some point \ud83d\udc40 ",
                "html_url": "https://github.com/denoland/fresh/pull/1415",
                "comments": [
                    "Won't this break the ``<div class={tw`text-blue-500 ${xyz}`}`` kind of use cases (where `tw` is called manually)? I am not sure if it's important to keep them working, but if they are not intended to work we should figure out if we can issue a warning when a user tries to do this anyway.\r\n\r\nThis is mainly used in conjunction with the `css` template literal tag / function.",
                    "@lucacasonato That keeps working because the `tw` helper writes into the global stylesheet directly, regardless of what Preact is doing. Added a test case for that to ensure that this works.",
                    "But to clarify, that would _not_ work in an async component right, because there is no single \"global\" style sheet because of thread local storage?\r\n\r\nThis PR makes sense to me in any case, just want to clarify that behaviour.",
                    "@lucacasonato The secret is that the actual rendering is still synchronous, even if it looks async from the outside. The work in #1388 treats the function as a handler that happens to return JSX, and then we render the returned JSX. That rendering is still synchronous. If we decide at some point to do some form of streaming rendering (could see this happening) where we throw promises to delay subtree rendering, it's all still synchronous under the hood. The work is just split up in batches.\r\n\r\nThat means we can pass some sort of object as the render context around and always restore it for the currently rendering subtree. That would allow us to stuff a virtual subtree in that sorta \"thread local\" storage and always write into that compared to a truly global one. All this works because it's very unlikely that we'll add truly async components to `preact-render-to-string`. Can you pass in a `Promise` that halts rendering until that resolves - Sure. But that will be pretty much it.",
                    "Right, but what about:\r\n\r\n```tsx\r\nexport default async function Route() {  \r\n  const buttonStyle = tw`text-red-500`;\r\n  await fetchSomething();\r\n\r\n  return (\r\n    <div>\r\n      <button class={buttonStyle} />\r\n      <button class={buttonStyle} />\r\n      <button class={buttonStyle} />\r\n    </div>\r\n  );\r\n}",
                    "Merging this as the discussion here is more about #1388 and not about the changes in this PR itself."
                ]
            },
            {
                "pr_number": 1453,
                "title": "chore: add test for middleware error handling",
                "body": "closes https://github.com/denoland/fresh/issues/586\r\n\r\nLeo did all the hard work; I'm just adding a test to confirm we don't regress this functionality in the future. See my [comment](https://github.com/denoland/fresh/issues/586#issuecomment-1630175078) for details. Happy to add documentation, if we think that's necessary.",
                "html_url": "https://github.com/denoland/fresh/pull/1453",
                "comments": []
            },
            {
                "pr_number": 1427,
                "title": "feat: move to Deno.serve",
                "body": "Closes #1424 ",
                "html_url": "https://github.com/denoland/fresh/pull/1427",
                "comments": [
                    "> Like check if Deno.serve exists, and if not fall back to the server module form std.\r\n\r\nThe thing is, the serve module from std is going to be deprecated like, the next update. We'd need to keep around an old version of std which feels wrong to me. Considering the friendly error message users would get (\"Please upgrade to at least Deno version 1.35.0!\"), I'm not too concerned about trying to maintain backwards compatibility on that front. If someone needed to use an older Deno version for whatever reason, they could just use the `--unstable` flag.\r\n\r\nOther than that, the only breaking change is moving from `ConnInfo` to `Deno.ServeHandlerInfo` which removes the `localAddress` property which should only matter for people relying on that which I have not seen.",
                    "We had a call today and I got confirmation that the server module in std will not be deprecated soon. The current plan is to only deprecated it once the std library hits `1.0`. I really want this to land as part of the next release which I'm hoping to cut on Thursday. I don't want this to be a breaking release as that's already planned for next month.",
                    "Ah sorry, I should have clarified. It will be deprecated as in \"please don't use this\" (I made the PR for this!). It will be removed in `1.0.0`. What do you propose to make this not a breaking change?"
                ]
            },
            {
                "pr_number": 1388,
                "title": "feat: support async route components",
                "body": "This is a quick implementation for #1386 . It allows you to use an async component function where you can load data and return a `vnode`. If the function is async it will receive the request object and middleware context as arguments instead. We fall back to the current way if it's not async.\r\n\r\n```jsx\r\nexport default async function Home(req, ctx) {\r\n  const data =  await getDataFromDB()\r\n  return <App data={data} />;\r\n}\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/1388",
                "comments": [
                    "Ah wait, marking as draft again because I want to add a couple of tests with `ctx.render()`",
                    "I think this breaks the `twind` plugin.",
                    "Can confirm that it breaks the `twind` plugin, also islands that are imported in async route components don't execute the revive, also can't import signals into the async route to pass to different island\r\n\r\notherwise is really promising I've tested it with Deno.KV executing calls inside the route and it works great ",
                    "Thanks for the feedback and giving this a go! I'll look into these issues.",
                    "I think it's ready to be reviewed. I've tested it locally with porting our docs to that setup and islands + twind works there.",
                    "@iuioiua Thanks for the review! Yes, this PR would eliminate the need for `GET` route handlers for rendered pages. It's optional though one can still keep the current model as well.",
                    "Hi @marvinhagemeister, I did also try the PR and it seems like it still has errors with Tailwind (at 2023-07-05, 1 pm in Germany). \r\n\r\nYou can view the result here: <https://bjesuiter-fresh-playground.deno.dev/pokelist-async>\r\n\r\nI tried the following: \r\n\r\n## Step 1\r\nFirst I added your branch directly from github to a \"Fresh\" Playground Repo of mine like this:  `https://github.com/bjesuiter/deno_fresh_playground#switch-to-arbitrary-fresh-version-on-github-wip` \r\nNote: It's awesome that deno works like this <3 \r\n\r\n## Step 2\r\nSecond I added a page with the new async page components feature, which uses the Pokemon API to list some Pokemons:  \r\nSource: https://github.com/bjesuiter/deno_fresh_playground/blob/main/routes/pokelist-async.tsx \r\n\r\n```ts\r\nimport {HandlerContext} from '$fresh/server.ts';\r\nimport {PokeList, Pokemon} from '../components/PokeList.tsx';\r\n\r\n/**\r\n *\r\n * @param req Request\r\n * @param ctx HandlerContext\r\n * @returns\r\n */\r\nexport default async function AsyncPagePoc(req: Request, ctx: HandlerContext) {\r\n\tconsole.log(`In AsyncPageTest`);\r\n\tconsole.log(`\\n ---- \\n\\n Req Object: `, req);\r\n\tconsole.log(`\\n ---- \\n\\n Context Object: `, ctx);\r\n\r\n\t// const res = await fetch(`https://pokeapi.co/api/v2/pokemon/ditto`);\r\n\tconst res = await fetch(`https://pokeapi.co/api/v2/pokemon?limit=10&offset=0`);\r\n\r\n\t// const jsObj = await res.json();\r\n\tconst pokeList = (await res.json()).results as Pokemon[];\r\n\r\n\tconst pokeListWithImagesAsync = pokeList.map(async poke => {\r\n\t\tconst res = await fetch(poke.url);\r\n\t\tconst body = await res.json();\r\n\r\n\t\t// https://pokeapi.co/api/v2/pokemon/1/\r\n\t\tpoke.imgUrl = body.sprites.other.home.front_default;\r\n\t\treturn poke;\r\n\t});\r\n\r\n\tconst pokeListWithImages = await Promise.all(pokeListWithImagesAsync);\r\n\r\n\treturn (\r\n\t\t<div class=\"max-w-80 mx-auto\">\r\n\t\t\t{/* Tailwind seems not to work here, for some reason */}\r\n\t\t\t{/* Also tried class={tw`text-5xl`} */}\r\n\t\t\t<h1 class=\"text-5xl text-red-500\">Async Page Test</h1>\r\n\t\t\t<PokeList entries={pokeListWithImages}></PokeList>\r\n\t\t\t{/* <pre>{JSON.stringify(jsObj, null, '\\t')}</pre> */}\r\n\t\t</div>\r\n\t);\r\n}\r\n```\r\n\r\n## Step 3 \r\n\r\nI added a normal server-side component, called PokeList to render the list:  \r\nSource: https://github.com/bjesuiter/deno_fresh_playground/blob/main/components/PokeList.tsx \r\n\r\n```ts\r\nexport type Pokemon = {\r\n\tname: string;\r\n\turl: string;\r\n\timgUrl?: string;\r\n};\r\n\r\nexport function PokeList({entries}: {entries: Pokemon[]}) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{/* Tailwind works here though! */}\r\n\t\t\t<h2 class=\"text-4xl\">Pok\u00e9List</h2>\r\n\t\t\t<ul class=\"my-8 w-56\">\r\n\t\t\t\t{entries.map(poke => (\r\n\t\t\t\t\t<li class=\"relative m-4 p-6 shadow-xl text-center border-2 border-gray-400 rounded\">\r\n\t\t\t\t\t\t{poke.imgUrl && <img src={poke.imgUrl}></img>}\r\n\t\t\t\t\t\t<a class=\"absolute top-2 left-0 right-0 capitalize\" href={poke.url}>\r\n\t\t\t\t\t\t\t{poke.name}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n```\r\n\r\n## The tailwind problem \r\n\r\nIf you take a look now to my deployed version of this at https://bjesuiter-fresh-playground.deno.dev/pokelist-async (or run it locally yourself), you'll see that the tailwind classes from the async page component are not applied, but the tailwind classes in the server component will be applied correctly. \r\n\r\n<img width=\"581\" alt=\"Bildschirmfoto 2023-07-05 um 13 08 36\" src=\"https://github.com/denoland/fresh/assets/2365676/472818d6-e825-40f4-9fde-f20013f39a63\">\r\n\r\n=> The first heading \"Async Page Test\" should've been \"text-5xl text-red-500\" (as you see in the page src code above)  \r\n=> If I use \"text-4xl\" though, it works, since the server component \"PokeList\" does also use this class, so it's available in the output.  \r\n\r\n",
                    "@bjesuiter this was super helpful! Thanks for sharing your test case. Missed that plugins can contribute to rendering too earlier. Got that resolved now and the styles show up \ud83c\udf89 ",
                    "Can confirm, Tailwind in general works now in Async Page Components. (See screenshot) \r\n\r\nHowever, not all colors work. 'text-red-500' and 'text-green-500' work, but 'text-lime-500' and 'text-teal-500' do not. \r\n(But, this might be a different issue and might not have anything to do with the async page ^^)\r\n\r\n## Update\r\nThis indeed seems to be a different problems, since these colors also do not work inside the Pok\u00e9List Component.\r\n\r\n<img width=\"815\" alt=\"Bildschirmfoto 2023-07-05 um 20 15 59\" src=\"https://github.com/denoland/fresh/assets/2365676/97bc48ce-dd8f-4adc-86e5-bf88b4c335fc\">\r\n",
                    "@bjesuiter yeah that's a difference between tailwind and twind. They are very similar but not the same. I think newer twind versions aligned more closely with tailwind, but I haven't looked into that yet. I'm hoping we can support both twind and tailwind at some point in the future.",
                    "Wohoo, my next question would've been when this is going to be merged! \n\nDoes fresh now have some kind of release cycle or is it more like rolling release?",
                    "Planning to do release on a monthly basis. The next one is scheduled for tomorrow if all goes according to plan. Currently writing the blog post, but it's taking me a bit longer than I'd like to admit \ud83d\ude05 ",
                    "Very nice! I'm so excited that fresh is picking up some steam!"
                ]
            },
            {
                "pr_number": 1456,
                "title": "fix: init banner not colored in ansi256 terminals",
                "body": "This basically uses the same fix as #1377 and #1323 for the init script.\r\n\r\nBefore:\r\n\r\n<img width=\"505\" alt=\"Screenshot 2023-07-12 at 22 18 29\" src=\"https://github.com/denoland/fresh/assets/1062408/e77c3110-d3e2-479e-8381-c67c39e216fa\">\r\n\r\n\r\nAfter:\r\n\r\n<img width=\"446\" alt=\"Screenshot 2023-07-12 at 22 18 38\" src=\"https://github.com/denoland/fresh/assets/1062408/debda939-bdce-4890-8dfb-265a4e1b8328\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1456",
                "comments": []
            },
            {
                "pr_number": 1328,
                "title": "docs(examples): add an example on how to use `deno_kv_oauth`",
                "body": "this pr adds an example on how to use `deno_kv_oauth` to fresh's docs.  \r\ncloses #1218 ",
                "html_url": "https://github.com/denoland/fresh/pull/1328",
                "comments": [
                    "@iuioiua as promised, here are pr and ping :)",
                    "Is the Deno KV OAuth API stable?",
                    "> Is the Deno KV OAuth API stable?\r\n\r\nNot yet. But it soon will be. We'll note its beta status until then.",
                    "@iuioiua thanks again for the thorough review! \ud83d\ude4f \r\nlet me know if there's still something to improve!"
                ]
            },
            {
                "pr_number": 1455,
                "title": "feat(server): plugins can add middlewares and routes",
                "body": "closes https://github.com/denoland/fresh/issues/516\r\nsupersedes https://github.com/denoland/fresh/pull/1009\r\n\r\nThis is basically the same as 1009, except I've added a nice test showing how this is used. It's also updated to the latest changes in Fresh, mainly relevant because https://github.com/denoland/fresh/pull/745 introduced a filter in the form of `const syncPlugins = opts.plugins.filter((p) => p.render);`, so the filter that 1009 does in `render.ts` is no longer necessary.\r\n\r\nAs a followup I can create a new example page called \"Writing a plugin which adds routes\" or something like that.",
                "html_url": "https://github.com/denoland/fresh/pull/1455",
                "comments": [
                    "This is useful if we want to provide a first party GA4 or CORS middleware plugin, which would probably save people a lot of time.",
                    "This looks good to me. Let's add @RoeHH as a co-author of the commit since the changes here are most of his work. This SO answer has an explanation on how to do that in git https://stackoverflow.com/questions/7442112/how-to-attribute-a-single-commit-to-multiple-developers",
                    "Thanks, good tip. I'll do that in future as well."
                ]
            },
            {
                "pr_number": 1459,
                "title": "feat: add `fresh` lint preset on update",
                "body": "Running the update script should add the `fresh` linting preset if not present.",
                "html_url": "https://github.com/denoland/fresh/pull/1459",
                "comments": []
            },
            {
                "pr_number": 1468,
                "title": "feat: improve Hero responsiveness",
                "body": "The [Hero component example](https://fresh.deno.dev/components) doesn't respond well to smaller display view widths. This PR aims to improve that behavior by forcing a minimum height and enforcing minimum vertical padding.\r\n\r\nAdditionally, the buttons will start as a column and will extend to a row on the device width of `md` or larger, just like the other components on the Fresh Components page.",
                "html_url": "https://github.com/denoland/fresh/pull/1468",
                "comments": []
            },
            {
                "pr_number": 1444,
                "title": "feat: add upgrade check",
                "body": "This PR adds an upgrade check to notify users of a Fresh version. The check is done once per day.\r\n\r\nThis is how it looks like.\r\n\r\n<img width=\"772\" alt=\"Screenshot 2023-07-07 at 16 55 28\" src=\"https://github.com/denoland/fresh/assets/1062408/babeb819-b155-483d-8aa6-8608c4d59e48\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1444",
                "comments": []
            },
            {
                "pr_number": 1473,
                "title": "chore: make test more timing resilient",
                "body": "This test case is causing flakyness on windows. The previous `delay(100)` is too sensitive to timing differences.\r\n\r\nThere is a longer backstory to this and something `puppeteer` hasn't addressed in the past years. For context: I worked on a [custom e2e test runner](https://github.com/boxine/pentf) based on `puppeteer` for a client a couple of years back (around 2019-ish). At the time playwright wasn't really a thing so `puppeteer` was the only option.\r\n\r\nA common source of problems in e2e testing is that it's not obvious when an element _can_ be safely clicked. Sure, you can always simulate a click on a DOM node, but that doesn't account for the framework potentially not having attached an event listener yet. It's an internal race condition as to when the click is fired. The [cypress blog](https://www.cypress.io/blog/2019/01/22/when-can-the-test-click/) has a good post about the problem. To work around that I've added a `clickWhenListenerReady` helper function that waits until Preact has added a listener before firing the click.\r\n\r\nThen there is a very related race condition in that firing the click doesn't mean that the changes have been immediately applied to the DOM. The framework (here Preact) might do some scheduling or maybe something inside puppeteer or even Chrome took a bit longer. It's hard to pinpoint where exactly the issue is, but this leads to cases where the click has fired but the new value has not been written to the DOM yet. A much more reliable way is to instead wait until the expected string is present in the DOM.\r\n\r\nI did a couple of local runs on windows and with the changes in this PR I get way less flukes.",
                "html_url": "https://github.com/denoland/fresh/pull/1473",
                "comments": [
                    "Well, looks like I celebrated too early. The CI failed again \ud83d\ude05 ",
                    "Re-ran the CI and all is green again. I had hoped to eliminate any flukes completely, but looks like some are still there. Nonetheless I feel like the changes here are worth merging as the flukes seem to happen less frequently.",
                    "Adding support for retries is a great idea. We should look into that \ud83d\udc4d "
                ]
            },
            {
                "pr_number": 1469,
                "title": "www: fix spelling error on homepage",
                "body": "At the bottom of the homepage, the call-to-action prompts the user to `Lean everything you need to know in seconds.`\r\n\r\nThis PR corrects the spelling so that it reads: `Learn everything you need to know in seconds.`",
                "html_url": "https://github.com/denoland/fresh/pull/1469",
                "comments": []
            },
            {
                "pr_number": 1470,
                "title": "Fix a typographical error and additionally improve grammar within the main page.",
                "body": "1. Improves immediately with a typo fix.\r\n2. Further improves the base English by making the tense if that's what you'd call it match previous usages of \"the server\", and uses better phrasing for the sentence. \r\n\r\nThe revised version improves the sentence structure by replacing \"your page\" with \"pages\" to make it more general. Additionally, \"quicker\" is changed to \"more quickly\" to maintain consistency with previous sentences and grammatical correctness.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1470",
                "comments": []
            },
            {
                "pr_number": 1475,
                "title": "www: add docs for async route components",
                "body": "This PR adds a section to the `route` docs regarding async route components added in the upcoming Fresh 1.3 release.",
                "html_url": "https://github.com/denoland/fresh/pull/1475",
                "comments": []
            },
            {
                "pr_number": 1460,
                "title": "chore: release 1.3.0",
                "body": "Release is ready, only waiting on #1444 to be approved and merged. Marking as draft until that's done.",
                "html_url": "https://github.com/denoland/fresh/pull/1460",
                "comments": []
            }
        ],
        "1.2.0": [
            {
                "pr_number": 1200,
                "title": "chore: update `versions.json` for 1.1.6",
                "body": "I missed this in the 1.1.6 release. My bad - lesson learnt.",
                "html_url": "https://github.com/denoland/fresh/pull/1200",
                "comments": []
            },
            {
                "pr_number": 1175,
                "title": "feat(server): Allow for custom HEAD method implementations",
                "body": "Fixes https://github.com/denoland/fresh/issues/1115\r\nFixes https://github.com/denoland/fresh/issues/1165",
                "html_url": "https://github.com/denoland/fresh/pull/1175",
                "comments": []
            },
            {
                "pr_number": 1203,
                "title": "add test case covering islands that return `null`",
                "body": "Just a small addition to my previous PR. It wasn't obvious for me that PR #1172 also fixed #1129. I guess that issue should be covered by a separate test",
                "html_url": "https://github.com/denoland/fresh/pull/1203",
                "comments": []
            },
            {
                "pr_number": 1024,
                "title": "fix: don't change scheme on redirect",
                "body": "Fixes #1015\r\n\r\nThis scenario can happen when a user has a proxy sitting in front of Fresh, that does TLS termination, while Fresh is running on plain text HTTP.",
                "html_url": "https://github.com/denoland/fresh/pull/1024",
                "comments": []
            },
            {
                "pr_number": 1131,
                "title": "docs: clarify what props can be passed to islands",
                "body": "I was caught out by trying to pass `Infinity` as a prop to an island, which is a valid IEEE 754 float, but bizarrely JSON serializes to `null`.",
                "html_url": "https://github.com/denoland/fresh/pull/1131",
                "comments": [
                    "I've also been playing around with replacer/reviver functions that could be used to expand the range of island-compatible props \u2014 would PRs with this kind of functionality be welcome? Obviously it'd have a non-zero impact on performance.\r\n\r\n```js\r\nconst type = '$$_fresh_type'\r\n\r\nconst replacers = [\r\n    {\r\n        checker: (x) => x === Infinity || x === -Infinity || Number.isNaN(x),\r\n        serializer: (x) => ({ [type]: 'number', value: String(x) }),\r\n    },\r\n    {\r\n        checker: (x) => typeof x === 'bigint',\r\n        serializer: (x) => ({ [type]: 'bigint', value: String(x) }),\r\n    },\r\n    {\r\n        checker: (x) => x instanceof Date,\r\n        serializer: (x) => ({ [type]: 'date', value: x.valueOf() }),\r\n    },\r\n    {\r\n        checker: (x) => x instanceof URL,\r\n        serializer: (x) => ({ [type]: 'url', value: x.href }),\r\n    },\r\n    {\r\n        checker: (x) => x instanceof Error,\r\n        serializer: ({ name, message, stack }) => ({\r\n            [type]: 'error',\r\n            value: { name, message, stack },\r\n        }),\r\n    },\r\n    {\r\n        checker: (x) => x instanceof Uint8Array,\r\n        serializer: (x) => ({\r\n            [type]: 'u8',\r\n            value: btoa([...x].map(x => String.fromCodePoint(x)).join('')),\r\n        }),\r\n    },\r\n]\r\n\r\nconst deserializers = {\r\n    number: Number,\r\n    bigint: BigInt,\r\n    date: (x) => new Date(x),\r\n    url: (x) => new URL(x),\r\n    error: ({ name, message, stack }) => {\r\n        const E = globalThis[name]?.prototype instanceof Error ? globalThis[name] : Error\r\n        return Object.assign(new E(), { name, message, stack })\r\n    },\r\n    u8: (x) => Uint8Array.from(atob(x), (ch) => ch.codePointAt(0)),\r\n}\r\n\r\nfunction replacer(k) {\r\n    const v = this[k]\r\n    \r\n    for (const { checker, serializer } of replacers) {\r\n        if (checker(v)) return serializer(v)\r\n    }\r\n\r\n    return v\r\n}\r\n\r\nfunction reviver(k, v) {\r\n    const t = v[type]\r\n    \r\n    return t ? deserializers[t](v.value) : v\r\n}\r\n\r\nconst propVals = [\r\n    new Uint8Array([0, 0xff]),\r\n    new TypeError('xyz'),\r\n    new URL('https://deno.land/'),\r\n    Infinity,\r\n    -Infinity,\r\n    NaN,\r\n    99999999999999999999999999999999999999999999999999n,\r\n    new Date(0),\r\n]\r\n\r\nconst serialized = JSON.stringify(propVals, replacer)\r\n\r\nconst deserialized = JSON.parse(serialized, reviver)\r\n\r\n// all elements of propVals preserved\r\ndeserialized\r\n```"
                ]
            },
            {
                "pr_number": 1101,
                "title": "Optimise images size",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1101",
                "comments": []
            },
            {
                "pr_number": 1201,
                "title": "chore(deps): update to std@0.189.0",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1201",
                "comments": []
            },
            {
                "pr_number": 1078,
                "title": "chore: remove stale workaround in `collect()`",
                "body": "The issue in question, https://github.com/denoland/deno_std/issues/1310, has been marked complete. Looks like the underlying issue has been fixed. So this just removes the comment/unnecessary code. ",
                "html_url": "https://github.com/denoland/fresh/pull/1078",
                "comments": [
                    "I think the thread comment said we are having problems with Ubuntu, am I wrong?",
                    "@gflarity, there's one more instance of this code block within the codebase. Can you please remove that too?",
                    "I think the assertion on line 287 should also be updated to pass the test.\r\nPreviously `Deno.readDir()` threw `Deno.errors.NotFound`, now `walk()` throws `WalkError`.\r\n\r\nhttps://github.com/denoland/fresh/blob/366c8afef1d8db1d667abf36c66e2d06d17c451a/src/server/context.ts#L286-L291\r\n\r\nAccording to https://github.com/denoland/deno_std/pull/3054, it seems you can use `error.cause`. Maybe it will be like this?\r\n\r\n```diff\r\n-    if (err instanceof Deno.errors.NotFound) {\r\n+    if (err.cause instanceof Deno.errors.NotFound) {\r\n```\r\n\r\n-----\r\n\r\nNote: Older versions of std's `walk()` had the problem of throwing an `Error` instead of a `Deno.errors.NotFound` (https://github.com/denoland/deno_std/issues/1310). At that time, `Deno.readDir()` was used to detect `Deno.errors.NotFound` as a workaround.\r\nNow that the error thrown from `walk()` has changed to something more meaningful in https://github.com/denoland/deno_std/pull/3054, we can refactor this part.",
                    "Good spot, @ayame113! I've applied the fix. Turns out, we're on an old version of `std` too. I'll merge this once #1201 is landed."
                ]
            },
            {
                "pr_number": 622,
                "title": "feat: add `createHandler()`",
                "body": "I cut out the function that gets an hundler from fresh.\r\n\r\nThe purpose is to prepare you to create tests for your application.\r\nThe introduction of this feature does not affect fresh.\r\n\r\nExample:\r\n\r\n```typescript main_test.ts\r\n/// <reference no-default-lib=\"true\" />\r\n/// <reference lib=\"dom\" />\r\n/// <reference lib=\"dom.asynciterable\" />\r\n/// <reference lib=\"deno.ns\" />\r\n/// <reference lib=\"deno.unstable\" />\r\n\r\nimport { createHandler } from \"$fresh/server.ts\";\r\nimport manifest from \"./fresh.gen.ts\";\r\n\r\nimport { superdeno } from \"https://deno.land/x/superdeno/mod.ts\";\r\nimport { assertEquals } from \"https://deno.land/std@0.148.0/testing/asserts.ts\";\r\nimport {\r\n  type RequestHandlerLike,\r\n} from \"https://deno.land/x/superdeno/src/types.ts\";\r\nimport {\r\n  Document,\r\n  DOMParser,\r\n} from \"https://deno.land/x/deno_dom/deno-dom-wasm.ts\";\r\n\r\n\r\nDeno.test(\"HTTP assert test.\", async (t) => {\r\n  await t.step(\"#1 GET /\", async () => {\r\n    const handler = await createHandler(manifest) as RequestHandlerLike;\r\n\r\n    await superdeno(handler)\r\n      .get(\"/\")\r\n      .expect(200);\r\n  });\r\n  await t.step(\"#2 GET /Foo\", async () => {\r\n    const server = await createHandler(manifest) as RequestHandlerLike;\r\n\r\n    const r = await superdeno(server)\r\n      .get(\"/Foo\")\r\n      .expect(200);\r\n\r\n    const document: Document = new DOMParser().parseFromString(\r\n      r.text,\r\n      \"text/html\",\r\n    )!;\r\n\r\n    assertEquals(document.querySelector(\"div\")?.innerText, \"Hello Foo\");\r\n  });\r\n\r\n  await t.step(\"#3 GET /Foo/Bar\", async () => {\r\n    const server = await createHandler(manifest) as RequestHandlerLike;\r\n\r\n    await superdeno(server)\r\n      .get(\"/Foo/Bar\")\r\n      .expect(404);\r\n  });\r\n});\r\n```\r\n\r\n```sh\r\n$ deno test -A main_test.ts\r\nCheck file:///usr/src/app/my-project/main_test.ts\r\nrunning 1 test from ./main_test.ts\r\nHTTP assert test. ...\r\n  #1 GET / ... ok (53ms)\r\n  #2 GET /Foo ... ok (50ms)\r\n  #3 GET /Foo/Bar ... ok (45ms)\r\nHTTP assert test. ... ok (154ms)\r\n\r\nok | 1 passed (3 steps) | 0 failed (300ms)\r\n```\r\n\r\nThis was discussed in a separate pull request, but prepared in a separate branch based on @lucacasonato  suggestion.\r\n\r\n[Add a function to get a server class instance.](https://github.com/denoland/fresh/pull/552)\r\n\r\nThenk you.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/622",
                "comments": [
                    "Hi. @lucacasonato\r\n\r\nI have merged Fresh 1.1.1 and verified that it works.\r\nIf everything is OK, please approve.\r\n\r\nThank you very much."
                ]
            },
            {
                "pr_number": 1207,
                "title": "fix: `__FRSH_BUILD_ID is not defined`",
                "body": "This could happen if the runtime/utils.ts coe was loaded\nprior to server/constants.ts, because they had some shared state on\n`globalThis`.\n\nI have mitigated this by not relying on global state anymore.\n\nFixes #1191",
                "html_url": "https://github.com/denoland/fresh/pull/1207",
                "comments": []
            },
            {
                "pr_number": 1206,
                "title": "fix: better HEAD handling with less special casing",
                "body": "We now add a default HEAD handler to the server, rather than special\ncasing HEAD requests elsewhere. Static files now get their own optimized\nHEAD handler that does not read the file contents.\n",
                "html_url": "https://github.com/denoland/fresh/pull/1206",
                "comments": []
            },
            {
                "pr_number": 1219,
                "title": "refactor: move counter example to top-level",
                "body": "This has been discussed with Luca.\r\n\r\nCloses #1212\r\nMoves towards #1211",
                "html_url": "https://github.com/denoland/fresh/pull/1219",
                "comments": []
            },
            {
                "pr_number": 1185,
                "title": "feat: island sub-directories",
                "body": "This change adds support for sub-directories in the `/island` folder and simplifies the path collection logic for routes and islands.\r\n\r\nCloses #1004.\r\nSupercedes #1030.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1185",
                "comments": [
                    "I suspect the current CI errors on Windows relate to paths. Any help from someone with a Windows machine is welcome.",
                    "PTAL, @lucacasonato"
                ]
            },
            {
                "pr_number": 1221,
                "title": "docs: add new \"Examples\" section",
                "body": "It's currently empty, but this sets up future Fresh examples.\r\n\r\nCloses #1204\r\nMoves towards #1211",
                "html_url": "https://github.com/denoland/fresh/pull/1221",
                "comments": []
            },
            {
                "pr_number": 725,
                "title": "feat: add status and headers overwrite for HandlerContext.render",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/725",
                "comments": [
                    "It seems that I need this merger. Is there any plan?",
                    "Hey Leo, could you provide some uses for this feature, and is this ready for review?",
                    "Yes its ready for review.\r\nExample usecases:\r\nhttps://github.com/denoland/dotland/issues/2256\r\nhttps://github.com/denoland/dotland/issues/2258"
                ]
            },
            {
                "pr_number": 1224,
                "title": "feat: more advanced prop serializer for islands",
                "body": "This commit adds support for an advanced (de)serializer that is used\nfor page state (island props and plugin state). This new serializer\nsupports maintaining references (thus supporting circular objects,\nand multi-referenced objects).\n\nThis is a pre-requisite for allowing to pass signals, JSX, Uint8Arrays,\nDate, and many other \"advanced\" values.\n",
                "html_url": "https://github.com/denoland/fresh/pull/1224",
                "comments": []
            },
            {
                "pr_number": 757,
                "title": "feat: support passing signals as island props",
                "body": "This commit adds support for passing signals to islands in component\r\nprops. This is useful for passing around mutable state between islands.\r\nThe signal's value needs to be serializable for this to work.\r\n\r\nCloses #749\r\n\r\nDepends on #1224 ",
                "html_url": "https://github.com/denoland/fresh/pull/757",
                "comments": []
            },
            {
                "pr_number": 1225,
                "title": "feat: support passing Uint8Array as island props",
                "body": "This commit adds support for passing Uint8Array's to islands in\ncomponent props.\n",
                "html_url": "https://github.com/denoland/fresh/pull/1225",
                "comments": []
            },
            {
                "pr_number": 1228,
                "title": "chore: upgrade to `esbuild_deno_loader@0.7.0`",
                "body": "One of the prerequisites for #1188.",
                "html_url": "https://github.com/denoland/fresh/pull/1228",
                "comments": []
            },
            {
                "pr_number": 1208,
                "title": "feat: remove hardcoded `deno.json` path",
                "body": "Fixes #961\r\n\r\nI needed to put my fresh project inside a subdirectory and this was getting in the way. I fixed it",
                "html_url": "https://github.com/denoland/fresh/pull/1208",
                "comments": [
                    "i was going to add support for `deno.jsonc` as well, but TypeScript is complaining about importing `.jsonc`"
                ]
            },
            {
                "pr_number": 1230,
                "title": "fix: buildIdPlugin breaks when Fresh is hosted",
                "body": "Only file:// URLs were supported previously, which breaks if you are\nimporting Fresh via HTTPS URLs.\n",
                "html_url": "https://github.com/denoland/fresh/pull/1230",
                "comments": []
            },
            {
                "pr_number": 1229,
                "title": "feat: add `PageProps` to _app",
                "body": "This should same purpose as https://github.com/denoland/fresh/pull/1153 but with more strict `type`\r\n\r\n> Could use it as reference for  https://github.com/denoland/fresh/pull/1153 and close this as duplicate\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1229",
                "comments": []
            },
            {
                "pr_number": 1189,
                "title": "feat: preloading JavaScript files",
                "body": "close #1187\r\n\r\n## points\r\n\r\n- use `<link rel=\"modulepreload\">` tag and `Link: rel=\"modulepreload\"` header to preload dependencies\r\n- No preloading at all for pages that don't use JavaScript at all.\r\n- Information about preloading is delivered only when the JS file has already been built. If the JS file hasn't finished building, it will respond without preload information instead of waiting for the build and then returning the HTML.\r\n\r\n## performance comparison\r\n\r\nI've deployed this branch to https://fresh-module-preload.deno.dev/ so you can try it out and see how it behaves.\r\n\r\nWhen I accessed [fresh.deno.dev](https://fresh.deno.dev/) and [fresh-module-preload.deno.dev](https://fresh-module-preload.deno.dev/) 20 times each and measured the DOMContentLoaded time, it was 24% faster (157.3ms -> 118.95ms) in my environment (Nagano City, Japan).\r\n\r\n<details>\r\n<summary>Actual measured data</summary>\r\n\r\n(Don't forget to check `Disable Cache` in devtools)\r\n\r\n\u00a0| afeter (ms) | before (ms)\r\n-- | -- | --\r\n0 | 180 | 152\r\n1 | 82 | 144\r\n2 | 78 | 186\r\n3 | 156 | 196\r\n4 | 88 | 211\r\n5 | 85 | 123\r\n6 | 162 | 209\r\n7 | 154 | 110\r\n8 | 86 | 175\r\n9 | 135 | 109\r\n10 | 183 | 117\r\n11 | 115 | 159\r\n12 | 99 | 173\r\n13 | 83 | 131\r\n14 | 82 | 142\r\n15 | 135 | 160\r\n16 | 120 | 125\r\n17 | 148 | 152\r\n18 | 118 | 229\r\n19 | 90 | 143\r\naverage | 118.95 | 157.3\r\n\r\n</details>\r\n\r\n## screen shots\r\n\r\n![image](https://github.com/denoland/fresh/assets/40050810/c8f6d46b-77da-4e20-b29c-3b0219907872)\r\n\r\n![image](https://github.com/denoland/fresh/assets/40050810/3159904c-07f0-45ee-a9ca-7bed35a292ca)\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1189",
                "comments": [
                    "Thank you for your review!\r\n\r\n> This is great - why both in the headers and the body though? I'd prefer sending it in headers only.\r\n\r\nThis is for backwards compatibility as the Link header is a new feature.\r\n\r\n- The share of browsers that support the Link header is 73%.\r\n    https://caniuse.com/mdn-http_headers_link\r\n    ![image](https://github.com/denoland/fresh/assets/40050810/73f12db9-79e1-428f-902a-58b6f7825799)\r\n- The share of browsers that support `<link rel=\"modulepreload\">` is 96%.\r\n    https://caniuse.com/link-rel-preload\r\n    ![image](https://github.com/denoland/fresh/assets/40050810/338bce3f-5106-4b05-8ff6-13aefd6b6922)\r\n\r\nBy putting preload information in both the header and body, people whose browsers don't support Link headers can also benefit from preloading.\r\n\r\n",
                    "I like this! I think we should do one or the other. I prefer using the `<link>` element because it has greater browser support. Outside of that, both perform the same function.",
                    "I have rebased the patch and have removed the `Link` headers in favour of just using the meta preload tags.\r\n\r\nCan you add some tests?",
                    "OK, I added a test.",
                    "Note: Using the Link header is faster than using the link tag. (For headers, preload can start when response headers arrive. When using tags, response headers arrive -> response body arrives -> parse body -> start preload.)\r\nThat said, it's something that can be added later. Merging as is is fine for me!",
                    "How can I add the `Link: rel=\"modulepreload\"` header to every request? Is it with a middleware?\r\n\r\nHere's my guess:\r\n\r\n```ts\r\n  async function (req: Request, ctx: MiddlewareHandlerContext<State>) {\r\n    const response = await ctx.next();\r\n    response.headers.append(\"Link\", 'rel=\"modulepreload\"');\r\n    return response;\r\n  },\r\n```"
                ]
            },
            {
                "pr_number": 1234,
                "title": "refactor: replace `useState()` with `useSignal()`",
                "body": "This change replaces `useState()` with the recommended `useSignal()` across the codebase.\r\n\r\nCloses #1214.",
                "html_url": "https://github.com/denoland/fresh/pull/1234",
                "comments": []
            },
            {
                "pr_number": 1236,
                "title": "chore: upgrade `preact-render-to-string` to 6.0.3",
                "body": "Depends on #1234.",
                "html_url": "https://github.com/denoland/fresh/pull/1236",
                "comments": [
                    "#1234 was merged. Should this un-drafted?"
                ]
            },
            {
                "pr_number": 1226,
                "title": "docs: add \"Modifying the Head Element\" example",
                "body": "resolves #1215 by adding example on modifying ``` <Head />``` on index.md",
                "html_url": "https://github.com/denoland/fresh/pull/1226",
                "comments": [
                    "Thank you very much for the feedback. Just to clarify, is the example in this PR the one mentioned in #1215? ",
                    "> Just to clarify, is the example in this PR the one mentioned in #1215?\r\n\r\nYes, it is \ud83d\udc4d\ud83c\udffe ",
                    "Thank you very much for the help along the way."
                ]
            },
            {
                "pr_number": 1237,
                "title": "chore: upgrade `preact` to 10.15.1 and `std` to 0.190.0",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1237",
                "comments": []
            },
            {
                "pr_number": 1231,
                "title": "chore: clean up esbuild builder logic",
                "body": "This will allow us to add various caches and similar around the esbuild\nbuilder easily in follow up PRs.\n\nIt also makes doing an AOT build-step + load assets from disk much\nsimpler.\n",
                "html_url": "https://github.com/denoland/fresh/pull/1231",
                "comments": [
                    "Would be super nice to have this. The current (hacky) approach to AOT build-step definitely should not be the long-term solution."
                ]
            },
            {
                "pr_number": 1188,
                "title": " feat: support embedded import map in `deno.json`",
                "body": "This change:\r\n1. Adds support for imports to be defined within `deno.json`.\r\n2. Makes imports within `deno.json` the default method for defining imports for new Fresh projects via the initialisation script.\r\n3. Converts the Fresh website, `/www`, tests and examples to using imports within `deno.json`.\r\n4. Updates to `esbuild_deno_loader@0.7.0`.\r\n5. Retains support for using `import_map.json` as a backup if the `imports` field is not defined within `deno.json`.\r\n\r\nCloses #1001 and #1028.",
                "html_url": "https://github.com/denoland/fresh/pull/1188",
                "comments": [
                    "The current deployment error appears to be caused by denoland/deploy_feedback#344. This PR should only be merged once that issue is fixed.",
                    "Status update: on my local machine, I've replaced `importMapUrl` in `denoPlugins()` with `configPath`, where `configPath = fromFileUrl(join(manifest.baseUrl, \"../deno.json\"))` in `ServerContext.fromManifest()`. I thought this would work, but it's producing a heap of errors once islands start to be rendered, such as:\r\n```\r\ndetail: Error: Module not found \"file:///Users/asher/GitHub/fresh/www/islands/preact/jsx-runtime\".\r\n    at NativeLoader.resolve (https://deno.land/x/esbuild_deno_loader@0.7.0/src/loader_native.ts:24:33)\r\n    at eventLoopTick (ext:core/01_core.js:181:11)\r\n    at async onResolve (https://deno.land/x/esbuild_deno_loader@0.7.0/src/plugin_deno_loader.ts:132:21)\r\n    at async requestCallbacks.on-resolve (https://deno.land/x/esbuild@v0.17.19/mod.js:1336:22)\r\n    at async handleRequest (https://deno.land/x/esbuild@v0.17.19/mod.js:699:13),\r\n      id: \"\",\r\n      location: {\r\n        column: 4,\r\n        file: \"www/islands/Counter.tsx\",\r\n        length: 0,\r\n        line: 13,\r\n        lineText: '    <div class=\"bg-gray-100 p-4 border border-gray-200 flex items-center justify-around\">',\r\n        namespace: \"\",\r\n        suggestion: \"\"\r\n      },\r\n      notes: [],\r\n      pluginName: \"deno-loader\",\r\n      text: 'Module not found \"file:///Users/asher/GitHub/fresh/www/islands/preact/jsx-runtime\".'\r\n    },\r\n```"
                ]
            },
            {
                "pr_number": 1239,
                "title": "www: correctly use signals in `<CopyArea>`",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1239",
                "comments": []
            },
            {
                "pr_number": 1238,
                "title": "chore: improve init readme",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1238",
                "comments": []
            },
            {
                "pr_number": 1242,
                "title": "fix: preload all the necessary files",
                "body": "close #1241\r\n\r\nAccording to `console.log(dependencies)`, we should use filenames without slashes to get the dependencies.\r\n\r\n![image](https://github.com/denoland/fresh/assets/40050810/b8743ad3-49fc-4d35-b9ac-688a39ead863)\r\n\r\n---\r\n\r\nAlso, this includes fixes related to https://github.com/denoland/fresh/pull/1231#discussion_r1215491755.",
                "html_url": "https://github.com/denoland/fresh/pull/1242",
                "comments": [
                    "Thank you for your review!"
                ]
            },
            {
                "pr_number": 1243,
                "title": "chore(www): fix accessibility issues",
                "body": "Address accessibility issues pointed out in lighthouse.",
                "html_url": "https://github.com/denoland/fresh/pull/1243",
                "comments": []
            },
            {
                "pr_number": 1244,
                "title": "docs: improve examples and fix app wrapper",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1244",
                "comments": []
            },
            {
                "pr_number": 582,
                "title": "docs: fix example folder names to be `deno-fresh-demo`",
                "body": "Figured it'd make sense to be consistent.",
                "html_url": "https://github.com/denoland/fresh/pull/582",
                "comments": [
                    "> \r\n\r\nWhere are these other mentions? Couldn't find them in the docs.",
                    "Try searching `my-project`. The file paths that include this are:\r\n- [x] /www/routes/index.tsx\r\n- [x] /www/routes/update.tsx"
                ]
            },
            {
                "pr_number": 1007,
                "title": "docs: add `_` prefix to unused request params",
                "body": "- add types to handlers in the Getting Started section to align with the examples in the Concepts section\r\n- prefix unused arguments with `_` as suggested by official VSCode plugin linting.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1007",
                "comments": [
                    "These types are inferred though, so it is unnecessary to provide these and makes the framework usage appear more verbose/cumbersome than it has to be.\r\n\r\nPerhaps the inferred annotations should instead be removed from the Concepts section and type details provided in a framework API section (which I think is currently a documentation omission, do have to dig into types for info quite a bit)."
                ]
            },
            {
                "pr_number": 468,
                "title": "feat: use `PORT` environment variable to change port",
                "body": "This can be useful when deploying to other providers.\r\n\r\nAlso more convenient for projects with multiple developers with port preferences",
                "html_url": "https://github.com/denoland/fresh/pull/468",
                "comments": [
                    "damn i'm stupid. i didn't notice it was inside console.log. thanks for pointing out",
                    "This seems like a useful addition. Are you able to add a simple test?",
                    "Hi @notangelmario, we're happy to merge this once a test is added.",
                    "sure, will get on it asap"
                ]
            },
            {
                "pr_number": 1246,
                "title": "fix: remove top level <script> imports",
                "body": "Instead, rely only on modulepreload for script preloading.\n\nFixes #1177",
                "html_url": "https://github.com/denoland/fresh/pull/1246",
                "comments": []
            },
            {
                "pr_number": 1250,
                "title": "chore(test): extract shared start server code",
                "body": "Noticed that the tests have lots of repeated code for starting up a fresh server and waiting for it to be ready. To me that seemed common enough that it makes sense to extract it in a function to be reused in test cases.",
                "html_url": "https://github.com/denoland/fresh/pull/1250",
                "comments": [
                    "@lucacasonato yeah cleanup logic for such things in tests is a always bit tricky. I'm not sure if a HOF approach or one where we can register cleanup logic in the test framework is easier to grasp. Let's flesh that out in the future.",
                    "Just need something to tide us over until https://github.com/tc39/proposal-explicit-resource-management ships "
                ]
            },
            {
                "pr_number": 745,
                "title": "Async plugin rendering (addresses #728)",
                "body": "Closes #728\r\n\r\nFor now, it's added as an extra hook that runs after all other render functions are called. I'm assuming it's alright that the async plugin render functions would be called after `opts.renderFn`, since none of the plugins modify the page's content, only add scripts/styles, and this way the thread local state will be preserved everywhere except in the renderAsync hooks.\r\n\r\nIf this looks good to you, I'll see if I can start building a couple of plugins.",
                "html_url": "https://github.com/denoland/fresh/pull/745",
                "comments": [
                    "> The renderAsync hook shouldn't run after page rendering, it should \"surrounding\" page rending.\r\n\r\nWouldn't that then interfere with thread local state if the async hooks are started before the synchronous hooks, though? Unless the async hooks are called without `await`-ing them, and then resolved with a `Promise.all` after the legacy opts.renderFn, but that would mean the htmlText from preact-render-to-string couldn't be passed to them.\r\n\r\nThat does sound like a much better order of execution, but unless I've misunderstood it would require that `ctx.render()`/`ctx.renderAsync()` get called before any/all async tasks run, which isn't guaranteed.\r\n\r\nThe other option might be, instead of passing a `ctx.render()`/`ctx.renderAsync()` function, to automatically evaluate the inner render functions first and pass the `htmlText` and `requiresHydration` within the `ctx`, since calling `ctx.render()` is enforced anyway? The only downside to that I can think of is if plugins intend to e.g. modify the `preact.options.vnode` hook before each render.",
                    "> Wouldn't that then interfere with thread local state if the async hooks are started before the synchronous hooks, though?\r\n\r\nI don't think so. As long as there is never an async callsite inside of the synchronous hook, the synchronous TLS should be fine. What are you thinking may brake?\r\n\r\n> Unless the async hooks are called without await-ing them, and then resolved with a Promise.all after the legacy opts.renderFn, but that would mean the htmlText from preact-render-to-string couldn't be passed to them.\r\n\r\nI don't think I've explained well what I mean to happen. Example:\r\n\r\n```ts\r\nconst plugin1 = {\r\n  name: \"plugin 1\",\r\n  async renderAsync(ctx) {\r\n    console.log(\"renderAsync hook start\");\r\n    const res = await ctx.renderAsync();\r\n    assert(res.htmlText);\r\n    console.log(\"renderAsync hook end\");\r\n  },\r\n  render(ctx) {\r\n    console.log(\"render hook start\");\r\n    const res = ctx.render();\r\n    assert(res.htmlText);\r\n    console.log(\"render hook end\");\r\n  },\r\n};\r\n\r\nasync function render(r) {\r\n  console.log(\"legacy render start\");\r\n  const htmlText = r();\r\n  assert(htmlText);\r\n  console.log(\"legacy render end\");\r\n}\r\n\r\n\r\nmain(manifest, {\r\n  plugins: [plugin1],\r\n  render,\r\n})\r\n```\r\n\r\nA render with the above setup should log:\r\n\r\n```\r\nrenderAsync hook start\r\nlegacy render start\r\nrender hook start\r\nrender hook end\r\nlegacy render end\r\nrenderAsync hook end\r\n```\r\n\r\nThe rendered HTML should be available in all hooks.",
                    "I've adjusted the code to work in the order you've suggested, and I've included a (temporary) demo in `tests/fixture_plugin/options.ts` to demonstrate it:\r\n\r\n```ts\r\nlet renderCount = 0;\r\n\r\nconst threadLocalStateTest: Plugin = {\r\n  name: \"threadLocalStateTest\",\r\n  async renderAsync(ctx) {\r\n    renderCount++;\r\n    console.log(renderCount, \"renderAsync hook start\");\r\n    await new Promise((res) => setTimeout(res, Math.random() * 3000));\r\n    const res = await ctx.renderAsync();\r\n    assert(res.htmlText);\r\n    console.log(renderCount, \"renderAsync hook end\");\r\n    return {};\r\n  },\r\n  render(ctx) {\r\n    console.log(renderCount, \"render hook start\");\r\n    const res = ctx.render();\r\n    assert(res.htmlText);\r\n    console.log(renderCount, \"render hook end\");\r\n    return {};\r\n  },\r\n};\r\n\r\nconst render: FreshOptions[\"render\"] = (_ctx, render) => {\r\n  console.log(renderCount, \"legacy render start\");\r\n  const htmlText = render();\r\n  assert(htmlText);\r\n  console.log(renderCount, \"legacy render end\");\r\n};\r\n```\r\n\r\nWhen a single page is requested, the following is logged, just like you described:\r\n\r\n```\r\n1 renderAsync hook start\r\n1 legacy render start\r\n1 render hook start\r\n1 render hook end\r\n1 legacy render end\r\n1 renderAsync hook end\r\n```\r\n\r\nWhen multiple pages are requested at once (or the same page requested twice within close proximity), the 3rd request starts rendering and updates local state before the 2nd request's async renderers are finished:\r\n\r\n```\r\n2 renderAsync hook start\r\n3 renderAsync hook start\r\n3 legacy render start\r\n3 render hook start\r\n3 render hook end\r\n3 legacy render end\r\n3 renderAsync hook end\r\n3 legacy render start\r\n3 render hook start\r\n3 render hook end\r\n3 legacy render end\r\n3 renderAsync hook end\r\n```\r\n\r\nThis is why I was suggesting pre-evaluating inner render functions, so that async code won't interfere with the expected thread state / execution order. Of course, if the `ctx.renderAsync` is called before anything else happens, then it works as it should, but that's not guaranteed + if we depend on it being the first thing called then why not just pre-evaluate the inner render functions anyway.",
                    "Hello @lucacasonato @dragonwocky, I'm trying to build my project for the first time using Fresh and my favorite CSS engine, UnoCSS, so I came here and I'm willing to move forward with this PR if needed. What is it currently blocked for?",
                    "Sorry for the long delay on landing.",
                    "I realise the new function is named `renderAsync()`. However, I think it should be `render()`, with its synchronous counterpart being `renderSync()`, to align with the rest of Deno's runtime APIs. This would be a breaking change, but we're dropping a new release soon, so it might be alright to do this now. Sorry, I didn't look at this sooner."
                ]
            },
            {
                "pr_number": 1245,
                "title": "feat: limited `npm:` specifier support",
                "body": "This commit adds limited support for `npm:` specifiers. Right now,\r\n`npm:` specifiers are unsupported on Deno Deploy.\r\n\r\nTowards #978 ",
                "html_url": "https://github.com/denoland/fresh/pull/1245",
                "comments": []
            },
            {
                "pr_number": 1019,
                "title": "feat: break render islands single task into to multiples",
                "body": "# Pull Request Context\r\nThe fresh hydration runs inside a single tasks, that means all plugins and all islands js execution will run in one tasks and probably will create a long task. Long Task, following the google definition, is every task the takes more than 50ms. This behavior impacts the total blocking time (TBT) and the Time to Interactive (TTI) metrics from Lighthouse (LH)\r\n\r\nThis algorithm increase linearly with the number of plugins/islands\r\n\r\n## What this Pull Request does?\r\nKnowing the problem above, this pull request suggest breaking the revive function task, that render all islands, into multiple tasks, one by island using the scheduler.postTask api or to setTimeout zero as fallback. Here a reference about \"breaking long tasks\" https://web.dev/optimize-long-tasks/\r\n What's the benefit of this:\r\n1. for each island the browser creates a task, so, each island has 50ms additional time, this impact directly the TBT and TTI;\r\n2. Also, browsers that implements the scheduler, can prioritize user interaction over hydration/revive, and this gives the site user a better user experience;\r\n\r\n> \u26a0\ufe0f This changes could run under an experimental flag, but I don't know what's the best approach to do this. I left a TODO warning about it.\r\n\r\n## Results\r\nI ran 30 PageSpeed Insights test via API, using https://github.com/igorbrasileiro/psi-sample-test, for each deploy preview with strategy mobile.\r\n\r\nExample 1:\r\nBefore the change: https://deco-sites-fashion-xpv2mkxz84gg.deno.dev/\r\n| Metric | Mean | Standard deviation | Confidence Interval (95%) |\r\n|--------|--------|--------|--------|\r\n| Cumulative Layout shift (CLS) | 0.00 | 0.00 | [0.00, 0.00] |\r\n| First Contentful Paint (FCP) | 1836.81 | 1.43 | [1836.30, 1837.32] |\r\n| Largest Contentful Paint (LCP) | 2201.81 | 39778.79 | [-12032.84, 16436.47] |\r\n| Time to Interactive (TTI) | 2123.17 | 14203.80 | [-2959.59, 7205.94] |\r\n| Total Blocking Time (TBT) | 184.18 | 6179.87 | [-2027.26, 2395.62] |\r\n| Performance score | 0.916 | 0.002511 | [0.914768, 0.916565] |\r\n| JavaScript Execution Time | 719.95 | 23649.72 | [-7742.99, 9182.90] |\r\n| Speed Index | 4085.94 | 5382052.26 | [-1921856.72, 1930028.61] |\r\n\r\nAfter the change: https://deco-sites-fashion-pmxene9e23eg.deno.dev/\r\n| Metric | Mean | Standard deviation | Confidence Interval (95%) |\r\n|--------|--------|--------|--------|\r\n| Cumulative Layout shift (CLS) | 0.00 | 0.00 | [0.00, 0.00] |\r\n| First Contentful Paint (FCP) | 1836.14 | 0.00 | [1836.14, 1836.14] |\r\n| Largest Contentful Paint (LCP) | 2136.14 | 0.00 | [2136.14, 2136.14] |\r\n| Time to Interactive (TTI) | 2087.71 | 27.62 | [2077.83, 2097.59] |\r\n| Total Blocking Time (TBT) | 108.10 | 164.64 | [49.18, 167.02] |\r\n| Performance score | 0.963 | 0.000021 | [0.962992, 0.963008] |\r\n| JavaScript Execution Time | 665.85 | 566.01 | [463.30, 868.39] |\r\n| Speed Index | 2656.46 | 238907.39 | [-82835.45, 88148.37] |\r\n\r\nAs you can see, the TTI and TBT the mean is lower and the std deviation too.\r\n\r\n## References\r\nhttps://web.dev/optimize-long-tasks/\r\nhttps://web.dev/tbt/\r\nhttps://pagespeed.web.dev/\r\nhttps://github.com/igorbrasileiro/psi-sample-test",
                "html_url": "https://github.com/denoland/fresh/pull/1019",
                "comments": [
                    "The project and deploy preview used as example comes from https://github.com/deco-sites/fashion/pull/46",
                    "The flamegraph differences\r\nbefore the change: you can see one task for the plugins + revive + render islands\r\n<img width=\"1030\" alt=\"image\" src=\"https://user-images.githubusercontent.com/15680320/217037769-03b7ead1-a81d-4fcc-bfc3-007e7755c445.png\">\r\n\r\nafter the change: you can see one task for plugins + revive and other small tasks for render the islands \r\n<img width=\"1033\" alt=\"image\" src=\"https://user-images.githubusercontent.com/15680320/217037503-86caa605-3611-4feb-b7a3-d12a0697e5f7.png\">\r\n",
                    "Hey folks, any news on this one? This seems to be a free lunch in terms of lighthouse scores.",
                    "Note: [`scheduler.postTask()` is well-supported, at 70% of all users](https://caniuse.com/mdn-api_scheduler_posttask). My only concern is the backup use of `setTimeout()`, which could impede performance for a large number of islands. However, the benefit of doing so will likely outweigh any headaches, so +1 from me.\r\n\r\nIf I'm wrong, alternatively, we can instead have the backup function be the old-fashioned `_render()`.",
                    "Great work @igorbrasileiro, thanks for the kind attention @iuioiua and @lucacasonato !"
                ]
            },
            {
                "pr_number": 1256,
                "title": "feat(debug): show rendering issues during SSR",
                "body": "We were already importing `preact/debug` in the client bundle, but not on the server. So any rendering issues on the server wouldn't show up.\r\n\r\n<img width=\"1120\" alt=\"Screenshot 2023-06-08 at 01 44 41\" src=\"https://github.com/denoland/fresh/assets/1062408/c9962cbe-957d-4f5f-8232-1dc8e1156875\">\r\n\r\nFixes #753, #761 .",
                "html_url": "https://github.com/denoland/fresh/pull/1256",
                "comments": []
            },
            {
                "pr_number": 1258,
                "title": "chore: correct misspelled variable",
                "body": "Renames `entires` to `entries`.",
                "html_url": "https://github.com/denoland/fresh/pull/1258",
                "comments": []
            },
            {
                "pr_number": 1260,
                "title": "fix(ssr): invalid HTML comment tags",
                "body": "I just landed a [preview feature](https://github.com/preactjs/preact-render-to-string/releases/tag/v6.1.0) in `preact-render-to-string` that allows you to render comments during SSR. That solves the invalid comment around islands that was reported in #838. It's marked as unstable mostly because we don't want folks other than framework authors to rely on that for now.\r\n\r\nFixes #838",
                "html_url": "https://github.com/denoland/fresh/pull/1260",
                "comments": [
                    "Looks like something changed with twind styles. Currently investigating...\r\n\r\nEDIT: Turns out one test was referencing an older version of `preact-render-to-string`. I've changed the PR so that both newer and older versions are supported. When v6.1.0 is detected which has the comments support we'll use that and if there is an older version, we'll print a warning and fall back to the previous behavior.\r\n\r\nHere is what the warning looks like: \r\n\r\n<img width=\"890\" alt=\"Screenshot 2023-06-09 at 11 01 39\" src=\"https://github.com/denoland/fresh/assets/1062408/1b84cacd-4960-44b1-9581-bc7ee029e524\">\r\n\r\n"
                ]
            },
            {
                "pr_number": 1261,
                "title": "chore(tests): use to spin up server",
                "body": "Use the `startFreshServer` helper function everywhere where it makes sense. Follow up PR to #1250 .\r\n\r\nFixes #1070",
                "html_url": "https://github.com/denoland/fresh/pull/1261",
                "comments": []
            },
            {
                "pr_number": 1262,
                "title": "chore(tests): don't cancel child process stream",
                "body": "This makes debugging tests a lot easier with console logging. Before this it would often error with a \"Broken Pipe\" error because the stream was closed.\r\n\r\nSee: https://github.com/denoland/deno/issues/19401",
                "html_url": "https://github.com/denoland/fresh/pull/1262",
                "comments": []
            },
            {
                "pr_number": 1267,
                "title": "fix(search): work around inline click handler",
                "body": "Preact, like most other popular frameworks disallows passing stringified JavaScript code as event handlers. We have one occurrence of that in our doc search. The recent addition of including `preact/debug` during server rendering in #1256 surfaced this problem.\r\n\r\nThis PR works around that by injecting a tiny script tag that attaches the event handler. Basically only a slightly different approach than before.\r\n\r\nFixes #1266",
                "html_url": "https://github.com/denoland/fresh/pull/1267",
                "comments": []
            },
            {
                "pr_number": 1263,
                "title": "feat(init): make directory argument optional",
                "body": "This PR makes the init command a little shorter and easier to remember by making the directory argument optional.\r\n\r\nBefore:\r\n\r\n```sh\r\ndeno run -A -r https://fresh.deno.dev deno-fresh-demo\r\n```\r\n\r\nAfter:\r\n\r\n```sh\r\ndeno run -A -r https://fresh.deno.dev\r\n```\r\n\r\nYou can still specify it like before, but not doing so simply asks for a project name as the first step:\r\n\r\n<img width=\"844\" alt=\"Screenshot 2023-06-09 at 14 41 41\" src=\"https://github.com/denoland/fresh/assets/1062408/1f21f4fe-9ec5-494c-b3fc-699ca07fc153\">\r\n\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1263",
                "comments": []
            },
            {
                "pr_number": 1265,
                "title": "docs: add \"setting the language\" example",
                "body": "closes https://github.com/denoland/fresh/issues/638\r\nThanks to @hashrock for showing how to do this. Please let me know if the wording should be different.",
                "html_url": "https://github.com/denoland/fresh/pull/1265",
                "comments": []
            },
            {
                "pr_number": 1269,
                "title": "fixes typo in init.ts \"Projet\" -> \"Project\"",
                "body": "I found a typo in the `init.ts` file where it prompts the user for a project name if one is not provided.",
                "html_url": "https://github.com/denoland/fresh/pull/1269",
                "comments": [
                    "Oh shoot, that's on me \ud83d\ude2c Thanks for making a PR \u2764\ufe0f  "
                ]
            },
            {
                "pr_number": 1272,
                "title": "fix(www): show missing GA env warning once",
                "body": "This makes sure that the google analytics middleware only warns once when it's not configured vs warning on every request.",
                "html_url": "https://github.com/denoland/fresh/pull/1272",
                "comments": []
            },
            {
                "pr_number": 1273,
                "title": "feat(server): make startup message easier to see",
                "body": "Noticed that it takes me a tiny amount of time to find the address in our output. It looked a bit too similar to the other output we log, and I think it's a good opportunity to make that more visually distinct. Best explained via pictures.\r\n\r\nBefore:\r\n\r\n<img width=\"462\" alt=\"Screenshot 2023-06-12 at 08 14 09\" src=\"https://github.com/denoland/fresh/assets/1062408/54b8fc30-462b-4e93-b3ae-dee5b02ee8c5\">\r\n\r\n\r\nAfter:\r\n\r\n<img width=\"450\" alt=\"Screenshot 2023-06-12 at 08 12 37\" src=\"https://github.com/denoland/fresh/assets/1062408/231e7669-65e0-410b-8f87-537a9d5d5fd7\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1273",
                "comments": [
                    "Amended a commit that adds the trailing slash like before."
                ]
            },
            {
                "pr_number": 1274,
                "title": "feat(server): pick free port if none specified",
                "body": "Noticed that it's a little annoying running multiple fresh projects at the same time because of trying to use the same port by default. When running locally during development I don't really care what port it's on, so we can just pick a free one ourselves. The logic is the same as found in vite or wmr.\r\n\r\nThis should also allow us to run tests in parallel.",
                "html_url": "https://github.com/denoland/fresh/pull/1274",
                "comments": [
                    "We'll definitely want to enable parallel testing at some point. It's much faster. Will PR that later today.\r\n\r\n| Mode | Time |\r\n|---|--:|\r\n| Sequential | 43s |\r\n| Parallel | 12s |",
                    "@lucacasonato good idea! Pushed a commit that hoists the handler creation \ud83d\udc4d "
                ]
            },
            {
                "pr_number": 1276,
                "title": "www: add discord icon + blog link",
                "body": "Before:\r\n\r\n<img width=\"514\" alt=\"Screenshot 2023-06-12 at 12 51 25\" src=\"https://github.com/denoland/fresh/assets/1062408/b9f6197c-63fb-47dc-a47c-2741111e3f65\">\r\n\r\nAfter:\r\n\r\n<img width=\"484\" alt=\"Screenshot 2023-06-12 at 12 52 03\" src=\"https://github.com/denoland/fresh/assets/1062408/51a766e4-fa83-4f93-9f4e-25fe06f7f814\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1276",
                "comments": []
            },
            {
                "pr_number": 1281,
                "title": "chore(ci): run tests in parallel",
                "body": "With #1274 merged we can now run tests in parallel. On my machine this leads to a great speedup.\r\n\r\n| Mode | Time |\r\n|---|--:|\r\n| Sequential | 43s |\r\n| Parallel | 12s |",
                "html_url": "https://github.com/denoland/fresh/pull/1281",
                "comments": []
            },
            {
                "pr_number": 1223,
                "title": "docs: add \"Writing Tests\" example",
                "body": "Fixes [#1222](https://github.com/denoland/fresh/issues/1222)\r\n\r\n\r\nAdd example implementation and documentation of test code using `createHandler()` newly added by [#622](https://github.com/denoland/fresh/pull/622) ",
                "html_url": "https://github.com/denoland/fresh/pull/1223",
                "comments": [
                    "Hi, @Octo8080X. Apologies, I wasn't clear enough that we'd like this in the new examples section of the documentation. It'll only require snippets, which will mean less maintenance in the future. Can you rework this as a `/docs/examples/testing.md` (or similar) file?\r\n\r\nAlso, could you please use Deno's Standard Library for assertion functions? You can check it out [here](https://deno.land/std@0.190.0/testing/asserts.ts?doc=).",
                    "Hi, @iuioiua san.\r\n\r\n> Can you rework this as a /docs/examples/testing.md (or similar) file?\r\n\r\nOK. `/docs/getting-started/create-test.md`, I'll let `/docs\\examples\\testing.md` remake it.\r\n\r\n> Also, could you please use Deno's Standard Library for assertion functions?\r\n\r\nI am sorry, but I used `assertEquals` that existed in `https://deno.land/std@0.190.0/testing/asserts.ts`. Was it insufficient?\r\nIf you don't want me to assume an import map, or if you mean that you don't want me to use superdeno and deno_dom, please let me know.\r\n\r\n",
                    "> OK. `/docs/getting-started/create-test.md`, I'll let `/docs\\examples\\testing.md` remake it.\r\n> \r\n> >\r\n\r\n\ud83d\udc4d\ud83c\udffe \r\n\r\n> If you don't want me to assume an import map, or if you mean that you don't want me to use superdeno and deno_dom, please let me know.\r\n\r\nYeah, I think just using assertions from `std` is good enough. I don't think superdeno and deno_dom are needed.",
                    "@iuioiua san\r\nThanks for letting me know.\r\n\r\nRemoved dependencies on superdeno and deno_dom and moved documents.\r\nPlease check.",
                    "I missed the instruction to delete examples. My apologies.\r\nI was able to delete it.\r\n(Only docs/examples/testing.md was added.)\r\n\r\nI would appreciate it if you could check my remarks to test code, as I have also reflected them.\r\n",
                    "On second thought, this might belong in the \"Concepts\" section instead of \"Examples\"...",
                    "Ah, I should have followed my own advice and merged this after the next release was cut. Hopefully, this doesn't cause too much headache, as the new release is being published soon. Apologies. My bad."
                ]
            },
            {
                "pr_number": 1282,
                "title": "chore: remove `www` workflow",
                "body": "This change removes the `www` workflow, simplifying CI to one workflow. This is made more accessible, thanks to #1281. This also fixes PR merging nits for when the affected files lie only within the `/www` folder. E.g. https://github.com/denoland/fresh/pull/1259#issuecomment-1586050738\r\n\r\nThe same checks in the `www` workflow are performed in the `ci` workflow.",
                "html_url": "https://github.com/denoland/fresh/pull/1282",
                "comments": []
            },
            {
                "pr_number": 1259,
                "title": "feat: add \"OpenAI Semantic Search\" to showcase",
                "body": "cc @lambtron @iuioiua",
                "html_url": "https://github.com/denoland/fresh/pull/1259",
                "comments": [
                    "I cannot merge as required tests aren't run in CI when the affected files all exist within the `/www` directory."
                ]
            },
            {
                "pr_number": 1287,
                "title": "fix: use `await Deno.serve().finished`",
                "body": "[A recent change in the runtime](https://github.com/denoland/deno/pull/19485) has changed the behaviour of `Deno.serve()` such that it throws when called a promise. The correct way to do it is instead to call `Deno.serve().finished` as a promise. This PR does that.\r\n\r\nFixes https://github.com/denoland/fresh/pull/1286#issuecomment-1589987387",
                "html_url": "https://github.com/denoland/fresh/pull/1287",
                "comments": []
            },
            {
                "pr_number": 1288,
                "title": "docs: fix \"Writing Tests\" example title typo",
                "body": "To align the casing with the rest of the documentation titles.",
                "html_url": "https://github.com/denoland/fresh/pull/1288",
                "comments": []
            },
            {
                "pr_number": 1283,
                "title": "fix: update script to work with non-embedded import maps",
                "body": "The script now updates non-embedded import maps to embedded ones.",
                "html_url": "https://github.com/denoland/fresh/pull/1283",
                "comments": [
                    "Needed this to run update.ts on merch.deno.com"
                ]
            },
            {
                "pr_number": 1290,
                "title": "feat(init): add update task",
                "body": "Fixes #1289",
                "html_url": "https://github.com/denoland/fresh/pull/1290",
                "comments": [
                    "Could https://github.com/denoland/fresh/blob/main/update.ts be updated to add this task to my existing `deno.json` file, so that I have to run `deno run -A -r https://fresh.deno.dev/update` once and then since the next update I will be able to just run `deno task update` without needing to manually update my tasks list?",
                    "@nicolo-ribaudo I like this idea! Would only do this though if no `update` task is present, which seems like a fair tradeoff."
                ]
            },
            {
                "pr_number": 1285,
                "title": "feat(islands): allow passing JSX children to island + nested islands",
                "body": "This PR allows you to basically mix and match static and dynamic content in whatever way you like. An island can receive JSX children that in turn spawns another island for example. All possible.\r\n\r\nJust because we can: Here is a demonstration of the flexibility of that. The red boxes are the JSX subtrees that were purely rendered on the server and passed to an island as JSX children. There is no code sent for these over the wire. They only exists in HTML.\r\n\r\nhttps://github.com/denoland/fresh/assets/1062408/b8d7653d-5da3-4c55-bd40-47d395b87b03\r\n\r\nThe beauty of this approach is that it works well with DevTools out of the box. We could explore different ways to visualize that these are server components in the future.\r\n\r\n<img width=\"430\" alt=\"Screenshot 2023-06-13 at 18 50 04\" src=\"https://github.com/denoland/fresh/assets/1062408/48012469-3146-4c95-9506-0c501387a824\">\r\n\r\n## Technical details\r\n\r\nThe way this works is by applying the same strategy of using comment markers to denote island boundaries for \"slots\" like `props.children`. During the initial bootup process when we're reviving the islands we now know with the slot markers which HTML nodes in a subtree are children of an island or of a server rendered JSX subtree that was passed as a slot. From that we stitch together the final virtual-dom tree that is rendered in the end.\r\n\r\n```html\r\n<div>\r\n  <!--frsh-island:0-->\r\n  <div class=\"island\">\r\n    <!--frsh-slot-island:children-->\r\n    <p>it works</p>\r\n    <!--/frsh-slot-island:children-->\r\n  </div>\r\n  <!--/frsh-island:0-->\r\n</div>\r\n```\r\n\r\nThis even works when the island renders no HTML and causes markers to be in the same level in the HTML hierarchy.\r\n\r\n```html\r\n<div>\r\n  <!--frsh-island:0-->\r\n  <!--frsh-slot-island:children-->\r\n  <p>it works</p>\r\n  <!--/frsh-slot-island:children-->\r\n  <!--/frsh-island:0-->\r\n</div>\r\n```\r\n\r\nSo when an island receives a JSX child, the `children` prop is marked as a slot. That's the only bit that's sent to the client.\r\n\r\n```jsx\r\n<Island> // <-- Client only\r\n  <h1>...</h1> // <-- server\r\n  <p>...</p>  // <-- server\r\n</Island>\r\n```\r\n\r\nIsland's props sent to the client:\r\n\r\n```js\r\nconst props = {\r\n  children: { __slot: children}\r\n}\r\n```\r\n\r\nAs you can see right now only `children` slots are supported. In theory it should be possible to extend this to other props too:\r\n\r\n```jsx\r\n<Island foo={<ServerComponent />} /> // <-- future\r\n```\r\n\r\nIslands are pretty straight forward in the sense that we have the code to create them form scratch on the client anyway. Turns out that reconstructing what the server rendered is actually pretty easy. Thing is that any server rendered JSX passed to the client (like not islands), must be plain HTML. And you know we _have_ the plain HTML right in front of us. So we can easily reconstruct the virtual tree structure from the HTML to construct the fully fledged out virtual-dom tree. From Preact's point of view it thinks that it rendered everything itself. This means from that point on it's the usual rendering and allows you to conditionally destroy the server rendered bits if needed.\r\n\r\nWhen islands are nested and regardless of whether some server supplied JSX is in between them, the nested islands will be revived in the same hydration call as the parent ones.\r\n\r\n```jsx\r\n<Island>\r\n  <Island> // <-will wake up with parent island\r\n    <p>hello from server</p>\r\n  </Island>\r\n</Island>\r\n```\r\n\r\nIn the future it would be even cooler to bail out of hydration somewhere in the middle of the tree when an island inside another island is detected. But for that to work elegantly some changes to Preact itself are needed as we currently expect you to hydrate the whole tree at once. Need to put some more thought to that.\r\n\r\n## Conclusion\r\n\r\nI do think the strategy laid out here is pretty strong after playing around with it intensively the past days. It's a good starting point to even optimize this further. We could skip creating the virtual sub tree from the server JSX once Preact gains the ability to skip over DOM nodes and lazily hydrate sections of the tree. Either way, I think it's already useful enough in its current form that it's worth it to land imo.\r\n\r\nThe list of changes is unfortunately a bit messy due to the number of tests. Basically this PR rewrites all the revival code.\r\n\r\nFixes #168, fixes #750, fixes #395, fixes #1209\r\n\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1285",
                "comments": [
                    "I guess this deals with the confusingly titled https://github.com/denoland/fresh/issues/1209 as well? And looks like this supersedes https://github.com/denoland/fresh/pull/517.",
                    "Good point, I haven't looked into #1209 yet and the title made it sound like the issue is with hooks. Reading it know it seems like it's about passing JSX children to islands too.",
                    "Can you add something to the docs about this? Probably warrants a whole section in the getting started, and in the reference docs.",
                    "@lucacasonato added some docs to the existing island page. I checked the getting started guide, but I feel like no changes are needed there. The page there explains the idea behind islands and how to use them and I think it will be natural for folks to pass childrens to them."
                ]
            },
            {
                "pr_number": 1293,
                "title": "docs: add \"Server configuration\" concept explanation",
                "body": "as requested in https://github.com/denoland/fresh/pull/1291#discussion_r1230435556, i've pulled this out to a separate pr\r\n@iuioiua ",
                "html_url": "https://github.com/denoland/fresh/pull/1293",
                "comments": []
            },
            {
                "pr_number": 1286,
                "title": "docs: add \"Changing the source directory\" example",
                "body": "closes https://github.com/denoland/fresh/issues/257\r\nsupersedes https://github.com/denoland/fresh/pull/456\r\n\r\nI reworked this to include the latest project structure and results. @iuioiua, please take a look, since you requested 456 to be updated.",
                "html_url": "https://github.com/denoland/fresh/pull/1286",
                "comments": [
                    "Can anyone on the team tell me a bit about the failures here? e.g. https://github.com/denoland/fresh/actions/runs/5260086756/jobs/9506523671?pr=1286",
                    "> Can anyone on the team tell me a bit about the failures here? e.g. https://github.com/denoland/fresh/actions/runs/5260086756/jobs/9506523671?pr=1286\r\n\r\nI've created #1287, which fixes this issue."
                ]
            },
            {
                "pr_number": 1284,
                "title": "Invoke getTime() on the Date value and not on the date signal",
                "body": "Fix typo in example code",
                "html_url": "https://github.com/denoland/fresh/pull/1284",
                "comments": [
                    "@najumancheril  Looks like the changes need a format to pass CI. You can do that by running `deno fmt`",
                    "I have made the following changes:\r\n- Fixed a second location where code was using now rather than now.value\r\n- Fixed format\r\n- Reordered the code a bit so we compute seconds once up front. This avoids the annoying \"The big event is happening in 0 seconds.\" message due to timer jitter. Instead, we show \"...1 second\" and then party. This also reduces the number of now.value references from 2 to 1. Unlike the other edits, this change is not a typo and totally optional. Let me know if you don't want it at all or if you want it in a separate pull request."
                ]
            },
            {
                "pr_number": 1295,
                "title": "fix: rendering islands inside other islands",
                "body": "Noticed that one use case of nesting islands wasn't supported and this PR addresses that.\r\n\r\n```jsx\r\nfunction Island() {\r\n  return <OtherIsland />\r\n}\r\n```\r\n\r\nThe previous code had trouble with this too, but it often wasn't a problem because the outer island removed the incorrect HTML.\r\n\r\nThe approach taken here relies on keeping track of `vnode` \"owners\". An owner of a `vnode` is the component whose render call lead to the creation of said `vnode`. The same logic is used in lots of tooling related to Preact (DevTools, prefresh, debug) and can be found in other frameworks like React too. That said this makes the fix look a little more involved than it actually is.\r\n\r\nThis is a follow up to #1285 .",
                "html_url": "https://github.com/denoland/fresh/pull/1295",
                "comments": []
            },
            {
                "pr_number": 1291,
                "title": "feat(server): trailing slash configuration",
                "body": "closes https://github.com/denoland/fresh/issues/359\r\nsupersedes https://github.com/denoland/fresh/pull/433\r\n\r\nOnce again standing on the shoulders of giants here (i.e. I took the solution from 433). I tried adding some documentation for configuring the server as well.",
                "html_url": "https://github.com/denoland/fresh/pull/1291",
                "comments": [
                    "Is there any way for me to retrigger certain checks?",
                    "> Thanks for adding the test!\r\n> \r\n> Keen to see the server configuration added. But can you please create a separate PR for it?\r\n\r\nSorry, what do you mean? Which stuff should stay here then?"
                ]
            },
            {
                "pr_number": 1297,
                "title": "chore: update `versions.json` for 1.2.0",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1297",
                "comments": []
            }
        ],
        "1.1.6": [
            {
                "pr_number": 1105,
                "title": "www: add Deno SaaSKit to showcase",
                "body": "CC @lambtron",
                "html_url": "https://github.com/denoland/fresh/pull/1105",
                "comments": []
            },
            {
                "pr_number": 1089,
                "title": "showcase: add Alvaro Vanegas Site",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1089",
                "comments": []
            },
            {
                "pr_number": 1104,
                "title": "re-org Form docs",
                "body": "- added `/concepts/forms`\r\n- added 303 redirect in `POST` form submit code example\r\n\r\nprevious PR: https://github.com/denoland/fresh/pull/1040",
                "html_url": "https://github.com/denoland/fresh/pull/1104",
                "comments": []
            },
            {
                "pr_number": 1113,
                "title": "chore: update ci deno version",
                "body": "The issue should be fixed now with the latest stable Deno.",
                "html_url": "https://github.com/denoland/fresh/pull/1113",
                "comments": []
            },
            {
                "pr_number": 1122,
                "title": "refactor: include router directly in fresh",
                "body": "This PR changes from depending on https://deno.land/x/rutt to instead include a reduced & simplified version of it.",
                "html_url": "https://github.com/denoland/fresh/pull/1122",
                "comments": [
                    "> This doesn't yet touch the middleware handling itself, right?\r\n\r\nCorrect, just upstreaming the router for now. Middleware will be done in a followup."
                ]
            },
            {
                "pr_number": 1109,
                "title": "showcase: FestWithMe",
                "body": "Add https://fest-with-me.deno.dev/ to showcase\r\n\r\n![image](https://user-images.githubusercontent.com/20637800/230767312-1cd7485c-f458-420b-9bfa-1c195d92119b.png)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1109",
                "comments": []
            },
            {
                "pr_number": 1108,
                "title": "showcase: add Teams Template",
                "body": "Hi,\r\n\r\nAdding a teams template site built with Deno Fresh to the showcase.\r\nThe template is made with the hopes of being helpful to newbies to the framework: [README](https://github.com/davit-b/teams-template#deno-fresh--typesafe-dynamodb--daisyui--tailwind)\r\n\r\nIt allows a githubId to be entered to add a user to a team. I've used the public contributors on Fresh as the example image, but if requested, I could change the image to a team of any other github users. Let me know if you'd prefer that. \r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1108",
                "comments": []
            },
            {
                "pr_number": 1123,
                "title": "feat: add middleware destination",
                "body": "Closes #521 ",
                "html_url": "https://github.com/denoland/fresh/pull/1123",
                "comments": []
            },
            {
                "pr_number": 1096,
                "title": "docs: Carousel Component",
                "body": "Carousel Component added to the site as requested in Pull Request #1088 also related to #1085",
                "html_url": "https://github.com/denoland/fresh/pull/1096",
                "comments": [
                    "When I do `deno check main.ts dev.ts` locally it seemed to be using more lenient settings... I worked it out using the actions, but why is more strict on actions? (example I can't use type :any on the action)",
                    "I don't think I know how to do that without adding a whole bunch of code, and I don't think that really fits with the spirit of what I was trying for. How about I just remove the keyboard listeners altogether?",
                    "So the way I see to make this work is to add another signal \"focused\" then I have to toggle that value with the `onBlur` and `onFocus` events. Then I check \"focused\" in my keyboard handler and take action from there.\r\n\r\nIs there is a simpler way I am missing? `document.activeElement` doesn't seem to do the thing I am thinking of.",
                    "how about this?\r\n\r\n- add `tabindex=0` to element\r\n- addEventListener to element instead of document",
                    "hmm, I think it doesn't need to use signal.\r\ndo you think we can use useState instead?",
                    "I think there is a bug in the way I did the useState. My first idea is to make it just a fade transition instead of a Carousel, I have to backtrack a bit to figure out how to use the different state API.\r\n\r\nAlso, I am trying to understand what the use of the useSignal hook is if you prefer useState in components? I like signals because the API is cleaner IMHO, is there more than that to it?",
                    "Oh sorry, I thought that signals was only used for communication between islands. But the preact docs show such as usecase for local state.\r\nhttps://preactjs.com/guide/v10/signals/\r\n\r\nIf that's why you prefer the signals API, then I guess you can just use signals here."
                ]
            },
            {
                "pr_number": 1139,
                "title": "chore: update for deno 1.33",
                "body": "This PR updates the code for Deno 1.33.x to solve errors on the CI. See https://github.com/denoland/fresh/actions/runs/4834957340/jobs/8616765955?pr=1138",
                "html_url": "https://github.com/denoland/fresh/pull/1139",
                "comments": [
                    "Hm looks like puppeteer has trouble starting in a particular test.",
                    "Investigated a little bit and it seems like `browser.close()` hangs for multiple minutes. The test itself runs fairly quick.",
                    "@marvinhagemeister The puppeteer issue should bee fixed in 1.33.1 _I think_. @littledivy was working on it yesterday.",
                    "Oh I see - it only hangs on the close. I wonder if the new WebSocket implementation is not sending the `\"close\"` event for some reason.",
                    "It is reproducible in a minimal example: https://github.com/denoland/deno/issues/18912.\r\n\r\nMaybe let's lock the tests to 1.32.5 until this is fixed (and disable canary).",
                    "Since there is now a fix in canary, I have disabled 1.x tests for now. We can re-enable after 1.31.2 is released."
                ]
            },
            {
                "pr_number": 1138,
                "title": "fix: superfluous dir message when dir === cwd",
                "body": "Fixes #1137",
                "html_url": "https://github.com/denoland/fresh/pull/1138",
                "comments": []
            },
            {
                "pr_number": 1146,
                "title": "fix(dev): server stalls when clicking quickly between pages",
                "body": "- Replaced the refresh script based on @audionerd 's [commented code](https://github.com/denoland/fresh/issues/1079#issuecomment-1476826096).\r\n- ~~added a simple minify function for DX.~~\r\n\r\n\r\n\r\nClose #1079 \r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1146",
                "comments": [
                    "Other than picking \"reflesh\" as a name, the actual changes LGTM. Did you mean refresh? I haven't heard of reflesh but maybe it's a technical term I'm not aware of.",
                    "Oh, my fault\ud83d\ude05\r\nIf I make another mistake, please point it out.",
                    "HTTP/1.1's stupid 6 max concurrent connections behaviour is... ahhhh.\r\n\r\nLGTM"
                ]
            },
            {
                "pr_number": 1157,
                "title": "chore: Carousel Component is island",
                "body": "Carousel(#1096 ) is good.\r\nBut carousel is island. \r\nCarousel don't work in components because carousel use JavaScript.\r\n\r\nSo, need to add 'island' tag for developers.\r\n\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1157",
                "comments": [
                    "I have used a CSS only carousel as a component (a refactored version of\nthis with TWIND or PICO CSS)\n\nlink to working codepen: A CSS-only Carousel Slider (codepen.io)\n<https://codepen.io/Schepp/pen/WNbQByE>\n\n\nOn May 9, 2023, SleepyShay ***@***.***> wrote:\n> Carousel is good.\n> \u00a0But carousel is island.\n> \u00a0Carousel don't work in components because carousel use JavaScript.\n>\n> So, need to add 'island' tag for developers.\n>\n\n> You can view, comment on, or merge this pull request online at:\u00a0\n> <https://github.com/denoland/fresh/pull/1157>\n>\n> Commit Summary\n>  *  6a850e7\n>     <https://github.com/denoland/fresh/pull/1157/commits/6a850e7a9528aa0f0a1b7b47d782b836f1d0ba65>\n>     chore: Carousel Component is island\n>\n\nFile Changes\n> \u00a0\n> (1\u00a0file <https://github.com/denoland/fresh/pull/1157/files>)\n>\n>  *  M\n>     www/islands/ComponentGallery.tsx\n>     <https://github.com/denoland/fresh/pull/1157/files#diff-\n>     03b1c2e9c80559bd058a0602450a5a7a1b5726a983bf3381f973d0578a4f590d>\n>     (2)\u00a0\n>\n> Patch Links:\n>  *  <https://github.com/denoland/fresh/pull/1157.patch>\n>  *  <https://github.com/denoland/fresh/pull/1157.diff>\n>     \u2014\n>     Reply to this email directly, view it on GitHub\n>     <https://github.com/denoland/fresh/pull/1157>, or unsubscribe\n>     <https://github.com/notifications/unsubscribe-\n>     auth/ATXWUNTC55MD4VLNZNXSQHTXFJE67ANCNFSM6AAAAAAX3K5MTI>.\n>     You are receiving this because you are subscribed to this\n>     thread.Message ID: ***@***.***>\n>\n>\n",
                    "Oh sry. \"Carousel Components\" I said is #1096.\r\nThe carousel works in  only islands, not components.\r\n\r\nBut I think your carousel is nice idea."
                ]
            },
            {
                "pr_number": 1158,
                "title": "fix(www): docs title align center",
                "body": "I removed dead class, \"block\".\r\nThe \"block\" class conflicted with \"flex\".\r\nThat had shifted a docs title to up and down.\r\n\r\nPlease compare following URL and check the title.\r\nhttps://fresh.deno.dev/docs/introduction\r\nhttps://fresh.deno.dev/components",
                "html_url": "https://github.com/denoland/fresh/pull/1158",
                "comments": []
            },
            {
                "pr_number": 1159,
                "title": "chore: update tabler_icons_tsx version",
                "body": "Update tabler_icons_tsx to latest as 0.0.3.\r\nThe purpose of this PR is to unify the version of [tabler_icons_tsx](https://deno.land/x/tabler_icons_tsx@0.0.3) for those who use [components](https://fresh.deno.dev/components).\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1159",
                "comments": [
                    "Maybe, the test failure is the cause of [GitHub Actions down](https://www.githubstatus.com/incidents/pr3498h3qkfy)."
                ]
            },
            {
                "pr_number": 1152,
                "title": "docs: Bump up deno Dockerfile version",
                "body": "closes #1136",
                "html_url": "https://github.com/denoland/fresh/pull/1152",
                "comments": []
            },
            {
                "pr_number": 1162,
                "title": "fix(www): cursor on docs search modal",
                "body": "In the current docs pages, the cursor becomes a pointer on docs search modal.\r\nThe bug is caused by twind being styled to be a pointer on `[role=\"button\"]` element.\r\n\r\nThis PR overwrites twind's css from docsearch.css on the modal.",
                "html_url": "https://github.com/denoland/fresh/pull/1162",
                "comments": []
            },
            {
                "pr_number": 1154,
                "title": "showcase: add pollify",
                "body": "A simple polling application using Deno KV.\r\n\r\nDemo poll: https://pollify.deno.dev/7a0b5cc341a61c49a58798529e43e919",
                "html_url": "https://github.com/denoland/fresh/pull/1154",
                "comments": []
            },
            {
                "pr_number": 1149,
                "title": "showcase: add JPT Deno ChatGPT Rooms",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1149",
                "comments": []
            },
            {
                "pr_number": 1160,
                "title": "ref(init): Update routes/index.tsx to be correctly formatted with deno fmt",
                "body": "With current formatting, a fresh project will reformat on save and create an unnecessary diff.",
                "html_url": "https://github.com/denoland/fresh/pull/1160",
                "comments": []
            },
            {
                "pr_number": 1167,
                "title": "fix: cleanup pathname with multiple trailing slashes",
                "body": "From #1144\r\n\r\nCloses #1114",
                "html_url": "https://github.com/denoland/fresh/pull/1167",
                "comments": []
            },
            {
                "pr_number": 1134,
                "title": "feat: allow deeplinking components",
                "body": "Adds an ID to the component titles to allow deep-linking to components.\r\n\r\nhttp://localhost:8000/components#Carousel\r\n\r\nhttp://localhost:8000/components#Icons",
                "html_url": "https://github.com/denoland/fresh/pull/1134",
                "comments": []
            },
            {
                "pr_number": 1169,
                "title": "Add mieszko.xyz to showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1169",
                "comments": []
            },
            {
                "pr_number": 1168,
                "title": "fix(server): obfuscated deployment id in build id",
                "body": "Based on #1143\r\n\r\nFixes https://github.com/denoland/fresh/issues/1142",
                "html_url": "https://github.com/denoland/fresh/pull/1168",
                "comments": []
            },
            {
                "pr_number": 1171,
                "title": "showcase: add `Awesome Fresh`",
                "body": "Add [Awesome Fresh](https://uki00a.github.io/awesome-fresh/) to showcase. The site is built with Fresh and deployed as a static page to GitHub Page.",
                "html_url": "https://github.com/denoland/fresh/pull/1171",
                "comments": []
            },
            {
                "pr_number": 1164,
                "title": "docs: unify space within section",
                "body": "Many section tags use `space-y-4` class. Don't have to be `space-y-5` class on that section.\r\nAlso, showcase and components page will be the same design and look good.",
                "html_url": "https://github.com/denoland/fresh/pull/1164",
                "comments": []
            },
            {
                "pr_number": 593,
                "title": "Update dynamic-routes.md",
                "body": "Update docs to match current file structure.\r\n\r\nI'm using `fresh@1.0.2` and the boilerplate created have the dynamic route directly into the root of `routes` folder.",
                "html_url": "https://github.com/denoland/fresh/pull/593",
                "comments": []
            },
            {
                "pr_number": 740,
                "title": "feat: automatic loading of `.env` file",
                "body": "added dotenv option to read environment variables files",
                "html_url": "https://github.com/denoland/fresh/pull/740",
                "comments": [
                    "Just found this while looking for docs for `dotenv`. Wondering what the status here is? Is it worthwhile to contribute some docs or is `dotenv` default landing soon?"
                ]
            },
            {
                "pr_number": 1127,
                "title": "Update dynamic-routes docs test url",
                "body": "the local server uses http, this link as it stands does't work",
                "html_url": "https://github.com/denoland/fresh/pull/1127",
                "comments": []
            },
            {
                "pr_number": 1055,
                "title": "docs: Add fresh_marionette to the Integrations section of the docs",
                "body": "I made a fresh module to help people get started with browser testing.",
                "html_url": "https://github.com/denoland/fresh/pull/1055",
                "comments": [
                    "I think just removing lock file will solve the problem :)",
                    "You were right, thanks! Wish I saw this sooner",
                    "Do these get squashed somewhere? The branch got kinda messy. Or related: do we mind?",
                    "We can squash when we merge PRs so no worries. Please wait for review"
                ]
            },
            {
                "pr_number": 1181,
                "title": "chore(ci): dependabot for GitHub actions",
                "body": "This weekly action ensures other GitHub actions are kept up-to-date. See [here](https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot) for more info. It should recommend upgrading a few actions on its initial run.",
                "html_url": "https://github.com/denoland/fresh/pull/1181",
                "comments": [
                    "Ah, yes. Good point."
                ]
            },
            {
                "pr_number": 1180,
                "title": "chore(ci): disable fail-fast",
                "body": "This change allows CI to continue on an OS even if CI on another OS fails.",
                "html_url": "https://github.com/denoland/fresh/pull/1180",
                "comments": []
            },
            {
                "pr_number": 1179,
                "title": "chore(ci): enable Deno v1.x",
                "body": "https://github.com/denoland/deno/commit/64e072e499d36ca824db297a493667415ed67cdf has been merged and is now part of the latest version of Deno.",
                "html_url": "https://github.com/denoland/fresh/pull/1179",
                "comments": []
            },
            {
                "pr_number": 1182,
                "title": "chore(deps): bump actions/checkout from 2 to 3",
                "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 2 to 3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<ul>\n<li>Updated to the node16 runtime by default\n<ul>\n<li>This requires a minimum <a href=\"https://github.com/actions/runner/releases/tag/v2.285.0\">Actions Runner</a> version of v2.285.0 to run, which is by default available in GHES 3.4 or later.</li>\n</ul>\n</li>\n</ul>\n<h2>v2.7.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add new public key for known_hosts (<a href=\"https://redirect.github.com/actions/checkout/issues/1237\">#1237</a>) by <a href=\"https://github.com/TingluoHuang\"><code>@\u200bTingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1238\">actions/checkout#1238</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v2.6.0...v2.7.0\">https://github.com/actions/checkout/compare/v2.6.0...v2.7.0</a></p>\n<h2>v2.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add backports to v2 branch by <a href=\"https://github.com/cory-miller\"><code>@\u200bcory-miller</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1040\">actions/checkout#1040</a>\n<ul>\n<li>Includes backports from the following changes: <a href=\"https://redirect.github.com/actions/checkout/pull/964\">actions/checkout#964</a>, <a href=\"https://redirect.github.com/actions/checkout/pull/1002\">actions/checkout#1002</a>, <a href=\"https://redirect.github.com/actions/checkout/pull/1029\">actions/checkout#1029</a></li>\n<li>Upgraded the licensed version to match what is used in v3.</li>\n</ul>\n</li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v2.5.0...v2.6.0\">https://github.com/actions/checkout/compare/v2.5.0...v2.6.0</a></p>\n<h2>v2.5.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update <code>@\u200bactions/core</code> to 1.10.0 by <a href=\"https://github.com/rentziass\"><code>@\u200brentziass</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/962\">actions/checkout#962</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v2...v2.5.0\">https://github.com/actions/checkout/compare/v2...v2.5.0</a></p>\n<h2>v2.4.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add set-safe-directory input to allow customers to take control. (<a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>) by <a href=\"https://github.com/TingluoHuang\"><code>@\u200bTingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/776\">actions/checkout#776</a></li>\n<li>Prepare changelog for v2.4.2. by <a href=\"https://github.com/TingluoHuang\"><code>@\u200bTingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/778\">actions/checkout#778</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v2...v2.4.2\">https://github.com/actions/checkout/compare/v2...v2.4.2</a></p>\n<h2>v2.4.1</h2>\n<ul>\n<li>Fixed an issue where checkout failed to run in container jobs due to the new git setting <code>safe.directory</code></li>\n</ul>\n<h2>v2.4.0</h2>\n<ul>\n<li>Convert SSH URLs like <code>org-&lt;ORG_ID&gt;@github.com:</code> to <code>https://github.com/</code> - <a href=\"https://redirect.github.com/actions/checkout/pull/621\">pr</a></li>\n</ul>\n<h2>v2.3.5</h2>\n<p>Update dependencies</p>\n<h2>v2.3.4</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/379\">Add missing <code>await</code>s</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/360\">Swap to Environment Files</a></li>\n</ul>\n<h2>v2.3.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/345\">Remove Unneeded commit information from build logs</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/326\">Add Licensed to verify third party dependencies</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@\u200bactions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@\u200bactions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@\u200bactions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/770\">Add input <code>set-safe-directory</code></a></li>\n</ul>\n<h2>v3.0.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/762\">Fixed an issue where checkout failed to run in container jobs due to the new git setting <code>safe.directory</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/744\">Bumped various npm package versions</a></li>\n</ul>\n<h2>v3.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/689\">Update to node 16</a></li>\n</ul>\n<h2>v2.3.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/284\">Fix default branch resolution for .wiki and when using SSH</a></li>\n</ul>\n<h2>v2.3.0</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/8e5e7e5ab8b370d6c329ec480221332ada57f0ab\"><code>8e5e7e5</code></a> Release v3.5.2 (<a href=\"https://redirect.github.com/actions/checkout/issues/1291\">#1291</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/eb35239ec22e9029a5be28f8c41e67452f615f0f\"><code>eb35239</code></a> Fix: convert baseUrl to serverApiUrl 'formatted' (<a href=\"https://redirect.github.com/actions/checkout/issues/1289\">#1289</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/83b7061638ee4956cf7545a6f7efe594e5ad0247\"><code>83b7061</code></a> Release v3.5.1 (<a href=\"https://redirect.github.com/actions/checkout/issues/1284\">#1284</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/40a16ebeed7da831425b665e600750cb36b38d06\"><code>40a16eb</code></a> Improve checkout performance on Windows runners by upgrading <code>@\u200bactions/github</code> ...</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8f4b7f84864484a7bf31766abe9204da3cbe65b3\"><code>8f4b7f8</code></a> Add new public key for known_hosts (<a href=\"https://redirect.github.com/actions/checkout/issues/1237\">#1237</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/cd6a9fd49371476d813e892956e2e920fcc3fb7e\"><code>cd6a9fd</code></a> Update update-main-version.yml</li>\n<li><a href=\"https://github.com/actions/checkout/commit/24cb9080177205b6e8c946b17badbe402adc938f\"><code>24cb908</code></a> Bump <code>@\u200bactions/io</code> to v1.1.3 (<a href=\"https://redirect.github.com/actions/checkout/issues/1225\">#1225</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/27135e314dd1818f797af1db9dae03a9f045786b\"><code>27135e3</code></a> Upgrade dependencies (<a href=\"https://redirect.github.com/actions/checkout/issues/1210\">#1210</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/7b187184d12a8f064f797aeb51e4873c109637c7\"><code>7b18718</code></a> Upgrade codeql actions to v2 (<a href=\"https://redirect.github.com/actions/checkout/issues/1209\">#1209</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/ac593985615ec2ede58e132d2e21d2b1cbd6127c\"><code>ac59398</code></a> Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>) (<a href=\"https://redirect.github.com/actions/checkout/issues/1057\">#1057</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/checkout/compare/v2...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
                "html_url": "https://github.com/denoland/fresh/pull/1182",
                "comments": []
            },
            {
                "pr_number": 1184,
                "title": "chore(deps): bump actions/setup-node from 1 to 3",
                "body": "Bumps [actions/setup-node](https://github.com/actions/setup-node) from 1 to 3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-node/releases\">actions/setup-node's releases</a>.</em></p>\n<blockquote>\n<h2>Add support for asdf format and update actions/cache version to 3.0.0</h2>\n<p>In scope of this release we updated <code>actions/cache</code> package as the new version contains fixes for <a href=\"https://redirect.github.com/actions/setup-node/pull/526\">caching error handling</a>. Moreover, we added support for asdf format as Node.js version file <a href=\"https://redirect.github.com/actions/setup-node/pull/373\">actions/setup-node#373</a>. Besides, we introduced new output <a href=\"https://redirect.github.com/actions/setup-node/pull/534\">node-version</a> and added <code>npm-shrinkwrap.json</code> to dependency file patterns: <a href=\"https://redirect.github.com/actions/setup-node/pull/439\">actions/setup-node#439</a></p>\n<h2>Update actions/cache version to 2.0.2</h2>\n<p>In scope of this release we updated <code>actions/cache</code> package as the new version contains fixes related to GHES 3.5 (<a href=\"https://redirect.github.com/actions/setup-node/pull/460\">actions/setup-node#460</a>)</p>\n<h2>v3.0.0</h2>\n<p>In scope of this release we changed version of the runtime Node.js for the setup-node action and updated package-lock.json file to  v2.</p>\n<h3>Breaking Changes</h3>\n<ul>\n<li>With the update to Node 16 in <a href=\"https://redirect.github.com/actions/setup-node/pull/414\">actions/setup-node#414</a>, all scripts will now be run with Node 16 rather than Node 12.</li>\n<li>We removed deprecated <code>version</code> input (<a href=\"https://redirect.github.com/actions/setup-node/pull/424\">actions/setup-node#424</a>). Please use <code>node-version</code> input instead.</li>\n</ul>\n<h2>Update <code>@\u200bactions/core</code> for v2</h2>\n<p>In scope of this release we updated actions/core to 1.10.0 and actions/tool-cache to 1.7.2 for v2: <a href=\"https://redirect.github.com/actions/setup-node/pull/713\">actions/setup-node#713</a></p>\n<h2>Fix logic of error handling for npm warning and uncaught exception</h2>\n<p>In scope of this release we fix logic of error handling related to caching (<a href=\"https://redirect.github.com/actions/setup-node/pull/358\">actions/setup-node#358</a>) and (<a href=\"https://redirect.github.com/actions/setup-node/pull/359\">actions/setup-node#359</a>).</p>\n<p>In the previous behaviour we relied on <code>stderr</code> output to throw error. The warning messages from package managers can be written to the stderr's output. For now the action will throw an error only if exit code differs from zero. Besides, we add logic to \u0441atch and log unhandled exceptions.</p>\n<h2>Adding Node.js version file support</h2>\n<p>In scope of this release we add the <code>node-version-file</code> input and update <code>actions/cache</code> dependency to the latest version.</p>\n<h2>Adding Node.js version file support</h2>\n<p>The new input (<code>node-version-file</code>) provides functionality to specify the path to the file containing Node.js's version with such behaviour:</p>\n<ul>\n<li>If the file does not exist the action will throw an error.</li>\n<li>If you specify both <code>node-version</code> and <code>node-version-file</code> inputs, the action will use value from the <code>node-version</code> input and throw the following warning: <code>Both node-version and node-version-file inputs are specified, only node-version will be used</code>.</li>\n<li>For now the action does not support all of the variety of values for Node.js version files. The action can handle values according to the <a href=\"https://github.com/actions/setup-node#supported-version-syntax\">documentation</a> and values with <code>v</code> prefix (<code>v14</code>)</li>\n</ul>\n<pre lang=\"yaml\"><code>steps:\n  - uses: actions/checkout@v2\n  - name: Setup node from node version file\n    uses: actions/setup-node@v2\n    with:\n      node-version-file: '.nvmrc'\n  - run: npm install\n  - run: npm test\n</code></pre>\n<h2>Update actions/cache dependency to 1.0.8 version.</h2>\n<p>We updated actions/cache dependency to the latest version (1.0.8). For more information please refer to the <a href=\"https://github.com/actions/toolkit/blob/main/packages/cache/RELEASES.md\">toolkit/cache</a>.</p>\n<h2>Add &quot;cache-hit&quot; output</h2>\n<p>This release introduces a new output: <code>cache-hit</code> (<a href=\"https://redirect.github.com/actions/setup-node/issues/327\">#327</a>).</p>\n<p>The <code>cache-hit</code> output contains boolean value indicating that an exact match was found for the key. It shows that the action uses already existing cache or not. The output is available only if cache is enabled.</p>\n<h2>Support caching for mono repos and repositories with complex structure</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-node/commit/64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c\"><code>64ed1c7</code></a> Add support for v8-canary, nightly and rc (<a href=\"https://redirect.github.com/actions/setup-node/issues/655\">#655</a>)</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/92a57f4a935efe978b0a4d8e5b19fb42658c7ef7\"><code>92a57f4</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/setup-node/issues/650\">#650</a> from actions/update-code-owners</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/99e61d697ac985dd26c630fb5e8f9476131abbdb\"><code>99e61d6</code></a> Update CODEOWNERS</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/3e8819f8f297df8b29fc3e383683a29be2bf129a\"><code>3e8819f</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/setup-node/issues/649\">#649</a> from actions/update-codeowners</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/8cd2fb28b8f13cfe537ae737100b155acc87e562\"><code>8cd2fb2</code></a> Update CODEOWNERS</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/c406543918243bdbe7b25799f6a378e753fed484\"><code>c406543</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/setup-node/issues/647\">#647</a> from akv-platform/apply-reusable-workflows</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/92a07fe46640c3ab57d394b7b01308a008a3231d\"><code>92a07fe</code></a> Fix review points</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/217387cf3e2597f3eed81c19f662eeddbdd397de\"><code>217387c</code></a> Update action to use reusable-workflows repo</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/2db36638708d0ad3215bcdff9f8a61d64021ae68\"><code>2db3663</code></a> Merge branch 'main' of <a href=\"https://github.com/akv-platform/setup-node\">https://github.com/akv-platform/setup-node</a> into apply-...</li>\n<li><a href=\"https://github.com/actions/setup-node/commit/bbe2ac79a1347190c27c8a7ca53301a26c066415\"><code>bbe2ac7</code></a> Fix typo in README (<a href=\"https://redirect.github.com/actions/setup-node/issues/646\">#646</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-node/compare/v1...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-node&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
                "html_url": "https://github.com/denoland/fresh/pull/1184",
                "comments": []
            },
            {
                "pr_number": 1183,
                "title": "chore(deps): bump actions/cache from 2 to 3",
                "body": "Bumps [actions/cache](https://github.com/actions/cache) from 2 to 3.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/releases\">actions/cache's releases</a>.</em></p>\n<blockquote>\n<h2>v3.0.0</h2>\n<ul>\n<li>\n<p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=\"https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect\">github connect</a> or manually copying the repo to their GHES instance.</p>\n</li>\n<li>\n<p>Few dependencies and cache action usage examples have also been updated.</p>\n</li>\n</ul>\n<h2>Updating actions/core to version 1.10.0</h2>\n<p>The ::save-state and ::set-output are deprecated. The newer version of actions/core &gt;1.10.0 uses the new syntax for save and set output. After this change, customers using actions/cache@v2 won't see deprecation warning message.</p>\n<h2>v2.1.7</h2>\n<p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=\"https://www.npmjs.com/package/@actions/cache\"><code>@actions/cache</code> </a></p>\n<h2>v2.1.6</h2>\n<ul>\n<li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=\"https://redirect.github.com/actions/cache/pull/596\">actions/cache#596</a>)</li>\n</ul>\n<h2>v2.1.5</h2>\n<ul>\n<li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=\"https://redirect.github.com/actions/cache/issues/527\">actions/cache#527</a>)</li>\n</ul>\n<h2>v2.1.4</h2>\n<ul>\n<li>Make caching more verbose <a href=\"https://redirect.github.com/actions/toolkit/pull/650\">#650</a></li>\n<li>Use GNU tar on macOS if available <a href=\"https://redirect.github.com/actions/toolkit/pull/701\">#701</a></li>\n</ul>\n<h2>v2.1.3</h2>\n<ul>\n<li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=\"https://github.com/advisories/GHSA-mfwh-5m23-j46w\">CVE-2020-15228</a>. This action was not using the affected methods.</li>\n<li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>\n</ul>\n<h2>v2.1.2</h2>\n<ul>\n<li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>\n<li>No-op when executing on GHES</li>\n</ul>\n<h2>v2.1.1</h2>\n<ul>\n<li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>\n</ul>\n<h2>v2.1.0</h2>\n<ul>\n<li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure.  This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>\n<li>Display download progress and speed</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/cache/blob/main/RELEASES.md\">actions/cache's changelog</a>.</em></p>\n<blockquote>\n<h1>Releases</h1>\n<h3>3.0.0</h3>\n<ul>\n<li>Updated minimum runner version support from node 12 -&gt; node 16</li>\n</ul>\n<h3>3.0.1</h3>\n<ul>\n<li>Added support for caching from GHES 3.5.</li>\n<li>Fixed download issue for files &gt; 2GB during restore.</li>\n</ul>\n<h3>3.0.2</h3>\n<ul>\n<li>Added support for dynamic cache size cap on GHES.</li>\n</ul>\n<h3>3.0.3</h3>\n<ul>\n<li>Fixed avoiding empty cache save when no files are available for caching. (<a href=\"https://redirect.github.com/actions/cache/issues/624\">issue</a>)</li>\n</ul>\n<h3>3.0.4</h3>\n<ul>\n<li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=\"https://redirect.github.com/actions/cache/issues/689\">issue</a>)</li>\n</ul>\n<h3>3.0.5</h3>\n<ul>\n<li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=\"https://redirect.github.com/actions/cache/pull/834\">PR</a>)</li>\n</ul>\n<h3>3.0.6</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/809\">#809</a> - zstd -d: no such file or directory error</li>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/833\">#833</a> - cache doesn't work with github workspace directory</li>\n</ul>\n<h3>3.0.7</h3>\n<ul>\n<li>Fixed <a href=\"https://redirect.github.com/actions/cache/issues/810\">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>\n</ul>\n<h3>3.0.8</h3>\n<ul>\n<li>Fix zstd not working for windows on gnu tar in issues <a href=\"https://redirect.github.com/actions/cache/issues/888\">#888</a> and <a href=\"https://redirect.github.com/actions/cache/issues/891\">#891</a>.</li>\n<li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MINS</code>. Default is 60 minutes.</li>\n</ul>\n<h3>3.0.9</h3>\n<ul>\n<li>Enhanced the warning message for cache unavailablity in case of GHES.</li>\n</ul>\n<h3>3.0.10</h3>\n<ul>\n<li>Fix a bug with sorting inputs.</li>\n<li>Update definition for restore-keys in README.md</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/cache/commit/88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8\"><code>88522ab</code></a> Reduced download segment size to 128 MB and timeout to 10 minutes (<a href=\"https://redirect.github.com/actions/cache/issues/1129\">#1129</a>)</li>\n<li><a href=\"https://github.com/actions/cache/commit/940f3d7cf195ba83374c77632d1e2cbb2f24ae68\"><code>940f3d7</code></a> Add <code>lookup-only</code> option (<a href=\"https://redirect.github.com/actions/cache/issues/1041\">#1041</a>)</li>\n<li><a href=\"https://github.com/actions/cache/commit/e0d62270e20d6eeecf2fd6397a1b8871b6269e38\"><code>e0d6227</code></a> docs: Add missing permission in cache delete example (<a href=\"https://redirect.github.com/actions/cache/issues/1123\">#1123</a>)</li>\n<li><a href=\"https://github.com/actions/cache/commit/69d9d449aced6a2ede0bc19182fadc3a0a42d2b0\"><code>69d9d44</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/cache/issues/1118\">#1118</a> from actions/pdotl/zstd-hotfix</li>\n<li><a href=\"https://github.com/actions/cache/commit/8d3a1e02aa504540dff5000c782b8263e3b411fb\"><code>8d3a1e0</code></a> Fix license</li>\n<li><a href=\"https://github.com/actions/cache/commit/b1db4b48979ec1f6d6142513d9448c4288d05ec4\"><code>b1db4b4</code></a> Fix zstd breaking after new version release</li>\n<li><a href=\"https://github.com/actions/cache/commit/7d4d6f7ffd301005e7fac90369bb90ae1d547974\"><code>7d4d6f7</code></a> Update package-lock.json</li>\n<li><a href=\"https://github.com/actions/cache/commit/8f7fa5d715f6773b40e9fbf9cb77bcb5d914d0dc\"><code>8f7fa5d</code></a> Bump <code>@\u200bactions/cache</code> version</li>\n<li><a href=\"https://github.com/actions/cache/commit/95b455a0fba5a5e1770cc10ded51e5fe99a6737b\"><code>95b455a</code></a> 3.2.6</li>\n<li><a href=\"https://github.com/actions/cache/commit/81b728193625a15a55fcce4c6eb6187358533785\"><code>81b7281</code></a> Updated branch in Force deletion of caches (<a href=\"https://redirect.github.com/actions/cache/issues/1108\">#1108</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/cache/compare/v2...v3\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
                "html_url": "https://github.com/denoland/fresh/pull/1183",
                "comments": []
            },
            {
                "pr_number": 1186,
                "title": "refactor: disable lock",
                "body": "This change disables the lock file for tests and the initialisation script. The noise produced in tests by generated lock files is now gone. This was also done because of Fresh's use of [esm.sh](https://esm.sh/) and [this](https://github.com/denoland/deno-gfm/issues/47#issuecomment-1460872019).",
                "html_url": "https://github.com/denoland/fresh/pull/1186",
                "comments": []
            },
            {
                "pr_number": 1190,
                "title": "refactor: simplify `www` task",
                "body": "I think this makes a little more sense.",
                "html_url": "https://github.com/denoland/fresh/pull/1190",
                "comments": []
            },
            {
                "pr_number": 1192,
                "title": "fix typo",
                "body": "typo too -> two\r\n\r\nPlease this really triggered my autism",
                "html_url": "https://github.com/denoland/fresh/pull/1192",
                "comments": []
            },
            {
                "pr_number": 1198,
                "title": "Adding learn mandaring project to showcase",
                "body": "Hello I want to add my small contribution to the showcase",
                "html_url": "https://github.com/denoland/fresh/pull/1198",
                "comments": []
            },
            {
                "pr_number": 1172,
                "title": "fix: conditionally rendered element under fragment in island does not render",
                "body": "This might be fixing #502, but I am not sure. All tests pass. I've added additional test cases for comments from #502",
                "html_url": "https://github.com/denoland/fresh/pull/1172",
                "comments": [
                    "Nice work, @azerum. Can you please run `deno fmt` and remove any other changes, such as newlines, that don't directly serve to fix the main issue?",
                    "@iuioiua Thank you! Sorry for delay, wanted to fix formatting today, but you were faster :)"
                ]
            },
            {
                "pr_number": 1197,
                "title": "doc: API reference link in README",
                "body": "Closes #1196.",
                "html_url": "https://github.com/denoland/fresh/pull/1197",
                "comments": []
            }
        ],
        "1.1.5": [
            {
                "pr_number": 1036,
                "title": "refactor: remove deno.run",
                "body": "remove deno.run in favor of Deno.Command",
                "html_url": "https://github.com/denoland/fresh/pull/1036",
                "comments": [
                    "The actions has failed because `Deno.Command` is unstable, please add `--unstable` flag to Ci workflows.\r\n![Failed ci workflow](https://user-images.githubusercontent.com/84047886/220165640-51a1ee36-9f87-4ad6-b376-40203485cddf.png)\r\n",
                    "`Deno.Command` is going to be stabilized soon. For context: https://github.com/denoland/deno/pull/17628. Seems to be targeted for 1.31 (unless I can't read properly).",
                    "`Deno.Command` has been stabilized. Any chance this could get merged @hashrock?",
                    "@lucacasonato @hashrock Could this be merged? (the issue blocking the previous auto-merge has now been resolved). thanks"
                ]
            },
            {
                "pr_number": 1050,
                "title": "fix: hydrate in twind-v1-plugin ",
                "body": "This PR is a slightly modified version of hydrate from twind-v1-plugin (#946).\r\n\r\nIn this plugin, Cssrules of SSR are resumed by [cssom()](https://github.com/tw-in-js/twind/blob/main/packages/core/src/sheets.ts#L23) of twind.\r\nThere are demos for each of #946 and this PR. (I added a lot of classes to compare the performance.)\r\n\r\n- #946 plugin's [Demo](https://y3km21-fresh-twind-pr946.deno.dev/) ([source](https://github.com/y3km21/ex-fresh-twind-pr946))\r\n\r\n- This PR plugin's [Demo](https://y3km21-fresh-twind-resume.deno.dev/) ([source](https://github.com/y3km21/ex-fresh-twind-resume-working))\r\n\r\n## What is the issue with #946 plugin?\r\n\r\nTwind's [getSheet](https://github.com/tw-in-js/twind/blob/main/packages/core/src/sheets.ts#L177) returns the sheet created from [cssom](https://github.com/tw-in-js/twind/blob/main/packages/core/src/sheets.ts#L23) to which [resume is assigned](https://github.com/tw-in-js/twind/blob/main/packages/core/src/sheets.ts#L184), but since SSR's HtmlStyleSheet cannot be targeted to this sheet, [resume](https://github.com/tw-in-js/twind/blob/main/packages/core/src/sheets.ts#L206) at setup doesn't make sense.\r\nAs a result, CSSRules of ClientSide that partially overlaps with ServerSide is inserted.\r\n[Demo](https://y3km21-fresh-twind-pr946-j8dzftmr1s90.deno.dev/)\r\n<img width=\"465\" alt=\"pr946-demo-styles\" src=\"https://user-images.githubusercontent.com/12783604/221395087-4f28afaf-c166-4c17-a991-73c4c863f437.png\">\r\n\r\nI think this should be improved.\r\n\r\n## What was changed?\r\nI made a sheet created by cssom with SSR's HtmlStyleSheet as the target, and bind the resume of the sheet created by getSheet.\r\n```ts\r\nexport default function hydrate(options: TwindConfig) {\r\n  const elem = document.getElementById(STYLE_ELEMENT_ID) as HTMLStyleElement;\r\n  const sheet = cssom(elem);\r\n\r\n  sheet.resume = getSheet().resume.bind(sheet);\r\n  document.querySelector('[data-twind=\"claimed\"]')?.remove();\r\n\r\n  setup(options, sheet);\r\n}\r\n```\r\n[Demo](https://y3km21-fresh-twind-resume-2f9vnxg7z7d0.deno.dev/)\r\n<img width=\"469\" alt=\"thisPR-demo-styles\" src=\"https://user-images.githubusercontent.com/12783604/221395750-9d0bc6c2-9226-46fe-aa46-c19aa533435e.png\">\r\n\r\nThe resume of the sheet is working, so there is no duplication.\r\n\r\n## What about performance?\r\nI compared the performance of each plugin on chrome.\r\n\r\n- #946 plugin's [Demo](https://y3km21-fresh-twind-pr946.deno.dev/) ([source](https://github.com/y3km21/ex-fresh-twind-pr946))\r\n<img width=\"783\" alt=\"pr946-demo-per\" src=\"https://user-images.githubusercontent.com/12783604/221396065-37574a5c-afdb-49de-bb03-642b2d277c3a.png\">\r\n\r\n- This PR plugin's [Demo](https://y3km21-fresh-twind-resume.deno.dev/) ([source](https://github.com/y3km21/ex-fresh-twind-resume-working))\r\n<img width=\"778\" alt=\"thisPR-demo-per\" src=\"https://user-images.githubusercontent.com/12783604/221396078-81c0a719-e207-4239-bf08-5f7c585f4715.png\">\r\n\r\nThe Scripting time for each is about the same.\r\n\r\n---\r\n\r\nThank you very much for reading through to the end.\r\nPlease let me know if my understanding is wrong.\ud83d\ude4f",
                "html_url": "https://github.com/denoland/fresh/pull/1050",
                "comments": [
                    "@ry Yes, I will do it soon!\r\nI have a few questions about creating a test.\r\n- Should I create a test like `fresh/tests/fixture_twind-pr1050`?\r\n- Should the content of the test be such that this PR passes and #946 fails?(For example, compare stylesheets in islands)\r\n\r\n",
                    "Thank you!\r\n\r\n> Should I create a test like fresh/tests/fixture_twind-pr1050?\r\n\r\njust `fresh/tests/fixture_twind` is also fine!\r\n\r\n> Should the content of the test be such that this PR passes and https://github.com/denoland/fresh/pull/946 fails?(For example, compare stylesheets in islands)\r\n\r\nYes, it would be helpful!",
                    "@hashrock Thanks!\r\nI'll write a test.\r\n",
                    "I added test!\r\nThe test contents are as follows\r\n1. Ensure that twind compiles class in static page.\r\n1. Ensure that twind does not cause duplication of cssrules in islands.\r\n1. Ensure that twind compiles dynamically inserted classes in islands.\r\n\r\n`deno task test` results would look like this\r\n| Test No. | #1050 | #946 | twind v0.16 plugin |\r\n|---|---|---|---|\r\n|1|:white_check_mark:|:white_check_mark:|:white_check_mark:|\r\n|2|:white_check_mark:|:x:|:white_check_mark:|\r\n|3|:white_check_mark:|:x:|:white_check_mark:|\r\n\r\nPlease let me know if I am missing or wrong!\r\n",
                    "@ry Thanks for the review!\r\nI have corrected the areas you reviewed.\r\n\r\nBut there is one thing I couldn't solve.\r\nThe textDecoderStream called here leaks.\r\nhttps://github.com/denoland/fresh/blob/c4cfb201e72908ae6d0cc9993310a9baa78891dd/tests/twind_test.ts#L23-L25\r\nI have tried calling cancel() of `lines` and  externally TextDecoderStream (ex. `const decoder = TextDecoderStream();`), but could't solve it.\r\n\r\n\r\nFor now, I got the textDecoder's rid from the resourceMap and manually close the resource.\r\nhttps://github.com/denoland/fresh/blob/c4cfb201e72908ae6d0cc9993310a9baa78891dd/tests/twind_test.ts#L47-L63\r\n\r\nIs there a correct cancel() call?\r\nOr should I add `sanitizeResources: false`?\r\n",
                    "Without `--trace-ops`, a leak occurred, so I added `delay(10)` before `t.step`.",
                    "@hashrock Thanks for merging!"
                ]
            },
            {
                "pr_number": 1076,
                "title": "showcase: add fresh-blog-system",
                "body": "add new case",
                "html_url": "https://github.com/denoland/fresh/pull/1076",
                "comments": [
                    "> \r\n\r\nwhat else do i need to do?"
                ]
            },
            {
                "pr_number": 1069,
                "title": "chore: bump deps and update copyright year v2",
                "body": "Let's try this again... because of @lucacasonato's work, this now works in deploy",
                "html_url": "https://github.com/denoland/fresh/pull/1069",
                "comments": [
                    "@hashrock please take a look!",
                    "I will be pair programming with kt3k next week, so we'll look then.\r\n\r\nI'm not familiar with why this was revert last time, but wasn't it related to this issue? If so, it would be nice to have this test.\r\n\r\nhttps://github.com/denoland/fresh/issues/1012",
                    "I will see if I can somehow add a test"
                ]
            },
            {
                "pr_number": 1082,
                "title": "test: island with wasm-esbuild",
                "body": "To prevent regression with island + deno deploy(wasm env)\r\n\r\nhttps://github.com/denoland/fresh/pull/1047",
                "html_url": "https://github.com/denoland/fresh/pull/1082",
                "comments": []
            },
            {
                "pr_number": 1102,
                "title": "chore: fix ci",
                "body": "This PR fixes CI by specifying the last compatible Deno version in ci.yml, and also skipping the assertion about weak etag. (`Deno.serve` has been replaced by a wrapper of `Deno.serveHttp` and it now compresses the responses automatically and therefore etag becomes weak etag.)",
                "html_url": "https://github.com/denoland/fresh/pull/1102",
                "comments": []
            },
            {
                "pr_number": 1097,
                "title": "chore(ci): set timeout minutes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1097",
                "comments": []
            },
            {
                "pr_number": 1095,
                "title": "1.1.5",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1095",
                "comments": [
                    "CI looks broken by Deno upgrade. (Started broken since v1.32.2)"
                ]
            }
        ],
        "1.1.4": [
            {
                "pr_number": 1027,
                "title": "showcase: yaml to typescript",
                "body": "A simple page which developed by fresh to translate Yaml to TypeScript inferface.",
                "html_url": "https://github.com/denoland/fresh/pull/1027",
                "comments": []
            },
            {
                "pr_number": 989,
                "title": "Denosoar GUI showcase",
                "body": "Denosoar is an open source memory tool that is used to track potential memory leaks for applications built with Deno. Denosoar analyzes and displays in real time the RSS(resident set size), Heap Total, Heap Usage and External Memory using easy to read charts.",
                "html_url": "https://github.com/denoland/fresh/pull/989",
                "comments": [
                    "could you add screenshots of your website?\r\n\r\nhttps://github.com/denoland/fresh#adding-your-project-to-the-showcase"
                ]
            },
            {
                "pr_number": 986,
                "title": "chore: bump dependencies and license year",
                "body": "blocked by: https://github.com/lucacasonato/esbuild_deno_loader/pull/22\r\ncloses #984 \r\nsupersedes: https://github.com/denoland/fresh/pull/952",
                "html_url": "https://github.com/denoland/fresh/pull/986",
                "comments": [
                    "[The blocking pr](https://github.com/lucacasonato/esbuild_deno_loader/pull/22) was merged",
                    "@sigmaSd thanks for the reminder, will update this PR when I get the chance.",
                    "There seems to have been a regression between `1.29.2` and `1.30.0` since the tests pass fine (locally) for `1.29.2` not `1.30.0`",
                    "Honestly just finding niche things to change until the tests pass... I have no idea why they are so flaky.",
                    "@kt3k PTAL!",
                    "@kt3k PTAL!",
                    "@kt3k PTAL",
                    "The project is in hibernation",
                    "This caused the below error in deploy and islands didn't work unfortunately..\r\n\r\n<img width=\"991\" alt=\"Screen Shot 2023-02-24 at 15 10 15\" src=\"https://user-images.githubusercontent.com/613956/221105503-984815d7-b2ec-4eef-9f12-3c888f49f41a.png\">\r\n",
                    "Will look into it now. Very weird.",
                    "Looks like it's an issue with specifically the wasm version. We should add tests for that. Has caused trouble at least twice before.",
                    "> We should add tests for that. Has caused trouble at least twice before.\r\n\r\nYeah, we need a way to test the rendering with wasm in CI",
                    "After scratching my head at this for some time, I think I've narrowed it down to either being a breaking change to esbuild or a bug with esbuild_deno_loader (because of a breaking change with esbuild). I will investigate more tomorrow and hopefully create a PR with the bug fixed."
                ]
            },
            {
                "pr_number": 946,
                "title": "feat: add twind v1 plugin",
                "body": "**Opening this as a draft as I realize this isn't compete in terms of documentation but I also kinda wanted to get a conversation started around the plans to do this.**\r\n\r\nThis is adding a _new_ plugin not updating the old one as that would be a breaking change and I assume that isn't desired here.\r\n\r\n## Changes in the twind api\r\n\r\nTwind did a lot in the v1 to support the behavior that was already being implemented in the plugin. This allows the plugin to become significantly simplified.\r\n\r\n- Getting the rules off of the sheet can be done with a provided `stringify` function.\r\n- `virtual` sheets support a prop `includeResumeData` which implements the behavior previously implemented in the plugin if hydration was required\r\n- Because of this the hydration is also simplified significantly. \r\n\r\nAn example of twind calling out this resume behavior is in [their changelog](https://github.com/tw-in-js/twind/blob/49cbec823c2092a5d2b80b51a400f470a26fa960/packages/with-sveltekit/CHANGELOG.md#100-next33).\r\n\r\n## Example of usage\r\n\r\nI've forked the fresh hackernews example and pushed it up to deno deploy. You can see the code [here](https://github.com/trescenzi/temp-deno-test).\r\n\r\n- Version using the existing twind plugin: https://trescenzi-temp-deno-test.deno.dev\r\n- Version using the code in this pr: https://trescenzi-temp-deno-test-4wgbkdynxr00.deno.dev\r\n\r\nThe interesting piece is clicking into comments as they have islands and require hydration. Running `document.querySelector('#__FRSH_TWIND').innerText.length` on a page with comments returns:\r\n\r\n- [Existing twind plugin](https://trescenzi-temp-deno-test.deno.dev/item?id=33971377): `4998`\r\n- [Code in this PR](https://trescenzi-temp-deno-test-4wgbkdynxr00.deno.dev/item?id=33971377): `5237`\r\n\r\nI haven't yet identified exactly what's accounting for the modest increase in style size but I'm pretty sure there's nothing obviously duplicated so it's possible it's a change in the base css.\r\n\r\n## Things I'm totally unsure of\r\n\r\n- Should the import map be updated? Not sure the standard here.\r\n- How might we want to test this?\r\n- Should this simply be a separate plugin? \r\n- Documentation/autogeneration/whatever else must change. I assume there's a lot more to getting this merged as the twind plugin is rather core to fresh.\r\n\r\nThank you for taking the time to look through this. \ud83d\ude04 In the meantime I think I'm going to publish this as a separate plugin. However please feel free to say that I shouldn't if you'd like to publish an \"official\" one.\r\n\r\ncloses #834 ",
                "html_url": "https://github.com/denoland/fresh/pull/946",
                "comments": [
                    "@trescenzi Love the initiative and happy to support - yet I'm not very experienced with fresh myself. I've [tried a few months ago](https://github.com/denoland/fresh/compare/main...noxan:fresh:twind-next) when `twind` was still pre-release. Let me know if there is some way to help and for me current version `twind` would make building with fresh so much easier (not wondering why my components don't work or back-porting tailwind components from v3 to v2) \ud83d\udc4d ",
                    "I think the biggest question here is what the maintainers would like to do with regards to managing the upgrade. I assume they wouldn't simply swap out the `twind` plugin because that would break people. Even though the fresh side of the api is basically identical the twind isn't.",
                    "I've dug a bit deeper into the length discrepancy in the style tag. It looks like this comes from how twindv1 does the hydration/resuming.\r\n\r\n**Old resume example**\r\n```\r\n.pb-3{padding-bottom:0.75rem}/*1r4zlrdu*/\r\n.pb-1{padding-bottom:0.25rem}/*1r4zlrdu*/\r\n```\r\n\r\n**New resume example**\r\n```\r\n/*!dbgidc,y,pb-1*/.pb-1{padding-bottom:0.25rem}\r\n/*!dbgidc,y,pb-3*/.pb-3{padding-bottom:0.75rem}\r\n```\r\n\r\nSo it looks like the default twind behavior is including a tad more information, namely the class name, beyond just the hash. If I strip out all of the resume data the css lengths are almost identical.\r\n",
                    "Hey folks, any news on this one? I'd really love using tailwind 3 features and classes. Thanks!",
                    "I think the big question here is what the maintainers want to do. I'm unsure if this is even desired. Maybe the future of this plug-in is for it to be external to fresh.",
                    "Given the fact that `twind` is officially integrated into `Fresh` and even part of the project setup, I would be surprised if the maintainers wanted to keep this plugin separate. For the last month or two it seems like the core authors/maintainers are taking a quick break from `Fresh` after all the hard work they have been doing for `1.0` and `1.1`. I hope that the activity will resume in early winter/spring and this issue will be solved.",
                    "Not sure what is missing here. @trescenzi would you want to just run `deno fmt` and update the branch to fix breaking ci? \r\n\r\nI'm really hoping to see this merged soon. :)",
                    "Any updates here? Happy to do whatever else is necessary to get this over the line.",
                    "looks like it is broken with `https://esm.sh/@twind/core@1.0.3`.\r\nchanging import url to `https://esm.sh/v106/@twind/core@1.1.3` works for me.",
                    "In this implementation of hydrate, there is some overlap between the server and client side styles.\r\n\r\nI tried [pr-946-twindv1-test](https://github.com/denoland/fresh/tree/pr-946-twindv1-test/tests/fixture_twind) with some changes to [Islands.tsx](https://github.com/denoland/fresh/blob/pr-946-twindv1-test/tests/fixture_twind/islands/Island.tsx).\r\n`class={\"\" + (count > 0 ? \"text-red-500\" : \"\")}`\r\nto\r\n`class={\"\" + (count > 0 ? \"text-red-500\" : \"text-lime-500\")}`\r\n\r\n<img width=\"973\" alt=\"islands001\" src=\"https://user-images.githubusercontent.com/12783604/216407071-6d821e64-520b-4bc5-ae9d-b8d16d65ed8b.png\">\r\nThis did not occur with the twindv0.16 plugin.\r\n\r\nIs this a problem?\r\n\r\nIt bothers me...\r\nso [I solved this by filtering client-side cssrules by server-side cssrules.\r\n](https://github.com/y3km21/fresh-twindv1-plugin/blob/v1.1.1/twind/main.ts)\r\n",
                    "@y3km21 There is a hydration function  [`resume`](https://github.com/tw-in-js/twind/blob/d1fe2ce028b904c3f871264db914ac778c059745/packages/core/src/sheets.ts#L206) in `twind`.  Idk why it was left an easter egg, but it works for me. It's a shame this method doesn't have an export, so [my solution](https://github.com/nesterow/tailored/blob/3d2f6d58aa1d19e7d3442bd135bf3ccfa9b18b2f/system/plugins/twind/hydrate.ts) with copy-paste for now. \r\n```typescript\r\n  const el = document.getElementById(STYLE_ELEMENT_ID) as HTMLStyleElement;\r\n  const sheet = cssom(el);\r\n  sheet.resume = resume.bind(sheet);\r\n  setup(options, sheet);\r\n```\r\n",
                    "@nesterow  ohhhhh, I missed the [resume](https://github.com/tw-in-js/twind/blob/main/packages/core/src/sheets.ts#L206). I tried it right away... and it worked! This one is better. Thanks!\r\n\r\n\r\n\r\n",
                    "> This is adding a new plugin not updating the old one as that would be a breaking change and I assume that isn't desired here.\r\n\r\n@trescenzi I think like let it be a breaking change.",
                    "@ry Don't you think this should be named just `twind`, instead of `twindv1`?",
                    "Let's update the `twind.ts` in next major update. There is still work to be done on this, such as init scripts, and I think it is a little early to replace them completely.",
                    "Thanks @ry for approving and merging this. Been swamped with other stuff so this had fallen to the back burner.",
                    "Is it possible to try out the new plugin before the next major update? Or is using the third party plugin the way to go until then?",
                    "What is the step to get tailwindcssv3 support in Fresh now? Is simply changing these lines in the `import_map.json`:\r\n```\r\n    \"$fresh/\": \"https://deno.land/x/fresh@1.1.3/\",\r\n    \"twind\": \"https://esm.sh/twind@0.16.17\",\r\n    \"twind/\": \"https://esm.sh/twind@0.16.17/\",\r\n```\r\nto this\r\n```\r\n    \"$fresh/\": \"https://deno.land/x/fresh@1.1.4/\",\r\n    \"twind\": \"https://esm.sh/twind@1.0.7\",\r\n    \"twind/\": \"https://esm.sh/twind@1.0.7/\",\r\n```\r\nenough?\r\n\r\nSorry, I do not mean to pollute but it could be helpful for others in my eyes and I haven't found anything yet. I only think it is part of the Fresh1.1.4 release, right?",
                    "Yes, this is only part of the fresh 1.1.4. When you do an init, the old twind plugin is still used. I feel that simply replacing the version is not enough, and that it might be a breaking change. I think the best time to update this area is at the time of a major version upgrade.\r\n\r\nI think the most helpful code so far is in fixtures: \r\n\r\nhttps://github.com/denoland/fresh/tree/main/tests/fixture_twind_hydrate\r\n\r\nTo use twind 1.x, you have to: \r\n\r\n- change plugin path to twindv1.ts : https://github.com/denoland/fresh/blob/main/tests/fixture_twind_hydrate/options.ts#L2\r\n- rewrite twind.config.ts : https://github.com/denoland/fresh/blob/main/tests/fixture_twind_hydrate/twind.config.ts#L1\r\n  - use defineConfig\r\n  - use presetTailwind\r\n\r\n",
                    "Thank you very much! I think I got it with your help. And now I have to adapt to the new ways the plugin works now. x.x\r\n[Here ](https://twind.style/migration#breaking-changes) is some help for migrating from 0.16.",
                    "@toastoaster do you have a repo or something?\r\n\r\n> To use twind 1.x, you have to\r\n\r\n\r\n@hashrock so to fork fresh? uh.\r\n\r\nI'm waiting that for months, plus catch up with the latest npm support from deno 1.30+",
                    "> Yes, this is only part of the fresh 1.1.4. When you do an init, the old twind plugin is still used. I feel that simply replacing the version is not enough, and that it might be a breaking change. I think the best time to update this area is at the time of a major version upgrade.\r\n> \r\n> I think the most helpful code so far is in fixtures:\r\n> \r\n> https://github.com/denoland/fresh/tree/main/tests/fixture_twind_hydrate\r\n> \r\n> To use twind 1.x, you have to:\r\n> \r\n> * change plugin path to twindv1.ts : https://github.com/denoland/fresh/blob/main/tests/fixture_twind_hydrate/options.ts#L2\r\n> * rewrite twind.config.ts : https://github.com/denoland/fresh/blob/main/tests/fixture_twind_hydrate/twind.config.ts#L1\r\n>   \r\n>   * use defineConfig\r\n>   * use presetTailwind\r\n\r\nThis is my workaround to make it work:\r\n\r\n#### main.ts\r\n\r\n```ts\r\n/// <reference no-default-lib=\"true\" />\r\n/// <reference lib=\"dom\" />\r\n/// <reference lib=\"dom.iterable\" />\r\n/// <reference lib=\"dom.asynciterable\" />\r\n/// <reference lib=\"deno.ns\" />\r\n\r\nimport { start } from \"$fresh/server.ts\";\r\nimport manifest from \"./fresh.gen.ts\";\r\n\r\nimport twindPlugin from \"$fresh/plugins/twindv1.ts\";\r\nimport twindConfig from \"./twind.config.ts\";\r\n\r\nawait start(manifest, {\r\n  // deno-lint-ignore no-explicit-any\r\n  plugins: [twindPlugin(twindConfig as any)],\r\n  port: 35001,\r\n});\r\n\r\n```\r\n\r\n#### twind.config.ts\r\n\r\n```ts\r\nimport { defineConfig } from \"https://esm.sh/@twind/core@1.1.3\";\r\nimport presetTailwind from \"https://esm.sh/@twind/preset-tailwind@1.1.4\";\r\n\r\nexport default {\r\n  ...defineConfig({\r\n    presets: [presetTailwind()],\r\n  }),\r\n  selfURL: import.meta.url,\r\n};\r\n\r\n```",
                    "@sant123 seems to not work for me... Fresh new template, exact same code, exact same versions, refreshed my cache too. Nope.\r\n\r\nI don't get why there's no update on the template if everything works fine and there's official way.",
                    "Ah okay. Just switched to use the official twindv1 plugin in the `main.ts`, and the `@twind/core@1.1.3` on the `twind.config.ts`.\r\n\r\nhttps://github.com/tunnckoCore/deno-fresh-tailwindV3-template\r\n\r\nI also like import maps to be inside the `deno.json` so that's the two changes from the bare template."
                ]
            },
            {
                "pr_number": 1047,
                "title": "fix: revert \"chore: bump dependencies and license year (#986)\"",
                "body": "This PR temporarily reverts commit ed669865003cbcd9b47dd2e4975c0e7b2a3151a9.\r\n\r\n#986 caused the error like the below when wasm version of esbuild is used:\r\n\r\n```\r\n\u2718 [ERROR] Cannot read file \"www/twind.config.ts\": not implemented on js\r\n\r\n    data:application/javascript,import hydrate from \"file:///src/plugins/twind/main.ts\";import options from \"file:///src/www/twind.config.ts\";export default function(state) { hydrate(options, state); }:1:76:\r\n      1 \u2502 ...rt options from \"file:///src/www/twind.config.ts\";export default...\r\n        \u2575                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\ncc @lucacasonato ",
                "html_url": "https://github.com/denoland/fresh/pull/1047",
                "comments": [
                    "Unfortunate but probably a good call until we figure out what's going on. I think for testing of wasm we might be able to temporarily remove Deno.run (i.e. `Deno.run = undefined`) instead of adding a config option. This better emulates deploy anyways."
                ]
            },
            {
                "pr_number": 1034,
                "title": "fix(context): handle HEAD requests",
                "body": "close #1033 ",
                "html_url": "https://github.com/denoland/fresh/pull/1034",
                "comments": []
            },
            {
                "pr_number": 1046,
                "title": "showcase: add link maker",
                "body": "This is a [link maker](https://link-maker.deno.dev/), you can input your link and get a card-style preview.\r\n\r\n![link-maker1x](https://user-images.githubusercontent.com/61005888/221104303-c360ae78-65f2-4924-9093-b8da09985fa3.jpg)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1046",
                "comments": []
            },
            {
                "pr_number": 967,
                "title": "Update deployment.md",
                "body": "Remove duplicate words",
                "html_url": "https://github.com/denoland/fresh/pull/967",
                "comments": []
            },
            {
                "pr_number": 1064,
                "title": "chore: remove lockfile",
                "body": "looks like this CI (https://github.com/denoland/fresh/pull/1055) failed because of `www/deno.lock`\r\n\r\nhttps://github.com/denoland/fresh/actions/runs/4318324547/jobs/7536477332\r\n\r\nseems the lockfile was re-introduced by this PR:\r\n\r\nhttps://github.com/denoland/fresh/pull/989",
                "html_url": "https://github.com/denoland/fresh/pull/1064",
                "comments": []
            },
            {
                "pr_number": 494,
                "title": "docs: create docs for _app.tsx",
                "body": "I've decided to write some docs on my own (regarding issue #491) . Keep in mind that I have no technical writing experience and treat it more like a sketch. All suggestions are welcome - most importantly, check if everything I wrote is true.\r\n\r\nAdditionally, I slipped in 1 typo fix",
                "html_url": "https://github.com/denoland/fresh/pull/494",
                "comments": [
                    "You might want the `app-wrapper.md` file to focus on layout (and maybe renamed to `layout.md`) and have `_app.tsx ` as one option. Another option would be to use a Layout component to wrap the app. Both of them could use the Head component to add an html head element  with its child elements to the app.",
                    "> You might want the app-wrapper.md file to focus on layout (and maybe renamed to layout.md) and have _app.tsx as one option. Another option would be to use a Layout component to wrap the app. Both of them could use the Head component to add an html head element with its child elements to the app.\r\n\r\nI'm not sure if splitting this feature into 2 pages is such a good idea. If it's possible, please propose your changes by code suggestions. But all of this doesn't really matter, because it seems this PR is not getting merged. I hope the replacement for `_app.tsx` will get implemented soon, as this feature seems to really needed by users.\r\n",
                    "Thank you I almost given up",
                    "Any update on this getting merged? I think it's pretty clear.",
                    "Not sure if this makes sense to merge given that `_app.tsx` will be removed in favor of layouts (at some distant point in the future). I'd still support it being merged since this is kind of the only way to do it at the moment.",
                    "@lino-levan \r\nI think it would be good to add this until the layout feature comes along. I guess the layout feature is still a ways off.",
                    "Agreed.",
                    "@lambtron Code example updated to the latest. I have also verified that the description is correct, could you double check?\r\n\r\nThe following are memo during confirming what has been written: \r\n\r\n> There is also a possibility to modify the document template by using special tags `html`, `Head` or `body`. This can be done in any other Preact component\r\n\r\nI tried this. Indeed, I was able to do this from components as written.\r\n\r\n> Currently, there is no way of overriding default tags/attributes from provided template.\r\n\r\nThis is also true. For example, setting `<body class=\"foo\">` in `_app.tsx` and `<body class=\"bar\" data-baz=\"1\">` in `index.tsx` will render `<body class=\"foo\" data-baz=\"1\">`. You can add attribute but not overwrite.\r\n\r\n(There is a `<html lang=\"en\">` set before `_app.tsx'`, so `_app.tsx` also cannot override by `lang=\"ja\"`)\r\n",
                    "LGTM!"
                ]
            },
            {
                "pr_number": 1067,
                "title": "1.1.4",
                "body": "Release PR for 1.1.4\r\n\r\nref: 1.1.3 https://github.com/denoland/fresh/pull/1011\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/1067",
                "comments": []
            }
        ],
        "1.1.3": [
            {
                "pr_number": 827,
                "title": "Add Fresh Hacker News to Showcase",
                "body": "Hi! I created a yet another Hacker News clone with Fresh. Check it out [here](https://fresh-hacker-news.deno.dev/) \ud83d\ude09",
                "html_url": "https://github.com/denoland/fresh/pull/827",
                "comments": []
            },
            {
                "pr_number": 850,
                "title": "fix: vendor esbuild wasm",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/850",
                "comments": []
            },
            {
                "pr_number": 280,
                "title": "test: remove tmp dir",
                "body": "I was looking at the test code and noticed one thing, so I am sending you a PR.\r\n\r\nThe `Deno.makeTempDir()` creates a temporary directory for testing, but maybe we need to handle deleting this directory.\r\nMy understanding is that the directory is increasing each time the test is run on the PC.\r\n(Also, the Deno documentation says `It is the caller's responsibility to remove the directory when no longer needed.`)\r\n\r\nSo I added a process to remove temporary directories.\r\n\r\nIf I have missed something and there is no need to remove it in the first place, you can close this PR\ud83d\udc4d\r\n\r\nThank you.",
                "html_url": "https://github.com/denoland/fresh/pull/280",
                "comments": [
                    "@lucacasonato Thanks for your comment!\r\nI fixed the code.",
                    "This PR looks good, but seems to cause problems with CI on Windows.\r\n\r\n```\r\nfresh-init => ./tests/cli_test.ts:37:6\r\nerror: Error: The process cannot access the file because it is being used by another process. (os error 32), remove 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\e4f7d61c'\r\nerror: Test failed\r\n    await Deno.remove(tmpDirName, { recursive: true });\r\n    ^\r\n    at async Object.remove (deno:runtime/js/30_fs.js:161:5)\r\n    at async fn (file:///D:/a/fresh/fresh/tests/cli_test.ts:171:5)\r\n\r\nfresh-init --twind --vscode => ./tests/cli_test.ts:177:6\r\nerror: Error: The process cannot access the file because it is being used by another process. (os error 32), remove 'C:\\Users\\RUNNER~1\\AppData\\Local\\Temp\\25fc6cf1'\r\n    await Deno.remove(tmpDirName, { recursive: true });\r\n    ^\r\n    at async Object.remove (deno:runtime/js/30_fs.js:161:5)\r\n    at async fn (file:///D:/a/fresh/fresh/tests/cli_test.ts:326:5)\r\n```",
                    "@hashrock Thanks for your comment!\r\nI have tried on a Windows machine and was able to reproduce this issue.\r\nI will try to investigate the cause.",
                    "@lucacasonato @hashrock \r\nI have fix the issue that was occurring with Windows on CI.\r\n\r\nThe cause of the error was that when `Deno.remove` was performed, the `serverProcess` that had been started immediately before was still holding onto the process related to the directory to be removed.\r\nAnd on Windows, it seemed to take a little time for this process to be released.\r\nTherefore, i modified it so that `Deno.remove` is executed after `delay` is executed and the process is completely released.",
                    "Thank you! Looks good, but I'll look into a way to do it without delay just in case. If not, I'll merge it in."
                ]
            },
            {
                "pr_number": 852,
                "title": "Fix wasm relative url",
                "body": "Islands seem not working on the latest LP. Error logs:\r\n\r\n![image](https://user-images.githubusercontent.com/3132889/196659743-acecf9fc-4d51-4bfa-82a8-a00be4427716.png)\r\n\r\n![image](https://user-images.githubusercontent.com/3132889/196659448-40b36e16-5476-4163-8f9d-87fc5a61cc0e.png)\r\n\r\nI fixed wasm url to absolute path.\r\n\r\nco-authored-by: @kt3k \r\n\r\nRelated: \r\n- https://github.com/denoland/fresh/pull/850\r\n- https://github.com/denoland/fresh/issues/851",
                "html_url": "https://github.com/denoland/fresh/pull/852",
                "comments": []
            },
            {
                "pr_number": 854,
                "title": "www: add kita.ge to showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/854",
                "comments": []
            },
            {
                "pr_number": 823,
                "title": "Added LDkit to showcase",
                "body": "Hi, I would like to add the LDkit project to showcase.\r\n\r\nWeb: https://ldkit.io\r\nRepo: https://github.com/karelklima/ldkit\r\n\r\nLDkit is a Deno / Node / browser library for querying Linked Data / RDF. Its website and docs was built using Fresh.\r\n\r\nThanks!",
                "html_url": "https://github.com/denoland/fresh/pull/823",
                "comments": [
                    "I like this website / docs!"
                ]
            },
            {
                "pr_number": 820,
                "title": "Added D3no Data to Showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/820",
                "comments": []
            },
            {
                "pr_number": 868,
                "title": "fix: always use wasm content type for esbuild",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/868",
                "comments": []
            },
            {
                "pr_number": 806,
                "title": "docs: fix module reference for RouteConfig",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/806",
                "comments": [
                    "ref: https://github.com/denoland/fresh/issues/587"
                ]
            },
            {
                "pr_number": 862,
                "title": "Fixing README image",
                "body": "#861 Fixed this small change :)",
                "html_url": "https://github.com/denoland/fresh/pull/862",
                "comments": [
                    "There is still a related Issue, but I'll merge this to separate the problem.\r\nIf the gfm side can handle this, it should work even if we revert this.",
                    "@hashrock can u brief what the related issue u are talking about and i will explore the deno-gfm for more deep understanding what exactly it is and Thank You"
                ]
            },
            {
                "pr_number": 857,
                "title": "Add Wricord to Showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/857",
                "comments": []
            },
            {
                "pr_number": 832,
                "title": "Added Joe Salinas Site to Showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/832",
                "comments": []
            },
            {
                "pr_number": 863,
                "title": "Adding CGPA-AU-2021 To Fresh ShowCase",
                "body": "Add my FreshJS App to Showcase",
                "html_url": "https://github.com/denoland/fresh/pull/863",
                "comments": []
            },
            {
                "pr_number": 816,
                "title": "Added paquet to showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/816",
                "comments": []
            },
            {
                "pr_number": 780,
                "title": "Fresh ToDo List Web App Showcase",
                "body": "[https://fresh-todo-list.deno.dev/](https://fresh-todo-list.deno.dev/)",
                "html_url": "https://github.com/denoland/fresh/pull/780",
                "comments": [
                    "@MrSaeedNasiri I made a PR at the project repo! Just some minor fixes/improvements for you to consider \ud83d\ude01"
                ]
            },
            {
                "pr_number": 620,
                "title": "Add Fondest landing page to showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/620",
                "comments": [
                    "I think you need to add a screenshot if you want to be in the showcase. There is a task to help you: `deno task screenshot <url> <id>`"
                ]
            },
            {
                "pr_number": 815,
                "title": "www: add developer portfolio to showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/815",
                "comments": []
            },
            {
                "pr_number": 633,
                "title": "Added new website based on Deno Fresh",
                "body": "The website is not open source. That's why I've not added the \"github\" link.",
                "html_url": "https://github.com/denoland/fresh/pull/633",
                "comments": [
                    "Did you remember to commit the screenshot?",
                    "I found a neat thing that might help: \r\n\r\n`deno run -A www/utils/screenshot.ts https://www.localseo.studio localseostudio`\r\n\r\n(inside the cloned repo)\r\n\r\nThen I used GIMP to export the png to jpg, then half sized it and exported again.\r\n\r\nThen `cd www` and `deno task start` to verify \ud83d\udc4d \r\n",
                    "@samarkandiy\r\nnow screenshot scripts updated(you don't need GIMP), try `deno task screenshot [url] [id]`"
                ]
            },
            {
                "pr_number": 875,
                "title": "Maintain showcase.json",
                "body": "- cleanup showcase.json\r\n- prevent conflicting with showcase.json changes",
                "html_url": "https://github.com/denoland/fresh/pull/875",
                "comments": []
            },
            {
                "pr_number": 880,
                "title": "Adding kadode portal to Fresh ShowCase",
                "body": "May I add my hobby development site to Showcase?\r\n\r\nI love Fresh\ud83c\udf4b",
                "html_url": "https://github.com/denoland/fresh/pull/880",
                "comments": []
            },
            {
                "pr_number": 881,
                "title": "add how to screenshot on readme",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/881",
                "comments": [
                    "LGTM"
                ]
            },
            {
                "pr_number": 882,
                "title": "Adds Craig's Deno Diary to Fresh Showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/882",
                "comments": []
            },
            {
                "pr_number": 879,
                "title": "fix: typo in default error page \"occured\" -> \"occurred\"",
                "body": "Hi, I've found a typo in the error page. The word \"occured\" does not exist. It is spelled with two \"r\", \"occurred\".\r\n\r\nSame as #533 \r\n\r\nI fixed the error page and the corresponding test.\r\n\r\nSources:\r\n - [\"occured\" in Merriam Webster](https://www.merriam-webster.com/dictionary/occured)\r\n - [Is it occurred or occured? on writer.com](https://writer.com/blog/occurred-occured/)\r\n - [Occurred, Occured, or Ocurred\u2014Which Spelling Is Right? on grammarly.com](https://www.grammarly.com/blog/occurred-occured-ocurred/)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/879",
                "comments": []
            },
            {
                "pr_number": 886,
                "title": "add melon to fresh showcase",
                "body": "Melon is a simple link shortener, without using databases(technically it still does, it uses a JSON file to store data) and analytics. Currently, it is deployed on deno.dev",
                "html_url": "https://github.com/denoland/fresh/pull/886",
                "comments": []
            },
            {
                "pr_number": 872,
                "title": "add Fresh Components",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/872",
                "comments": [
                    "I noticed that Button I made was left disabled (it was using IS_BROWSER on a component that was not called from island). I will fix this as well so converted to draft for now",
                    "Looks good!\r\n\r\nWould it be difficult to syntax highlight the code?\r\n\r\nWhat about adding a link to the home page? "
                ]
            },
            {
                "pr_number": 888,
                "title": "Fix component gallery layout",
                "body": "# Copy button layout broken on FF / Safari\r\n\r\n<img width=\"433\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200379283-720686ee-4200-4262-8773-4bc8ed3da5d5.png\">\r\n\r\nfixed: \r\n\r\n<img width=\"385\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200379350-c20dbb28-8136-4e59-aa06-a3f0ffd12cd5.png\">\r\n\r\n# Mobile layout\r\n\r\n<img width=\"430\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200379879-5a05866a-a9f4-4b87-b2a9-35543d3bbc7b.png\">\r\n\r\n<img width=\"416\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200379921-51b47470-910e-446b-8864-678158b9ab87.png\">\r\n\r\n<img width=\"421\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200379965-a293df50-bfec-4a9c-b7c3-fa7a5ae7ce0a.png\">\r\n\r\nfixed: \r\n\r\n<img width=\"419\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200380042-29f74d79-4609-4c28-96af-7a0cbb7825b8.png\">\r\n\r\n<img width=\"423\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200380089-3e322a1a-bafd-4013-95a4-0bb591627cc8.png\">\r\n\r\n<img width=\"425\" alt=\"image\" src=\"https://user-images.githubusercontent.com/3132889/200380150-b07fca8b-4dc6-47a0-91a4-5d60719dd629.png\">\r\n\r\nStill header is not perfect, hopefully humberger menu with checkbox hack, but I think it's better for now.\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/888",
                "comments": []
            },
            {
                "pr_number": 397,
                "title": "fix: typo",
                "body": "Corrected document path.",
                "html_url": "https://github.com/denoland/fresh/pull/397",
                "comments": [
                    "> You need to rename the markdown file `docs/concepts/architechture.md` to `docs/concepts/architecture.md`\r\n> \r\n> As I did here\r\n> \r\n> [3d83b894803dc145d07e85d8c1944cd7c5f5738d](https://github.com/un-versed/fresh/commit/3d83b894803dc145d07e85d8c1944cd7c5f5738d)\r\n> \r\n> See #454\r\n\r\nBtw, you can just paste full commit hash like this`3d83b894803dc145d07e85d8c1944cd7c5f5738d` and GitHub will automatically turn it into a link: 3d83b894803dc145d07e85d8c1944cd7c5f5738d",
                    "> > You need to rename the markdown file `docs/concepts/architechture.md` to `docs/concepts/architecture.md`\r\n> > As I did here\r\n> > [3d83b894803dc145d07e85d8c1944cd7c5f5738d](https://github.com/un-versed/fresh/commit/3d83b894803dc145d07e85d8c1944cd7c5f5738d)\r\n> > See #454\r\n> \r\n> Btw, you can just paste full commit hash like this`3d83b894803dc145d07e85d8c1944cd7c5f5738d` and GitHub will automatically turn it into a link: [3d83b89](https://github.com/denoland/fresh/commit/3d83b894803dc145d07e85d8c1944cd7c5f5738d)\r\n\r\nOh, thanks haha i didnt know (:",
                    "> You need to rename the markdown file docs/concepts/architechture.md to docs/concepts/architecture.md\r\n> \r\n> As I did here\r\n> \r\n> [3d83b894803dc145d07e85d8c1944cd7c5f5738d](https://github.com/un-versed/fresh/commit/3d83b894803dc145d07e85d8c1944cd7c5f5738d)\r\n> \r\n> See https://github.com/denoland/fresh/issues/454\r\n\r\n\r\nThank you. I fixed this. 7dcb78dcbee8e19c3743396f532cddfe9c0fe43d",
                    "Need a redirect from the old to the new. https://github.com/denoland/fresh/pull/295#issuecomment-1168992730"
                ]
            },
            {
                "pr_number": 892,
                "title": "ci: split ci of main and www",
                "body": "Separated yml to speed up CI for www",
                "html_url": "https://github.com/denoland/fresh/pull/892",
                "comments": []
            },
            {
                "pr_number": 896,
                "title": "fix ci trigger paths",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/896",
                "comments": []
            },
            {
                "pr_number": 897,
                "title": "Update rutt",
                "body": "- Closes #577.\r\n- Closes #625.",
                "html_url": "https://github.com/denoland/fresh/pull/897",
                "comments": []
            },
            {
                "pr_number": 839,
                "title": "docs: add page showcasing fresh charts",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/839",
                "comments": []
            },
            {
                "pr_number": 911,
                "title": "showcase: webhook-manager",
                "body": "Hi all, webhook-manager is a simple webhook callback app. You can use created webhook URL for listening to incoming requests. Currently, it is deployed on deno.dev.",
                "html_url": "https://github.com/denoland/fresh/pull/911",
                "comments": []
            },
            {
                "pr_number": 913,
                "title": "Saved temp png in memory instead of writing to fs - screenshot.ts",
                "body": "Edit: I actually done some dumb things, I modified something meaning nothing but i forget to remove those and i pushed with this PR but the following statement is done clear. I will explain at bottom what i made mistake\r\n\r\nTaking Screenshots, instead of writing in and reading it again through fs, it can be saved in memory. This is retry of PR already i made PR which is mistaked #912 and i closed that.\r\n\r\n\r\nI decided to add some icon to look great the showcase page. since i was just thinkin and messing with the source slightly. i dint realize i was in main branch which i make PR from on. After some days, i forget this and done this screenshot PR but that icon thing is unfinished and i pushed with that. so that was a terrible mistake so sorry for that. Hope it never happens again. And again sorry for this messy PR :( \r\n",
                "html_url": "https://github.com/denoland/fresh/pull/913",
                "comments": [
                    "Nice! please apply `deno fmt` :)",
                    "> Nice! please apply `deno fmt` :)\n\nDone\ud83d\ude00"
                ]
            },
            {
                "pr_number": 926,
                "title": "fix(www): a11y issue (low-contrast)",
                "body": "This PR fixes accessibility issue of fresh web site.\r\n\r\nLighthouse reports 'next-gen' text of the landing page doesn't have enough color contrast of background and foreground.\r\n\r\n<img width=\"722\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2022-11-30 21 22 03\" src=\"https://user-images.githubusercontent.com/613956/204796318-cdb71c60-17d0-4eb9-a800-9d8d6b8769eb.png\">\r\n\r\nThis PR changes the color of it to darker green and improves the lighthouse a11y score. (The score is now 100 on my machine with this change.)\r\n\r\nBEFORE\r\n<img width=\"431\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2022-11-30 21 23 28\" src=\"https://user-images.githubusercontent.com/613956/204796588-2f4241b8-3c47-4e5b-a4e0-a233a08ead6a.png\">\r\n\r\nAFTER\r\n<img width=\"415\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2022-11-30 21 23 38\" src=\"https://user-images.githubusercontent.com/613956/204796612-12c6d084-84ce-4af5-8b45-b1af2cc7e08c.png\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/926",
                "comments": []
            },
            {
                "pr_number": 895,
                "title": "Add a global nav",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/895",
                "comments": [
                    "`components/Nav.ts` doesn't seem used from anywhere. Maybe you forgot to rename DocsHeader to Nav?",
                    "NavigationBar component is imported from `routes/components.tsx`, `routes/index.tsx`, and `routes/showcase.tsx`, but they are not used anymore (no-unused-var lint rule is disabled in .tsx files iirc)",
                    "@kt3k Thanks for your review! Renamed the jsx file and apply design update - ptal"
                ]
            },
            {
                "pr_number": 821,
                "title": "add social links to navigation",
                "body": "resolves https://github.com/denoland/fresh/issues/818\r\n\r\n![Screen Recording 2022-10-05 at 10 45 13](https://user-images.githubusercontent.com/21334130/194008123-8e79a245-ab61-42d7-871f-bf03efd44ea5.gif)",
                "html_url": "https://github.com/denoland/fresh/pull/821",
                "comments": []
            },
            {
                "pr_number": 929,
                "title": "improve discord link in nav",
                "body": "Discord text is better than icon and link to invite\r\n\r\n<img width=\"896\" alt=\"Screen Shot 2022-12-01 at 9 18 22 PM\" src=\"https://user-images.githubusercontent.com/80/205220261-39900aac-d518-4020-9509-bedfe7eea06d.png\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/929",
                "comments": []
            },
            {
                "pr_number": 915,
                "title": "showcase: game-orb",
                "body": "Site that lists single Switch games from several game stores. It uses cheerio to scrape the games. Currently deployed on deno.dev",
                "html_url": "https://github.com/denoland/fresh/pull/915",
                "comments": [
                    "- Looks like json is broken, could you fix it?\r\n- Please add your screenshot\r\n  - https://github.com/denoland/fresh#adding-your-project-to-the-showcase\r\n- Please fix github url, no need to add `https://github.com/`"
                ]
            },
            {
                "pr_number": 932,
                "title": "showcase: Moe-counter",
                "body": "A port of https://github.com/journey-ad/Moe-counter using fresh.",
                "html_url": "https://github.com/denoland/fresh/pull/932",
                "comments": []
            },
            {
                "pr_number": 934,
                "title": "showcase: Deno jobs",
                "body": "A site that I am gradually developing because I love Deno and Fresh\r\nWorks on Deno deploy and Faunadb",
                "html_url": "https://github.com/denoland/fresh/pull/934",
                "comments": []
            },
            {
                "pr_number": 935,
                "title": "showcase: javaminidoodle.de",
                "body": "Hi,\r\n\r\nmy wife and I running a German blog about dog knowledge. I switched the blog from StencilJS to Deno a few weeks ago and hosted it on Deno Deploy. Maybe the site is suitable as a showcase.\r\n\r\nMany greetings\r\nChristian",
                "html_url": "https://github.com/denoland/fresh/pull/935",
                "comments": [
                    "Pretty design!",
                    "Thanks :-) "
                ]
            },
            {
                "pr_number": 938,
                "title": "showcase: Ppaste",
                "body": "Hey,\r\n\r\nA simple Pastebin website written in Deno Fresh and using Redis as a database.",
                "html_url": "https://github.com/denoland/fresh/pull/938",
                "comments": [
                    "It's super fun to look a fresh website with database integration. great work!"
                ]
            },
            {
                "pr_number": 947,
                "title": "Add Hero and Footer Components",
                "body": "![image](https://user-images.githubusercontent.com/3132889/207567705-2acac7dc-11af-4ff6-91fe-4e605c88097c.png)\r\n![image](https://user-images.githubusercontent.com/3132889/207567740-be8b01ac-13ab-48c2-bb5d-e218c375c8f2.png)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/947",
                "comments": []
            },
            {
                "pr_number": 949,
                "title": "www: add search button island",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/949",
                "comments": [
                    "I think the doc scraper still needs some tweaks - the data is not very good yet.",
                    "- I updated algolia data\r\n- To solve mobile / desktop duplicated search button issue, I made a fake search button(it fires click event for the real search button).\r\n\r\n![image](https://user-images.githubusercontent.com/3132889/209204627-c61799f7-3a78-4042-828f-093a2db9373d.png)\r\n"
                ]
            },
            {
                "pr_number": 942,
                "title": "added linksapp fresh demo",
                "body": "linksapp-fresh demo web app",
                "html_url": "https://github.com/denoland/fresh/pull/942",
                "comments": [
                    "Nice app! could you add screenshots?\r\n\r\nhttps://github.com/denoland/fresh#adding-your-project-to-the-showcase",
                    "I got this error while running screenshot command\r\n```deno task screenshot https://linksapp.deno.dev/ linksapp```\r\n\r\n```\r\nerror: Uncaught Error: Could not find browser revision 1022525. Run \"PUPPETEER_PRODUCT=chrome deno run -A --unstable https://deno.land/x/puppeteer@16.2.0/install.ts\" to download a supported browser binary.\r\n      if (missingText) throw new Error(missingText);\r\n                             ^\r\n    at ChromeLauncher.launch (https://deno.land/x/puppeteer@16.2.0/src/deno/Launcher.ts:99:30)\r\n```",
                    "hmm could you try the command in the error log?\r\n> PUPPETEER_PRODUCT=chrome deno run -A --unstable https://deno.land/x/puppeteer@16.2.0/install.ts",
                    "deno_puppetter cmd worked successfully but again i tried screenshot cmd i got new err\r\n```error: Uncaught Interrupted: operation canceled\r\n    const result = await reader.read(inspectArr);\r\n                   ^\r\n    at async read (deno:runtime/js/12_io.js:105:19)\r\n    at async readDelim (https://deno.land/std@0.93.0/io/bufio.ts:652:20)\r\n    at async readStringDelim (https://deno.land/std@0.93.0/io/bufio.ts:702:20)\r\n    at async readLines (https://deno.land/std@0.93.0/io/bufio.ts:711:18)\r\n    at async waitForWSEndpoint (https://deno.land/x/puppeteer@16.2.0/src/deno/BrowserRunner.ts:168:20)\r\n    at async BrowserRunner.setupConnection (https://deno.land/x/puppeteer@16.2.0/src/deno/BrowserRunner.ts:146:31)\r\n    at async ChromeLauncher.launch (https://deno.land/x/puppeteer@16.2.0/src/deno/Launcher.ts:114:26)\r\n```",
                    "> I got this error while running screenshot command `deno task screenshot https://linksapp.deno.dev/ linksapp`\r\n> \r\n> ```\r\n> error: Uncaught Error: Could not find browser revision 1022525. Run \"PUPPETEER_PRODUCT=chrome deno run -A --unstable https://deno.land/x/puppeteer@16.2.0/install.ts\" to download a supported browser binary.\r\n>       if (missingText) throw new Error(missingText);\r\n>                              ^\r\n>     at ChromeLauncher.launch (https://deno.land/x/puppeteer@16.2.0/src/deno/Launcher.ts:99:30)\r\n> ```\r\n\r\nI am getting the same error. How do I solve this problem so that I can share my portfolio?"
                ]
            },
            {
                "pr_number": 954,
                "title": "showcase: grape-chat",
                "body": "Hi,\r\n\r\nI made a sweet chat app as an example for my css-in-js library. It would be helpful for those who want to style the components with usual css syntax.\r\n\r\nThanks!\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/954",
                "comments": []
            },
            {
                "pr_number": 958,
                "title": "www: add ga4 middleware",
                "body": "TODO: \r\n- [x] set ga4 env",
                "html_url": "https://github.com/denoland/fresh/pull/958",
                "comments": [
                    "LGTM"
                ]
            },
            {
                "pr_number": 972,
                "title": "Fix docker image name",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/972",
                "comments": [
                    "Note to maintainers: Temporarily disabled `Deploy` check as this branch can't be deployed because of the branch name conflict.",
                    "Enabled `Deno / Fresh` status requirement again"
                ]
            },
            {
                "pr_number": 970,
                "title": "fix: The \"Made with Fresh\" Badge broke",
                "body": "Close #969\r\n\r\nI added a CORS header when I added the ga4 middleware, but this applied to the `static/` files as well, and it causes \"Made with Fresh\" badge broke.\r\n\r\nIt may be desirable to remove the CORS header from `static/` files only, but for the time being, I have revert the addition of headers including CORS.",
                "html_url": "https://github.com/denoland/fresh/pull/970",
                "comments": []
            },
            {
                "pr_number": 963,
                "title": "showcase: fresh-notion-blog",
                "body": "Notes in your Notion now become your blog, using the awesome framework Fresh from Deno.",
                "html_url": "https://github.com/denoland/fresh/pull/963",
                "comments": [
                    "Nice work for adding types on Notion's json!\r\n\r\nCould you apply `deno fmt`?"
                ]
            },
            {
                "pr_number": 987,
                "title": "showcase: Deno Paste",
                "body": "Hello there! \ud83d\udc4b \r\n\r\nI put together a little toy while learning Deno and Fresh. It's a simple text upload website that keep uploads around for a few hours before wiping the database. I thought others may find it helpful with their own projects, so I figured I'd see about sharing it.\r\n\r\nPlease let me know if there's anything you'd like for me to change or update. Thanks!",
                "html_url": "https://github.com/denoland/fresh/pull/987",
                "comments": []
            },
            {
                "pr_number": 993,
                "title": "Add M33t to showcase.",
                "body": "M33t is a free, peer-to-peer, group video call web app, built with WebRTC.",
                "html_url": "https://github.com/denoland/fresh/pull/993",
                "comments": []
            },
            {
                "pr_number": 1010,
                "title": "fix(test): retry flaky file remove on Windows",
                "body": "Tried to solve this test failure:\r\n\r\nhttps://github.com/denoland/fresh/actions/runs/4036762071/jobs/6994612294",
                "html_url": "https://github.com/denoland/fresh/pull/1010",
                "comments": []
            },
            {
                "pr_number": 1005,
                "title": " chore: disable lock",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1005",
                "comments": [
                    "Unfair workflow fail"
                ]
            },
            {
                "pr_number": 1006,
                "title": "add portfolio to showcase",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/1006",
                "comments": []
            },
            {
                "pr_number": 1011,
                "title": "1.1.3",
                "body": "Release PR for 1.1.3\r\n\r\nref: 1.1.2 https://github.com/denoland/fresh/pull/831\r\n\r\n@lucacasonato ",
                "html_url": "https://github.com/denoland/fresh/pull/1011",
                "comments": [
                    "hmmm. to many showcase addition \ud83d\ude1e ",
                    "FINALLY"
                ]
            }
        ],
        "1.1.2": [
            {
                "pr_number": 760,
                "title": "Adds Video Poker Academy to the showcase",
                "body": "Adds Video Poker Academy to the showcase. I put it in between Fresh-Strapi and ANDBOUNDS, my other 2 projects.\r\n\r\n[https://videopoker.academy](https://videopoker.academy)",
                "html_url": "https://github.com/denoland/fresh/pull/760",
                "comments": []
            },
            {
                "pr_number": 759,
                "title": "[showcase] add optimem",
                "body": "Hi \ud83d\udc4b\r\n\r\nI've been using Fresh + Deploy for this website and backend service for a learning app. Loving it so far! Hoping to join the showcase.\r\n\r\n### Test plan\r\n\r\nRan `deno task www` and visited localhost:8000/showcase, verified link/image worked.",
                "html_url": "https://github.com/denoland/fresh/pull/759",
                "comments": []
            },
            {
                "pr_number": 769,
                "title": "SHOWCASE: Added fresh blog to showcase",
                "body": "Hi, my name is Jaydan Urwin. I do [YouTube tutorials](https://www.youtube.com/c/LittleSticks), share templates, code examples, etc. This is a minimal blog template I created for Fresh and would like to add to the showcase. I hope I added what is needed for the showcase correctly but please let me know if not.\r\n\r\nThank you!",
                "html_url": "https://github.com/denoland/fresh/pull/769",
                "comments": []
            },
            {
                "pr_number": 771,
                "title": "Add a head component to init.ts",
                "body": "This PR adds a head component to generated fresh projects:\r\n\r\n```jsx\r\nimport { Head } from \"$fresh/runtime.ts\";\r\n\r\n...\r\n\r\n<Head>\r\n  <title>Fresh App</title>\r\n</Head>\r\n```",
                "html_url": "https://github.com/denoland/fresh/pull/771",
                "comments": []
            },
            {
                "pr_number": 802,
                "title": "www: add vertification for google search console",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/802",
                "comments": []
            },
            {
                "pr_number": 797,
                "title": "adding portfolio page to showcase",
                "body": "Sorry for the issues, now it should work fine. I will push another change to implement correct <picture> handling.",
                "html_url": "https://github.com/denoland/fresh/pull/797",
                "comments": [
                    "@vorcigernix \r\nHi, I fixed the image so that it looks the same in 1x and 2x. If it does not differ from your intent, I will merge them as is. Please check here:\r\n\r\nhttps://fresh-k9m8t6b4g4t0.deno.dev/showcase",
                    "Thank you"
                ]
            },
            {
                "pr_number": 792,
                "title": "New Project: Fresh Project Manager",
                "body": "Hey there! I've made another project for https://fresh.deno.dev/showcase! It's a project manager where you can add/delete/complete projects and tasks all saved in localStorage. Check it out [here](https://xyntechx-project-manager.deno.dev/) \ud83d\ude01",
                "html_url": "https://github.com/denoland/fresh/pull/792",
                "comments": [
                    "Oops. Not sure why the tests are failing \ud83d\ude05",
                    "oops, it's strange. I've seen errors like this before, but it should be fixed.\r\n\r\nhttps://github.com/denoland/fresh/issues/76\r\n\r\n@lucacasonato any idea?\r\n\r\n```\r\nerror: TS2304 [ERROR]: Cannot find name 'URLPattern'.\r\n  compiledPattern: URLPattern;\r\n                   ~~~~~~~~~~\r\n    at file:///home/runner/work/fresh/fresh/src/server/types.ts:213:20\r\n```"
                ]
            },
            {
                "pr_number": 804,
                "title": "www: added developer portfolio to showcase",
                "body": "Hi Peeps,\r\n\r\nI love `fresh` and built my current portfolio with it.\r\n\r\nThank you for your hard work.\r\n\r\nPull request was tested by forking repo and running `deno task www`. Images and links are functional.",
                "html_url": "https://github.com/denoland/fresh/pull/804",
                "comments": [
                    "sick portfolio!",
                    "> sick portfolio!\n\nCan only give the compliment back. Yours is admirably clean (:"
                ]
            },
            {
                "pr_number": 794,
                "title": "Add Balello to Showcase.",
                "body": "Hello!\r\n\r\nI'm using Fresh for my new product, [Balello](https://balello.com), a modern way to buy shipping labels online and send them to your friends. This is a real startup with revenue! I love using new technologies and Fresh is a home run for performance and SEO \ud83d\udcaf. \r\n\r\nI'm very excited to use Fresh as it grows!!",
                "html_url": "https://github.com/denoland/fresh/pull/794",
                "comments": [
                    "Great! Could you resize your screenshots to this size?\r\n(or use `deno task screenshot` to screenshot actual page)\r\n\r\n1x : 600 x 338\r\n2x : 1200 x 675",
                    "@hashrock I just pushed the updated images! Let me know if there is anything else that you'd like from my end."
                ]
            },
            {
                "pr_number": 830,
                "title": "fix: twind style generation in islands",
                "body": "Fixes #778",
                "html_url": "https://github.com/denoland/fresh/pull/830",
                "comments": []
            },
            {
                "pr_number": 831,
                "title": "1.1.2",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/831",
                "comments": []
            }
        ],
        "1.1.1": [
            {
                "pr_number": 722,
                "title": "fix: rm trailing / in preact-rts import map entry",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/722",
                "comments": []
            },
            {
                "pr_number": 723,
                "title": "docs: add plugins to TOC",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/723",
                "comments": []
            },
            {
                "pr_number": 724,
                "title": "www: add HelloBar to point to 1.1 release notes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/724",
                "comments": []
            },
            {
                "pr_number": 632,
                "title": "Add Saleor + Fresh example to showcase",
                "body": "Hello \ud83d\udc4b \r\n\r\nWords of admiration from Deno & Fresh enthusiasts over at https://github.com/saleor/saleor \ud83d\ude47.\r\n\r\nWe immediately fell in love with the idea of Deno, and we have been waiting for something like Fresh ever since. When we first saw the `deno-merch` repository, we knew we have to try it out with Saleor.\r\n\r\nThe result is:\r\n- [Repo](https://github.com/saleor/deno-merch)\r\n- [Demo](https://saleor-deno-merch.deno.dev/)\r\n\r\n(kudos to one of our developers @krzysztofwolski for building it \u2b50)\r\n\r\nWe had a tremendous time working on it, and we will definitely keep an open eye on the project.\r\n\r\nAll the best to you folks from Saleor!\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/632",
                "comments": []
            },
            {
                "pr_number": 732,
                "title": "resize screenshot and convert to jpeg",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/732",
                "comments": []
            },
            {
                "pr_number": 644,
                "title": "add Fresh Strapi to the showcase",
                "body": "Open source and ready to fork, Fresh Strapi is here.\r\nhttps://fresh-strapi.deno.dev\r\nhttps://github.com/Hyprtxt/fresh-strapi.deno.dev",
                "html_url": "https://github.com/denoland/fresh/pull/644",
                "comments": [
                    "I would like to use the CI code with latest puppeteer(It seems to be easier to succeed.).\r\nCould you merge main once? Or if you could turn on Allow edits by maintainers, that would be helpful."
                ]
            },
            {
                "pr_number": 731,
                "title": "add ANDBOUNDS Inc. to the showcase",
                "body": "Live eCommerce with Stripe, Redis and Strapi.\r\n\r\nhttps://andbounds.com\r\n\r\nI also have 2 support sites in fresh https://manager.andbounds.com and https://agent.andbounds.com, but without public facing content, I don't think I want to add them. Just wanted to let you guys know. \ud83d\ude04 ",
                "html_url": "https://github.com/denoland/fresh/pull/731",
                "comments": [
                    "Just a heads up this also has my fresh-strapi project because of a merge."
                ]
            },
            {
                "pr_number": 711,
                "title": "New Project: diKnow",
                "body": "For the image, we can use a screenshot of the diKnow homepage. I'm not sure where to place the image in this repo though!",
                "html_url": "https://github.com/denoland/fresh/pull/711",
                "comments": [
                    "Few nit-picks:\r\n- Search is not reacting to \"Enter\" key press - I need to grab a mouse and click on the \"search\" button;\r\n- Most of my search requests are fulfilled (I tried tirano, tiranosaur, tiranosaurio etc - \"diplo\" worked but that's the only successful one). Maybe that's a good idea to show few first/random dinos on first load;\r\n- What do you think partial matching-on-typing?",
                    "- Noted on the `Enter` keypress. I'll make the improvement!\r\n- I'm not sure what you mean by \"diplo is the only successful one\", but sure I'll work on the random list of dinos on mount.\r\n- Partial matching is actually much easier than complete matching, but I feel that complete matching is important to have so that when you type one letter (e.g. \"a\"), hundreds of dinos won't show up \ud83d\ude02",
                    "Updates are done!",
                    "@xyntechx \r\nLovely site!\r\n\r\nfor screenshots, try this (merge main before executing): \r\n> deno task screenshot https://xyntechx-diknow.deno.dev/ diKnow\r\n",
                    "Okay screenshots are included now!"
                ]
            },
            {
                "pr_number": 466,
                "title": "www: change line in README.md for how you start the project",
                "body": "In `/www/README.md` changed\r\n\r\n> Start the project:\r\n> \r\n> `deno run -A --watch main.ts`\r\n\r\nto\r\n\r\n> Start the project:\r\n> \r\n> `deno task start`\r\n\r\nThis is the same PR as  #452. I accidentally closed the previous one by force pushing `main` branch.",
                "html_url": "https://github.com/denoland/fresh/pull/466",
                "comments": []
            },
            {
                "pr_number": 742,
                "title": "add im@sparql Data Dashboard to showcase",
                "body": "I have created a SPARQL Endpoint data dashboard called [im@sparql](https://sparql.crssnky.xyz/imas/) using Fresh.\r\nSo I added it to the showcase.\r\n\r\nIf there is anything I am doing wrong, I would appreciate it if you could let me know.",
                "html_url": "https://github.com/denoland/fresh/pull/742",
                "comments": []
            },
            {
                "pr_number": 754,
                "title": "Add YCRM to Fresh Showcase",
                "body": "### Description\r\nHi \ud83d\udc4b\r\n\r\nI used Fresh for my most recent side-project, [YCRM](https://ycrm.xyz/?utm_source=github), a data hub for YC company CRM-compatible contact information. You can see the Fresh icon on the website footer \ud83d\ude04\r\n\r\nI really enjoyed using Deno + Fresh! The render performance is fantastic and much prefer Deno for writing DevOps scripts",
                "html_url": "https://github.com/denoland/fresh/pull/754",
                "comments": []
            },
            {
                "pr_number": 752,
                "title": "docs: correct required Deno version",
                "body": "This pull request applies the changed `MIN_DENO_VERSION` to the document.\r\n\r\n---\r\n\r\nWhen I had tried to install `fresh`, I met `error: Deno version 1.25.0 or higher is required. Please update Deno.` error message.\r\n\r\nSince `1.1.0`, Deno became to require (see https://github.com/denoland/fresh/pull/610). And https://github.com/denoland/fresh/pull/718 updates some docs but something was missed.",
                "html_url": "https://github.com/denoland/fresh/pull/752",
                "comments": []
            },
            {
                "pr_number": 758,
                "title": "docs: Fixed grammar/typo in deployment.md",
                "body": "Changed its' to its.",
                "html_url": "https://github.com/denoland/fresh/pull/758",
                "comments": []
            },
            {
                "pr_number": 756,
                "title": "fix: ship source maps for client code in dev mode",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/756",
                "comments": []
            },
            {
                "pr_number": 762,
                "title": "chore: update preact + preact-render-to-string",
                "body": "preact: 10.11.0\npreact-render-to-string: 5.2.4\n",
                "html_url": "https://github.com/denoland/fresh/pull/762",
                "comments": []
            },
            {
                "pr_number": 763,
                "title": "docs: add -r to command in concepts>updating",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/763",
                "comments": []
            },
            {
                "pr_number": 739,
                "title": "fix: sanitize `<script>` in __FRSH_STATE state",
                "body": "Hello, thanks for the great product! \r\n\r\nThis PR fixes a problem where text after the script tag is rendered as is if __FRSH_ISLAND_PROPS contains a script tag.\r\nThis is happening because the </script> tag is not escaped in JSON.stringify.\r\n\r\n1. Routes component's props set  string `</script>` to island component..\r\n2. When the island component is rendered, the value of the island props is embedded in __FRSH_ISLAND_PROPS.\r\n3. `</script>` string is not escaped and is recognized by html as the end of __FRSH_ISLAND_PROPS`</script>`\r\n4. The string after the </script> tag is displayed as is. (ex)`<script/><h1>test</h1>`\r\n\r\n> <>\\u2028\\u2029\r\n\r\nFix to output __FRSH_ISLAND_PROPS through a function that escapes this string.\r\n\r\n\r\nWe can check the reproduced state from the following page \r\n[demo](https://wilf312-island-props-demo.deno.dev/) \r\n[demo repository](https://github.com/wilf312/island-props-demo) \r\n\r\n<img width=\"834\" alt=\"\u30b9\u30af\u30ea\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8 2022-09-09 19 28 43\" src=\"https://user-images.githubusercontent.com/2202197/189330232-fc0619d2-4845-4bf9-85bd-a4c19891bc73.png\">\r\n\r\n\r\nI hope this is not written in a rude way because I am not good at English.",
                "html_url": "https://github.com/denoland/fresh/pull/739",
                "comments": [
                    "@lucacasonato \r\nThank you review comment!\r\nPlease check back as we have written the test you taught us.\r\n\r\nhttps://github.com/denoland/fresh/pull/739/files#diff-638e97e2a9ebf2444cade01ad51b35c6f71e9ebb986c57be1fe88a485cea4f40R116-R133"
                ]
            },
            {
                "pr_number": 764,
                "title": "1.1.1",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/764",
                "comments": []
            }
        ],
        "1.1.0": [
            {
                "pr_number": 567,
                "title": "Fixed minor typo",
                "body": "In the documentation, the command is listed as `deno run -A -r https://fresh.deno.dev my-project`, making the subsequent `cd my-project` appropriate. Here, however, the command arg is `deno-fresh-demo`, making this the correct follow up command.",
                "html_url": "https://github.com/denoland/fresh/pull/567",
                "comments": []
            },
            {
                "pr_number": 576,
                "title": "Update README.md",
                "body": "replace my-project with deno-fresh-demo",
                "html_url": "https://github.com/denoland/fresh/pull/576",
                "comments": []
            },
            {
                "pr_number": 601,
                "title": "Small refactor to refresh script",
                "body": "No functionality change, just making it simpler.",
                "html_url": "https://github.com/denoland/fresh/pull/601",
                "comments": []
            },
            {
                "pr_number": 600,
                "title": "Remove `deno.unstable` references",
                "body": "Now that Fresh hit 1.0, I feel the `deno.unstable` references seems unnecessary (and does more harm than good to end users).",
                "html_url": "https://github.com/denoland/fresh/pull/600",
                "comments": []
            },
            {
                "pr_number": 572,
                "title": "docs: mention kebab case naming for islands",
                "body": "Fresh now supports kebab case naming for islands (#404)\r\nThis PR updates docs to mention that",
                "html_url": "https://github.com/denoland/fresh/pull/572",
                "comments": []
            },
            {
                "pr_number": 589,
                "title": "Docs: Fix Small Grammar Issue",
                "body": "I found some <i>bad grammar</i> whilst reading the docs and thought I'd fix it for the community. \ud83d\udc4d",
                "html_url": "https://github.com/denoland/fresh/pull/589",
                "comments": []
            },
            {
                "pr_number": 481,
                "title": "feat: add `ctx.renderNotFound()` to explicitly render 404 template",
                "body": "Hello,\r\n\r\nThis PR will allow to render the `_404.tsx` if the handler return a 404 status code.\r\n\r\nThis is kind of mandatory when using dynamic routes where the data doesn't exists and a 404 has to be return from the `handler` function.\r\n\r\nI filtered out to only invoke this logic when the `Content-Type` is either `text/html` or `null` (defaulting then to `text/html`) to avoid rendering HTML on `application/json` content type (for example on API endpoints).\r\n\r\nI see that some discussion has already been made about this issue in https://github.com/denoland/fresh/issues/251 \r\n\r\nFeel free to close if you rather use a cleaner implementation.",
                "html_url": "https://github.com/denoland/fresh/pull/481",
                "comments": [
                    "This will fail if the `Content-Type` header includes the charset (e.g. `Content-Type: text/html; charset=UTF-8`). \r\n\r\nIt'd also probably be a good idea to write unit tests",
                    "Good catch, I will add some testing",
                    "added some tests and fix Content-Type issue.\r\n\r\nthanks @byhemechi !",
                    "I would rather do this differently. For example by allowing users to return `null` from handlers. Re-interpreting already created `Response` objects with 404 status is not something that will scale long term I think.",
                    "@lucacasonato I guess I can see how this could be a problem long term. Rather than allowing to return `null`, do you think it would be better to add a function `renderNotFound` on the `ctx` of the `handler` to provide a more explicit way of invoking the `_404` template ? If not, I'm fine with your suggestion, just trying to bounce out ideas.",
                    "That works too",
                    "Another option would be to `throw` a response object for an error page?",
                    "I like this idea but it might require more work to make it work. I'll go with the `renderNotFound` method and maybe something can be done later in another PR.",
                    "It should be good to go, we now have a `renderNotFound` method with some tests and I also added some doc on the new method (would love to have feedback if the doc is clear enough).\r\n\r\nThere seems to be an issue with the CI on format check which is out of the scope of this PR.",
                    "> Another option would be to throw a response object for an error page?\r\n\r\nNot super fond of this path, as `throw` is always very un-optimized in engines and should not really be used in a \"hot path\". This is also why I don't like how Reacts' suspense works :)\r\n",
                    "Thanks for the documentation review, everything is merged \ud83d\udc4d ",
                    "Can you rebase and resolve the conflicts?",
                    "synced w/ main branch \u2713"
                ]
            },
            {
                "pr_number": 512,
                "title": "feat: add initial plugin support",
                "body": "This commit adds initial support for fresh \"plugins\". These are bundles\nof functionality that can be added to a fresh plugin through a simple\naddition in the `main.ts` file.\n\nRight now plugins are only able to hook into the render steps. This\nmeans that they can inject styling and scripts. They can not yet hook\ninto routing.\n\nThings that I think should be possible now:\n- styling integrations for twind, unocss, and probably a few other tools\n\nThings that are not possible yet:\n- google analytics middleware\n- database connectors\n- CMS connectors\n\nThe routing additions to plugins can be added in a follow-up though.\n",
                "html_url": "https://github.com/denoland/fresh/pull/512",
                "comments": [
                    "Looks pretty awesome already, can't wait to see how much would be possible in the future with this plugin system \ud83d\udd25",
                    "This looks great! And it goes in the direction of this request: https://github.com/denoland/fresh/issues/516\r\n\r\nLooking forward to being able to inject middlewares with a line on main.ts too."
                ]
            },
            {
                "pr_number": 513,
                "title": "feat: twind plugin",
                "body": "This PR implements a first party plugin for `twind` integration.\r\n\r\nIt also switches over `www/` to us this new plugin.",
                "html_url": "https://github.com/denoland/fresh/pull/513",
                "comments": [
                    "That's great. Question: how would one use twind's shim? I noticed in the other PR you now use the result of the plugin rendering, which today is not possible (so shorthand expansions don't work for me now). Would the call to shim go in `plugins/twind.ts` render()? \r\n\r\nreference for how I'm using it in main right now: https://github.com/deco-cx/live/blob/main/src/main.ts#L28",
                    "Completely off topic"
                ]
            },
            {
                "pr_number": 604,
                "title": "docs: export route config in routing chapter",
                "body": "Fixes #587\n",
                "html_url": "https://github.com/denoland/fresh/pull/604",
                "comments": []
            },
            {
                "pr_number": 602,
                "title": "www: new landing page",
                "body": "- add some tiny illustrations\r\n- add copy button to getting started\r\n- add showcase\r\n  - there is not a single \"showcase\" page yet, but it works as the first pass",
                "html_url": "https://github.com/denoland/fresh/pull/602",
                "comments": [
                    "Looks really great! I love the little designs :)",
                    "Looks great on desktop now. Some suggestions for mobile:\r\n\r\n- left align the feature descriptions on small screens\r\n- ![image](https://user-images.githubusercontent.com/7829205/183686353-ab872774-bfb0-400d-8e44-217f8fa85786.png)\r\n- always show the copy buttons, because hovering is not really a thing on mobile\r\n\r\nAlso some additional vertical spacing may be good. For example between catchphrase and subtitle, and between the feature group and the description below.",
                    "@lucacasonato \r\nThank you for comments! I think it's done - PTAL",
                    "Looks great - branch needs merge with main",
                    "I just landed the twind plugin PR, so this PR required a bit of rebasing. All fixed now.",
                    "Thank you a lot! Also great work with the twind plugin and the automated screenshot!"
                ]
            },
            {
                "pr_number": 609,
                "title": "fix: add missing icon bg colors on mobile",
                "body": "I noticed that the `FeatureIcons` in the new landing page had missing background colors on mobile, so I added them.\r\n\r\n![image](https://user-images.githubusercontent.com/63919069/183963184-8cf9b536-a833-4252-98c6-631808c4fd93.png)\r\n![image](https://user-images.githubusercontent.com/63919069/183963243-042cc624-2939-4cff-b2f5-3fb33a60a3c7.png)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/609",
                "comments": [
                    "thank you for catching up!\r\n\r\nIs it possible to avoid color repetition? \r\n\r\n![image](https://user-images.githubusercontent.com/3132889/184089755-e621e1ae-6910-4391-8711-bf1763f6d0bf.png)\r\n\r\nIdeally, the colors should be arranged as [green, blue, yellow, green, blue, yellow] on mobile. However, I would like to keep the current colors on desktop.\r\n",
                    "Thank you!"
                ]
            },
            {
                "pr_number": 624,
                "title": "Add 404 and 500 page #446",
                "body": "I found https://github.com/denoland/fresh/issues/446 under 'good first issue', the initial pull request was left behind.",
                "html_url": "https://github.com/denoland/fresh/pull/624",
                "comments": [
                    "@hashrock done",
                    "the 500 page displays the exact same component with different text\r\n\r\n![image](https://user-images.githubusercontent.com/63919069/184228112-26724052-518c-4a9b-83db-e124afeb53da.png)\r\n![image](https://user-images.githubusercontent.com/63919069/184228124-6c82942d-f90e-4dea-85c6-7d78b5733db0.png)\r\n",
                    "@michael-pfister Thanks for your cooperative effort!\r\nAnd thanks @UmbrellaCrow612 to prior PR!"
                ]
            },
            {
                "pr_number": 645,
                "title": "chore: fix ci",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/645",
                "comments": []
            },
            {
                "pr_number": 641,
                "title": "fix: add reference to dom.iterable",
                "body": "This fixes TypeScript errors with things like `URLSearchParams.entries`.\n\nRelated: https://github.com/denoland/deno/issues/15517#issuecomment-1221521244",
                "html_url": "https://github.com/denoland/fresh/pull/641",
                "comments": []
            },
            {
                "pr_number": 621,
                "title": "www: use frontmatter parser from std",
                "body": "Replace the `frontmatter` with the std version, since the package is deprecated: https://deno.land/x/frontmatter@v0.1.5",
                "html_url": "https://github.com/denoland/fresh/pull/621",
                "comments": []
            },
            {
                "pr_number": 639,
                "title": "Add support for preact devtools in dev mode",
                "body": "This PR injects `preact/debug` before the main bundle when running in `dev` mode. This enables helpful debug warnings for Preact and sets up the bridge for the DevTools browser extension.\r\n\r\nTo show the actual component names instead of the minified names, we need to disable esbuild's identifier minification option. The alternative would be to transform every file and append the `displayName` property to all component functions, but since esbuild doesn't expose its AST we'd need to fall back on babel or something similar. That would incur a significant compilation cost and I'm assuming that this wouldn't be in the spirit of this project.\r\n\r\nLet me know what you think.\r\n\r\nDevTools in action:\r\n\r\n![Screenshot 2022-08-21 at 08 42 31](https://user-images.githubusercontent.com/1062408/185779068-3572292b-78b7-44d2-be40-3971b95c1531.png)\r\n\r\n\r\nFixes #611 \r\nFixes https://github.com/preactjs/preact/issues/3686",
                "html_url": "https://github.com/denoland/fresh/pull/639",
                "comments": [
                    "@marvinhagemeister are there any special instructions for implementing this in existing projects?",
                    "@moonstripe Once a new version of fresh is released you just need to upgrade to that and that's it. There are no additional steps required.",
                    "fresh: 1.3.0\r\npreact: 10.15.1\r\nDeno: 1.34.3\r\n\r\nStill doesn't work for me, is there any additional steps? \r\nThanks in advance.\r\n\r\n![image](https://github.com/denoland/fresh/assets/3775924/412cd090-fc3d-4f10-aecc-60bdcd4bbe7c)\r\n",
                    "@labidiaymen See https://github.com/denoland/fresh/issues/1461 . We're currently affected by a transpilation bug in `esm.sh`"
                ]
            },
            {
                "pr_number": 647,
                "title": "chore: use rutt instead of crux.land/router",
                "body": "crux.land/router is becoming denosaurs/rutt. Functionality is the same and everything should keep on working the same!",
                "html_url": "https://github.com/denoland/fresh/pull/647",
                "comments": []
            },
            {
                "pr_number": 553,
                "title": "feat: support multiple middlewares with the same matcher",
                "body": "This `mergeHandler()` could be used to \r\n1. Merge handlers.\r\n2. Control the order of handlers manually\r\n\r\nIt is necessary in many situations. https://github.com/denoland/fresh/issues/549",
                "html_url": "https://github.com/denoland/fresh/pull/553",
                "comments": [
                    "Can't agree any more.\r\n\r\n> Seems much easier if we just allow users to export an `Array<Handler>` from middleware routes. WDYT of that?\r\n> \r\n> This would also allow us to avoid adding the `Proxy` complexity.\r\n\r\nI think there are many methods, but I don't know which one is better.\r\n\r\n## Method 1\r\nCompletely exposes `ctx.handlers` to the users. \r\n```\r\n// src/server/types.ts\r\nexport interface MiddlewareHandlerContext<State = Record<string, unknown>>\r\n  extends ConnInfo {\r\n  next: () => Promise<Response>;\r\n  state: State;\r\n  // expose\r\n  handlers: Handler[];\r\n}\r\n```\r\n\r\nThe downside is that users may misuse it.\r\nFor example:\r\n1. Misusing `ctx.handlers.push(handler)`  instead of `ctx.handlers.unshift(handler)` \r\n2. Misusing `ctx.handlers=[new]` instead of `ctx.handlers=[new, ...old]`\r\n\r\n\r\n## Method 2\r\nExposing `ctx.prependHandler(handler)` only is  safer and easier to use(I prefer this).\r\n```ts\r\nexport interface MiddlewareHandlerContext<State = Record<string, unknown>>\r\n  extends ConnInfo {\r\n  next: () => Promise<Response>;\r\n  state: State;\r\n // expose\r\n  prependHandler(handler: Handler):void;\r\n}\r\n```\r\nI pushed a demo here: https://github.com/denoland/fresh/compare/main...ahuigo:fresh:feat/handler?diff=split\r\n**Changes**\r\nI found that `ctx: MiddlewareHandlerContext` is passed to `handler(req, ctx: HandlerContext)`,\r\nso `HandlerContext` and `MiddlewareHandlerContext` should be same object, and I re-alias`MiddlewareHandlerContext` to `HandlerContext` in my code.\r\n\r\n",
                    "What I mean is supporting:\r\n```\r\n// routes/_middleware.ts\r\n\r\nexport const handler = [\r\n  middleware1,\r\n  middleware2,\r\n];\r\n```",
                    "> What I mean is supporting:\r\n> \r\n> ```\r\n> // routes/_middleware.ts\r\n> \r\n> export const handler = [\r\n>   middleware1,\r\n>   middleware2,\r\n> ];\r\n> ```\r\n\r\nThis would be my preference. In fact, when I want to bundle some middleware together and use it in various places, this is how I do it in Oak. Each array entry is an Oak middleware:\r\n\r\n```ts\r\nexport default [\r\n  Session,\r\n  Inertia.initMiddleware(),\r\n  async (ctx: Context, next: () => Promise<unknown>) => {\r\n    ctx.state.inertia.setShared({\r\n      errors: await ctx.state.session.get('errors')\r\n    })\r\n    await next()\r\n  }\r\n] as const\r\n```",
                    "My latest commit has implemented this logic.\r\n\r\n> ```\r\n> // routes/_middleware.ts\r\n> \r\n> export const handler = [\r\n>   middleware1,\r\n>   middleware2,\r\n> ];\r\n> ```\r\n\r\nJust two things I'm struggling with.\r\n\r\n1. First, wether it is necessary to support  **`Handler[]` only**  instead of  **single `Handler`** , which makes the implementation and usage be more simpler, but  causes **break changes**.\r\n\r\n2. Second, is it necessary to support multiple handlers for **component handler**?\r\nFor example:\r\n```ts\r\n// routes/index.tsx\r\nexport const handler: Handlers = {\r\n  GET:[\r\n      corsHandler,\r\n      logHandler,\r\n      (req, ctx)=> {\r\n          ....\r\n      }\r\n  ],\r\n};\r\n```\r\n\r\n\r\n",
                    "> First, wether it is necessary to support Handler[] only instead of single Handler , which makes the implementation and usage be more simpler, but causes break changes.\r\n\r\nWe are past 1.0, so we can not make breaking changes. Both should be supported.\r\n\r\n> Second, is it necessary to support multiple handlers for component handler?\r\n\r\nI don't think so. If this need comes up in the future, we can look into it then.",
                    "For the time being (1.0.2) I've adopted original @ahuigo 's solution in my userland code.\r\n```ts\r\n// lib/mergeHandlers.ts\r\nimport { MiddlewareHandlerContext } from '$fresh/server.ts';\r\n\r\ntype Handler<T> = (req: Request, ctx: MiddlewareHandlerContext<T>) => Promise<Response> | Response;\r\n\r\n// Merge middleware handlers\r\nexport function mergeHandlers<T>(...handlers: Handler<T>[]) {\r\n  return (_req: Request, ctx: MiddlewareHandlerContext<T>) => {\r\n    const innerHandlers = [...handlers];\r\n    const proxy: MiddlewareHandlerContext<T> = new Proxy(ctx, {\r\n      get: (orgCtx, prop: keyof MiddlewareHandlerContext<T>) => {\r\n        if (prop === 'next') {\r\n          const handler = innerHandlers.shift();\r\n          if (handler) {\r\n            return async () => await handler(_req, proxy);\r\n          }\r\n        }\r\n        return orgCtx[prop];\r\n      },\r\n    });\r\n    return proxy.next();\r\n  };\r\n}\r\n\r\n\r\n\r\n// routes/_middleware.ts\r\nimport { mergeHandlers } from '$/lib/mergeHandlers.ts';\r\n// ...snip...\r\nexport type State = WithRedis & WithSession;\r\nexport const handler = mergeHandlers(redisMiddleware, sessionMiddleware);\r\n```"
                ]
            },
            {
                "pr_number": 650,
                "title": "docs: add frontmatter to concepts/static-files.md",
                "body": "Fixes #648\n",
                "html_url": "https://github.com/denoland/fresh/pull/650",
                "comments": []
            },
            {
                "pr_number": 651,
                "title": "chore: update preact & preact-render-to-string",
                "body": "preact@10.10.6 & preact-render-to-string@5.2.2\n",
                "html_url": "https://github.com/denoland/fresh/pull/651",
                "comments": []
            },
            {
                "pr_number": 649,
                "title": "add \"Made with Fresh\" badges",
                "body": "this adds simple badges in README.",
                "html_url": "https://github.com/denoland/fresh/pull/649",
                "comments": [
                    "Too fun! Thanks for making these @hashrock!"
                ]
            },
            {
                "pr_number": 659,
                "title": "chore: update puppeteer",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/659",
                "comments": []
            },
            {
                "pr_number": 610,
                "title": "feat: support JSX automatic mode",
                "body": "This commit adds support for JSX automatic mode instead of the default\r\nmode that requires the presence of the JSX pragma in each file.\r\n\r\nThis commit also adds the config file to the `fresh.gen.ts` manifest,\r\nwhich is used to determine if the client emit should use automatic mode.\r\n\r\nThe minimum Deno version has also been bumped to 1.25.0.",
                "html_url": "https://github.com/denoland/fresh/pull/610",
                "comments": []
            },
            {
                "pr_number": 679,
                "title": "chore: correct code comment",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/679",
                "comments": []
            },
            {
                "pr_number": 668,
                "title": "docs: fix syntax error on \"Error Pages\" page",
                "body": "Add the missing `const` keyword in **Manually render 404 pages** snippet.",
                "html_url": "https://github.com/denoland/fresh/pull/668",
                "comments": []
            },
            {
                "pr_number": 654,
                "title": "build: remove canary special case in CI",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/654",
                "comments": []
            },
            {
                "pr_number": 680,
                "title": "docs: add \"Deployment\" concepts page",
                "body": "Add docs for deploying using Docker (in addition to Deno Deploy).\n\nCo-authored-by: Lino Le Van <11367844+lino-levan@users.noreply.github.com>\n",
                "html_url": "https://github.com/denoland/fresh/pull/680",
                "comments": []
            },
            {
                "pr_number": 682,
                "title": "fix: Regression issues with Deployment concepts page",
                "body": "Fixes two of the links not being set up correctly. (Top is before, bottom is after)\r\n\r\n<img width=\"400\" alt=\"Screen Shot 2022-08-31 at 8 23 34 AM\" src=\"https://user-images.githubusercontent.com/11367844/187716755-63a23179-c02a-43d6-8671-7be74f483c8a.png\">\r\n<img width=\"400\" alt=\"Screen Shot 2022-08-31 at 8 23 19 AM\" src=\"https://user-images.githubusercontent.com/11367844/187716767-9f43e421-1b74-4ada-8036-4a989e436d08.png\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/682",
                "comments": []
            },
            {
                "pr_number": 689,
                "title": "docs: image alt for \"Made with Fresh\" badges",
                "body": "Included the `alt` attribute in `<img>` tags in README.",
                "html_url": "https://github.com/denoland/fresh/pull/689",
                "comments": []
            },
            {
                "pr_number": 626,
                "title": "feat: added support for static folder in FreshOptions",
                "body": "### Description\r\n\r\nSupport custom (user provided) static assets folder or fallback to default behavior.\r\nCloses: https://github.com/denoland/fresh/issues/460\r\n\r\n---\r\n\r\n### File Changes\r\n\r\n- `src/server/context`: changed the file to now look for `staticDir` first\r\n- `src/server/types`: added `staticDir` to the `FreshOptions` interface\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/626",
                "comments": [
                    "Actually, can you add a test?",
                    "Sure! Btw are there any written docs for `fresh` so that I can get an insight on writing tests?\r\nI have written a test for thing that I have tried to do, I don't really think that's the right way though, would love to have your insights on this @lucacasonato !"
                ]
            },
            {
                "pr_number": 700,
                "title": "www: bump x/gfm version to aid translation software",
                "body": "[This pull request](https://github.com/lucacasonato/deno-gfm/pull/16) got merged so we have to update GFM to get this fix. (I also bumped PrismJS because why not). This closes #597.\r\n\r\nBefore:\r\n<img width=\"1097\" alt=\"Screen Shot 2022-09-05 at 7 48 02 PM\" src=\"https://user-images.githubusercontent.com/11367844/188537144-7ffc6558-32bc-4249-aef3-347abe75d746.png\">\r\n\r\nAfter:\r\n<img width=\"1117\" alt=\"Screen Shot 2022-09-05 at 7 47 45 PM\" src=\"https://user-images.githubusercontent.com/11367844/188537155-a7d8b310-8be9-4a66-a1dd-4a3997f64778.png\">\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/700",
                "comments": [
                    "thanks!"
                ]
            },
            {
                "pr_number": 699,
                "title": "Add single showcase page",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/699",
                "comments": []
            },
            {
                "pr_number": 705,
                "title": "fix(plugin/twind): load configuration as module",
                "body": "This commit loads the Twind configuration as an actual module rather\nthan evaluating it on the server and then serializing. This allows usage\nof unserializable plugin functions.\n\nCo-authored-by: Elias Sj\u00f6green <eliassjogreen1@gmail.com>\n",
                "html_url": "https://github.com/denoland/fresh/pull/705",
                "comments": []
            },
            {
                "pr_number": 706,
                "title": "feat: add update.ts script",
                "body": "This commit adds an update.ts tool that makes it easy to upgrade\nexisting Fresh projects to the latest version of Fresh. This tool\nupdates dependency versions in the import map, and includes some code\nmods:\n\n1. update projects from classic JSX to automatic JSX\n2. update projects from legacy twind integration to twind plugin\n\nBoth of these code mods get you about 95% of the way there most of the\ntime. Users might still need to do some manual work to get their\nprojects fully updated.\n",
                "html_url": "https://github.com/denoland/fresh/pull/706",
                "comments": []
            },
            {
                "pr_number": 707,
                "title": "chore: update preact-render-to-string",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/707",
                "comments": []
            },
            {
                "pr_number": 704,
                "title": "Fix HTML meta tag charset property casing",
                "body": "Corrects strange casing of HTML meta tag charset property for cleaner visual appearance.",
                "html_url": "https://github.com/denoland/fresh/pull/704",
                "comments": []
            },
            {
                "pr_number": 708,
                "title": "chore: tweak console output for init.ts script",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/708",
                "comments": []
            },
            {
                "pr_number": 710,
                "title": "feat: install @preact/signals by default",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/710",
                "comments": []
            },
            {
                "pr_number": 681,
                "title": "feat: experimental support for `Deno.serve`",
                "body": "## Changes\r\nEnables using the unstable `Deno.serve` API.\r\n\r\nYou can test the new server by:\r\n\r\n1. setting the `opts` flag `experimentalDenoServe:true` in `/www/main.ts`\r\n2. running, `deno run --unstable -A www/main.ts`\r\n\r\n```ts\r\n// /www/main.ts\r\n// Start with unstable Deno.serve\r\nawait start(manifest, {\r\n  plugins: [twindPlugin(twindConfig)],\r\n  experimentalDenoServe: true,\r\n});\r\n\r\n```\r\n\r\nGiven the issues with requiring the `unstable` flag which the project seems to have avoided, it probably makes sense to hold off on merging until `Deno.serve` is stable and then switching over completely.\r\n\r\n## TODO\r\n* [ ] update tests\r\n* [ ] add docs\r\n* [ ] handle the `unstable` flag in tests, checks and tasks.\r\n\r\nCloses #678 ",
                "html_url": "https://github.com/denoland/fresh/pull/681",
                "comments": [
                    "This is not a complete PR as there are outstanding issues, but I've confirmed that the new server works by setting `experimentalDenoServe` to `true` in `www/main.ts`then running:\r\n\r\n```\r\ndeno run --unstable -A www/main.ts\r\n```\r\n\r\nI'll keep iterating but feedback welcome @lucacasonato.",
                    "@MarkBennett Looks good! I have pushed a change to add a `// @ts-ignore` comment to the `Deno.serve` invocation. This should alleviate the need to use `--unstable` across all tests (only for a single integration test that actually spawns a new `Deno.serve` server).",
                    "> @MarkBennett Looks good! I have pushed a change to add a `// @ts-ignore` comment to the `Deno.serve` invocation. This should alleviate the need to use `--unstable` across all tests (only for a single integration test that actually spawns a new `Deno.serve` server).\r\n\r\nThanks @lucacasonato Let me know what I can do to get this across the finish line. Do you want me to add an integration test for example? I've not done that before, but if you point me in the right direction I can connect the dots and update this PR.",
                    "Yeah, integration test would be great. To do this:\r\n\r\n1. Create a tests/fixture_experimental_serve containing a hello world project using this option\r\n2. Add a test based off \"jsx pragma works\" in main_test.ts that starts this server, makes some requests to it, checks the requests are correct, and then stops the server.\r\n\r\nIf you get stuck anywhere, just LMK! :)",
                    "I have added a test as I want to include this in the Fresh 1.1.0 release tomorrow.",
                    "> LGTM, thanks!\n\nAwesome. Excited for the next release! \ud83d\ude42"
                ]
            },
            {
                "pr_number": 717,
                "title": "fixing @preact/signals and signals_core version",
                "body": "the @preact/signals_core package doesn't have 1.0.2 version so separated the 2 packages to their latest versions\r\n\r\n@preact/signals 1.0.3\r\n@preact/signals_core 1.0.1",
                "html_url": "https://github.com/denoland/fresh/pull/717",
                "comments": []
            },
            {
                "pr_number": 702,
                "title": "docs: add plugin docs",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/702",
                "comments": []
            },
            {
                "pr_number": 718,
                "title": "Docs for 1.1 changes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/718",
                "comments": []
            },
            {
                "pr_number": 718,
                "title": "Docs for 1.1 changes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/718",
                "comments": []
            },
            {
                "pr_number": 718,
                "title": "Docs for 1.1 changes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/718",
                "comments": []
            },
            {
                "pr_number": 718,
                "title": "Docs for 1.1 changes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/718",
                "comments": []
            },
            {
                "pr_number": 720,
                "title": "www: fix @preact/signals version",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/720",
                "comments": []
            },
            {
                "pr_number": 721,
                "title": "1.1.0",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/721",
                "comments": []
            }
        ],
        "1.0.2": [
            {
                "pr_number": 415,
                "title": "fix: display real value for the directory to cd to after init",
                "body": "| Before | After |\r\n| - | - |\r\n| <img width=\"454\" alt=\"Screen Shot 2022-07-04 at 3 23 05 PM\" src=\"https://user-images.githubusercontent.com/15131271/177221783-c8cadcb3-f84a-4c00-a569-37e7f86ca272.png\"> | <img width=\"456\" alt=\"Screen Shot 2022-07-04 at 3 22 31 PM\" src=\"https://user-images.githubusercontent.com/15131271/177221787-0534a1c2-86be-415e-adc9-edb37a5dd742.png\"> |\r\n\r\nFixes the output of the `init` script, so that it instructs the user to `cd` into the directory that the user specifies (rather than a hard-coded `my-project`)\r\n\r\n**Why this change?**\r\n\r\nIt can be confusing to the user to see a prompt to `cd` to `my-project`, when the user specifies a different directory for `init`. It's extra confusing for folks who are newer to programming or are trying to on-board by following tutorials, so I think this might hurt adoption if not fixed.\r\n\r\n**Test plan:**\r\n\r\n- [x] Run `deno fmt init.ts` to catch lint violations\r\n- [x] Run `deno task test` to catch test failures\r\n- [x] Run `deno run -A init.ts todo-list` to verify that the `cd` message is correct",
                "html_url": "https://github.com/denoland/fresh/pull/415",
                "comments": []
            },
            {
                "pr_number": 435,
                "title": "fix: prevent folks messing with the fresh manifest",
                "body": "I am looking at you James.\n",
                "html_url": "https://github.com/denoland/fresh/pull/435",
                "comments": [
                    "Wow that was really fast...",
                    "> Wow that was really fast...\r\n\r\nWe're watching history in the making.",
                    "Oh god the name :joy: can't believe this was done in 8 minutes"
                ]
            },
            {
                "pr_number": 426,
                "title": "chore: fix link in readme",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/426",
                "comments": [
                    "> Is it right that anyone, not necessarily the repository maintainer, can review someone else's PR?\r\n\r\nYou can review it, but that doesn't do anything. Me or another maintainer have to review and merge the PR."
                ]
            },
            {
                "pr_number": 439,
                "title": "Rename my-app to my-project in landing page",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/439",
                "comments": [
                    "While I agree that what fresh is \u2014 is more of a _\"project\"_ than an _\"app\"_, I think that it's not too important what this suggested name is. And at the same time, changing such things may potentially cause confusion or break something.",
                    "Awesome! Thanks for the merge :) @synalice apologies for not specifying why I made the change!",
                    "> Awesome! Thanks for the merge :) @synalice apologies for not specifying why I made the change!\r\n\r\nOh, I didn't realize the documentation was using `my-project` :sweat_smile: "
                ]
            },
            {
                "pr_number": 404,
                "title": "Support kebab-case filenames for islands",
                "body": "A fix for the issue linked below:\r\nhttps://github.com/denoland/fresh/issues/394",
                "html_url": "https://github.com/denoland/fresh/pull/404",
                "comments": [
                    "@[lucacasonato](https://github.com/lucacasonato) just added the test there. I added it into the `Ensure 2 islands on 1 page are revived` test.\r\n\r\nLet me know if that's ok or if you'd prefer for me to split it out into it's own separate step."
                ]
            },
            {
                "pr_number": 413,
                "title": "feat: add error message to async components",
                "body": "Solves https://github.com/denoland/fresh/issues/405\r\n\r\n![image](https://user-images.githubusercontent.com/12012284/177213543-d433bd72-2999-4616-b1bf-9fdd0778e93c.png)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/413",
                "comments": []
            },
            {
                "pr_number": 457,
                "title": "chore: added formatter settings for vscode",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/457",
                "comments": [
                    "> Thanks! I had this issue today haha\r\n\r\nme also had that "
                ]
            },
            {
                "pr_number": 450,
                "title": "docs: fix readme anchor",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/450",
                "comments": []
            },
            {
                "pr_number": 499,
                "title": "chore: update `preact-render-to-string` import with esm.sh `?external` query",
                "body": "https://esm.sh/preact-render-to-string@5.2.0?external=preact",
                "html_url": "https://github.com/denoland/fresh/pull/499",
                "comments": []
            },
            {
                "pr_number": 495,
                "title": "fix: typo",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/495",
                "comments": []
            },
            {
                "pr_number": 488,
                "title": "fix: Minor typo in init",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/488",
                "comments": []
            },
            {
                "pr_number": 470,
                "title": "feat: enable deno lint & point editor default format to deno",
                "body": "Enable Deno lint & format on save for VSCode.\r\n\r\nI wonder if it's better to keep those enable by default or if we should ask via a prompt to enable it.",
                "html_url": "https://github.com/denoland/fresh/pull/470",
                "comments": [
                    "Thanks"
                ]
            },
            {
                "pr_number": 510,
                "title": "chore: format with stable, not canary",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/510",
                "comments": []
            },
            {
                "pr_number": 486,
                "title": "refactor: simplified start proj logs",
                "body": "## Change\r\nImproved the _how to navigate and start your project_ logs after initialization.\r\n\r\n## Why this change?\r\n\r\nIn the previous state, it was harder for users:\r\n1. To know that these are commands\r\n2. To copy and paste that commands into the terminal\r\n\r\n## Inspiration \r\n\r\nWhile creating Google Flutter's projects, it has a similar structure which makes it easier for copy-pasting in the terminal. When I came to fresh for the first time, it was a little hard for me to quickly catch them as commands.\r\n\r\n## Comparison (Before | After)\r\n![image](https://user-images.githubusercontent.com/47249618/178105250-766723b6-8794-4600-918a-226f61857beb.png)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/486",
                "comments": [
                    "Great idea! I saw that you're still using `unresolvedDirectory` for the `cd` command, which is good! The right-hand-side image you sent show `cd hello_world` though... it should be `cd my-project` if it's using `unresolvedDirectory` \ud83d\ude01\r\n\r\nMinor nitpick but I hope it's just the image that's slightly wonky!",
                    "> Great idea! I saw that you're still using `unresolvedDirectory` for the `cd` command, which is good! The right-hand-side image you sent show `cd hello_world` though... it should be `cd my-project` if it's using `unresolvedDirectory` \ud83d\ude01\r\n> \r\n> Minor nitpick but I hope it's just the image that's slightly wonky!\r\n\r\nActually no, the unresolved directory gives us the name of the directory in which the project is been initialized. I created a project named, `hello_world`.\r\n\r\nIf you see the new updated code (not yet released), when you create a new project, you get the name of the directory in which you created the project. \r\n\r\nSo it's nothing changed, it's still the unresolved directory shown there in the 2nd image. Basically instead of giving us resolved directory which will be for e.g. `Users/<username>/.../directory` it gives us an unresolved directory which will be `directory`. `my-project` is a static log previously which soon got updated in this https://github.com/denoland/fresh/pull/415 pull.",
                    "> > Great idea! I saw that you're still using `unresolvedDirectory` for the `cd` command, which is good! The right-hand-side image you sent show `cd hello_world` though... it should be `cd my-project` if it's using `unresolvedDirectory` \ud83d\ude01\r\n> > Minor nitpick but I hope it's just the image that's slightly wonky!\r\n> \r\n> Actually no, the unresolved directory gives us the name of the directory in which the project is been initialized. I created a project named, `hello_world`.\r\n> \r\n> If you see the new updated code (not yet released), when you create a new project, you get the name of the directory in which you created the project.\r\n> \r\n> So it's nothing changed, it's still the unresolved directory shown there in the 2nd image. Basically instead of giving us resolved directory which will be for e.g. `Users/<username>/.../directory` it gives us an unresolved directory which will be `directory`. `my-project` is a static log previously which soon got updated in this #415 pull.\r\n\r\nAh I see! Thanks for the clarification!"
                ]
            },
            {
                "pr_number": 496,
                "title": "docs: fix wrong interface on handler parameter",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/496",
                "comments": []
            },
            {
                "pr_number": 562,
                "title": "chore: run `deno fmt` with new deno version",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/562",
                "comments": []
            },
            {
                "pr_number": 545,
                "title": "fix: Remove meta for IE",
                "body": "IE is no longer supported, so i think no need to include tags for IE.",
                "html_url": "https://github.com/denoland/fresh/pull/545",
                "comments": []
            },
            {
                "pr_number": 554,
                "title": "doc(routes): add sub-title",
                "body": "For: https://github.com/denoland/fresh/issues/547",
                "html_url": "https://github.com/denoland/fresh/pull/554",
                "comments": [
                    "Related issue & answer from maintainer: https://github.com/denoland/fresh/issues/491#issuecomment-1181769820",
                    "> Related issue & answer from maintainer: [#491 (comment)](https://github.com/denoland/fresh/issues/491#issuecomment-1181769820)\r\n\r\nAs it is redundant, I think I need to delete the description about default layout(`_app.tsx`),  and keep the sub-title only.\r\n\r\nIf there is any inappropriateness, feel free to close the PR.\r\n\r\n"
                ]
            },
            {
                "pr_number": 533,
                "title": "chore: fix typo in context.ts",
                "body": "occured -> occurred",
                "html_url": "https://github.com/denoland/fresh/pull/533",
                "comments": []
            },
            {
                "pr_number": 528,
                "title": "docs: grammar fix",
                "body": "Changed \"it's props\" to \"its props\" to indicate possession instead of a contraction.",
                "html_url": "https://github.com/denoland/fresh/pull/528",
                "comments": []
            },
            {
                "pr_number": 524,
                "title": "Small footer change",
                "body": "I changed the wording and capitalization of the footer.",
                "html_url": "https://github.com/denoland/fresh/pull/524",
                "comments": []
            },
            {
                "pr_number": 561,
                "title": "chore: update deps",
                "body": "Update std, esbuild, and preact.\n",
                "html_url": "https://github.com/denoland/fresh/pull/561",
                "comments": []
            },
            {
                "pr_number": 417,
                "title": "\u267b\ufe0f Using deno Std  HTTP Status Codes",
                "body": "I notes the fresh source code is fresh and easy for read but, I get confuse when see http status code as number \ud83d\ude36\u200d\ud83c\udf2b\ufe0f\r\nI hope this RP Accept !",
                "html_url": "https://github.com/denoland/fresh/pull/417",
                "comments": [
                    "Can you use https://doc.deno.land/https://deno.land/std@0.146.0/http/http_status.ts/~/Status instead?",
                    "I see.. that will be nice if we can get Status code in Application  by `import {Status} from \"$fresh/server.ts\"`"
                ]
            },
            {
                "pr_number": 353,
                "title": "feat: add component/Button in starter project",
                "body": "added a new Button component as requested in issue #350 , has been tested.\r\n\r\n@lucacasonato shall I update the start command to watch the `components/` folder too ?",
                "html_url": "https://github.com/denoland/fresh/pull/353",
                "comments": [
                    "updated example project dir name to `deno-fresh-demo` following #342 ",
                    "> Thanks, but this is a kind of weird if a user chooses not to use `twind` (because then the wrapper does nothing). Maybe add the `disabled` stuff to the `Button` component too?\r\n\r\nyes, will do \ud83d\udc4d\ud83c\udffc ",
                    "@lucacasonato the `disabled` thing is already being passed as a prop, the import was unnecessary, removed it."
                ]
            },
            {
                "pr_number": 566,
                "title": "1.0.2",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/566",
                "comments": []
            }
        ],
        "1.0.1": [
            {
                "pr_number": 295,
                "title": "docs: fix typos",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/295",
                "comments": [
                    "It was also tempting to move the page to `architecture` without the extra `h`.",
                    "> It was also tempting to move the page to architecture without the extra h.\r\n\r\nAw crap. I'll need to fix that. But we'll need a redirect from `architechture` to `architecture`"
                ]
            },
            {
                "pr_number": 296,
                "title": "www: fix footer github link to denoland repo (#219)",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/296",
                "comments": []
            },
            {
                "pr_number": 303,
                "title": "docs: fix typos",
                "body": "this commit fixes a few small typos in the docs. I didn't try to editorialize anything here, just a few single word replacements that I picked up on while going through the docs",
                "html_url": "https://github.com/denoland/fresh/pull/303",
                "comments": [
                    "Hi!\r\nCould it be that in the \"Running locally\" page at the docs.\r\nThere is a _comma_ instead of a _dot_ in the `--watch=static` flag\r\nThey both work, so i'm not sure.\r\n\r\nWith Comma (_currently in the doc_)\r\n`deno run --allow-net --allow-read --allow-env --allow-run --watch=static/,routes/ main.ts`\r\n\r\nWith a dot\r\n`deno run --allow-net --allow-read --allow-env --allow-run --watch=static/.routes/ main.ts`\r\n\r\n\r\nThanks for this project! I already love it :)\r\n\r\n\r\n",
                    "@santuan No, the comma is correct. It's watching whatever --watch watches by default, and then `static/` and `routes/` directories."
                ]
            },
            {
                "pr_number": 305,
                "title": "docs: fix typo",
                "body": "Just a minor typo fix on `docs/getting-started/deploy-to-production`",
                "html_url": "https://github.com/denoland/fresh/pull/305",
                "comments": []
            },
            {
                "pr_number": 311,
                "title": "Add note about changing port or host",
                "body": "Add a note on how to change the host and port.",
                "html_url": "https://github.com/denoland/fresh/pull/311",
                "comments": []
            },
            {
                "pr_number": 322,
                "title": "Update create-a-project.md",
                "body": "hotfix docs",
                "html_url": "https://github.com/denoland/fresh/pull/322",
                "comments": []
            },
            {
                "pr_number": 337,
                "title": "Update JOKES generator to use the array's length",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/337",
                "comments": []
            },
            {
                "pr_number": 329,
                "title": "Update docs",
                "body": "![](https://i.imgur.com/1ct51NV.png)",
                "html_url": "https://github.com/denoland/fresh/pull/329",
                "comments": [
                    "Just the code parts should be in code blocks, not all the descriptive text."
                ]
            },
            {
                "pr_number": 400,
                "title": "docs: remove handler functions link",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/400",
                "comments": []
            },
            {
                "pr_number": 334,
                "title": "Update README.md & init.ts to match the docs ",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/334",
                "comments": []
            },
            {
                "pr_number": 333,
                "title": "Update adding-interactivity.md",
                "body": "The previous solution did not clear interval after the time has passed.\r\nThe \"now\" variable was not being updated in useEffect().",
                "html_url": "https://github.com/denoland/fresh/pull/333",
                "comments": []
            },
            {
                "pr_number": 346,
                "title": "docs: fix typo. added styling.",
                "body": "Fixed typos. \r\nReordered and simplified text.\r\nAdded some styling.",
                "html_url": "https://github.com/denoland/fresh/pull/346",
                "comments": []
            },
            {
                "pr_number": 362,
                "title": "[docs] removed unnecessary commas",
                "body": " [changes](https://github.com/denoland/fresh/tree/bf77568f90784ab166ffcf4c916ae9b5c19f1d38)",
                "html_url": "https://github.com/denoland/fresh/pull/362",
                "comments": []
            },
            {
                "pr_number": 357,
                "title": "fix example code",
                "body": "Small correction to the documentation.",
                "html_url": "https://github.com/denoland/fresh/pull/357",
                "comments": []
            },
            {
                "pr_number": 367,
                "title": "feat: add vscode files on init",
                "body": "I'm guessing a lot of people are coming to Fresh without any knowledge on Deno or never used Deno before.\r\n\r\nThis PR will add some VSCode files to ease their way into the framework by recommanding the Deno extension and enable Deno's extension by default when they open the project for the first time.\r\n\r\nRelated issue: https://github.com/denoland/fresh/issues/364",
                "html_url": "https://github.com/denoland/fresh/pull/367",
                "comments": [
                    "Good call \ud83d\udc4d\r\nUpdated to behave like the Twind prompt "
                ]
            },
            {
                "pr_number": 375,
                "title": "fix(doc): incorrect runtime imports",
                "body": "Found by Lightnet#9727 on Discord",
                "html_url": "https://github.com/denoland/fresh/pull/375",
                "comments": []
            },
            {
                "pr_number": 365,
                "title": "Fix typo",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/365",
                "comments": []
            },
            {
                "pr_number": 393,
                "title": "Minor typo fix",
                "body": "Capitalize F in mention of Fresh",
                "html_url": "https://github.com/denoland/fresh/pull/393",
                "comments": []
            },
            {
                "pr_number": 407,
                "title": "fix: layered middleware not working for index page",
                "body": "This commit fixes layered middleware not being invoked for the the index\r\npage of the layer.\r\n\r\nFor example: routes/api/_middleware.ts was not being invoked for /api,\r\nonly /api/foobar\r\n\r\nFixes #343.",
                "html_url": "https://github.com/denoland/fresh/pull/407",
                "comments": []
            },
            {
                "pr_number": 408,
                "title": "tests: fix hanging tests locally",
                "body": "Also add a test for --vscode for the init script.\n",
                "html_url": "https://github.com/denoland/fresh/pull/408",
                "comments": []
            },
            {
                "pr_number": 410,
                "title": "chore: update preact + twind",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/410",
                "comments": []
            },
            {
                "pr_number": 409,
                "title": "1.0.1",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/409",
                "comments": []
            }
        ],
        "1.0.0": [
            {
                "pr_number": 293,
                "title": "docs: remove pre-1.0 warning",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/293",
                "comments": []
            },
            {
                "pr_number": 292,
                "title": "docs: finish up concepts docs",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/292",
                "comments": []
            },
            {
                "pr_number": 294,
                "title": "doc changes",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/294",
                "comments": []
            }
        ],
        "1.0.0-rc.6": [
            {
                "pr_number": 291,
                "title": "chore: update import map defaults in init.ts",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/291",
                "comments": []
            }
        ],
        "1.0.0-rc.5": [
            {
                "pr_number": 286,
                "title": "chore: use GitHub-styled warning message",
                "body": "*See the preview for how GitHub styles this setup of a warning message differently.",
                "html_url": "https://github.com/denoland/fresh/pull/286",
                "comments": [
                    "Thanks."
                ]
            },
            {
                "pr_number": 285,
                "title": "Fix a few small typos",
                "body": "I worked through the documentation recently and found a few small typos.\r\n\r\nThank you for an interesting project that makes things fun again!",
                "html_url": "https://github.com/denoland/fresh/pull/285",
                "comments": []
            },
            {
                "pr_number": 288,
                "title": "feat: allow lang configuration",
                "body": "In render function, can set HTML lang using `ctx.lang = \"fr\"`, by default it remains `en`",
                "html_url": "https://github.com/denoland/fresh/pull/288",
                "comments": [
                    "Looks good! Can you please add a test case @benjamingeets?",
                    "(hope i've done it the right way, honestly I've never done testing before\ud83d\ude05)"
                ]
            }
        ],
        "1.0.0-rc.4": [
            {
                "pr_number": 274,
                "title": "fix some typos",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/274",
                "comments": []
            },
            {
                "pr_number": 277,
                "title": "make RoundedButton not zoom when double click in mobile devices",
                "body": "### What this PR is for?\r\nFix issue #252.\r\n\r\nStop the homepage count +/- buttons from zooming in/out when mobile users double clicks them.\r\n\r\n### How it's tested?\r\nTested in my mobile device chrome & safari browser.\r\nBefore:\r\n<video src=\"https://user-images.githubusercontent.com/46992350/175068913-916e3ba4-d435-41a2-afb8-c2fdcf9095ff.mov\">\r\n\r\nAfter:\r\n<video src=\"https://user-images.githubusercontent.com/46992350/175068941-dc82b4af-2b62-40dc-bc15-8f1b0649380b.mov\">\r\n\r\n\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/277",
                "comments": []
            },
            {
                "pr_number": 276,
                "title": "test: add test case of fresh-init",
                "body": "I added a test case for an invalid `fresh-init` command.\r\nWhat do you think?",
                "html_url": "https://github.com/denoland/fresh/pull/276",
                "comments": []
            },
            {
                "pr_number": 278,
                "title": "init: add favicon.ico to static",
                "body": "Browswers try to get `/favicon.ico` by default.\r\nThis request enters `[name].tsx` and returns greet unexpectedly.\r\nTo guard it, favicon is fetched from `https://fresh.deno.dev` and save into `static`.",
                "html_url": "https://github.com/denoland/fresh/pull/278",
                "comments": [
                    "Thank you!",
                    "@satotake thanks for this, as a bonus it makes it easy to understand where to put images in a new project.",
                    "Hey! Is there a way I can use png as a favicon?"
                ]
            },
            {
                "pr_number": 282,
                "title": "chore: check minimum Deno version for init.ts",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/282",
                "comments": []
            },
            {
                "pr_number": 283,
                "title": "fix: don't reload multiple times on restart",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/283",
                "comments": []
            }
        ],
        "1.0.0-rc.3": [
            {
                "pr_number": 269,
                "title": "fix: types in `fresh-init --twind`'s main.ts",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/269",
                "comments": []
            },
            {
                "pr_number": 270,
                "title": "Replace the lemon squash illustration with SVG",
                "body": "Close #246 \r\n\r\nold: \r\n\r\n![image](https://user-images.githubusercontent.com/3132889/175012248-7b9f6697-b07d-469a-a972-7a1c6caeb829.png)\r\n\r\nnew: \r\n\r\n![image](https://user-images.githubusercontent.com/3132889/175012331-a83810ca-43b1-49c2-b305-7a5edc96f016.png)\r\n\r\nWe don't need multiple images for different screens anymore :)\r\n\r\n![image](https://user-images.githubusercontent.com/3132889/175012645-fae08ade-908e-45c4-b0f2-22fcfbd31f9b.png)\r\n\r\nI don't think we need dark mode support yet, but I did just in case.",
                "html_url": "https://github.com/denoland/fresh/pull/270",
                "comments": [
                    "> Close #246\r\n> \r\n> old:\r\n> \r\n> ![image](https://user-images.githubusercontent.com/3132889/175012248-7b9f6697-b07d-469a-a972-7a1c6caeb829.png)\r\n> \r\n> new:\r\n> \r\n> ![image](https://user-images.githubusercontent.com/3132889/175012331-a83810ca-43b1-49c2-b305-7a5edc96f016.png)\r\n> \r\n> We don't need multiple images for different screens anymore :)\r\n> \r\n> ![image](https://user-images.githubusercontent.com/3132889/175012645-fae08ade-908e-45c4-b0f2-22fcfbd31f9b.png)\r\n> \r\n> I don't think we need dark mode support yet, but I did just in case.\r\n\r\nI liked the hand-drawn aesthetic, I'll miss it"
                ]
            },
            {
                "pr_number": 271,
                "title": "www: fix footer to the bottom when content is short",
                "body": "This commit fixes the footers to the bottom of the page when the content is short relative to the screen height.\r\n\r\nCurrently the footers are floating up if the screen height is big, as seen in the following screenshot:\r\n\r\n![image](https://user-images.githubusercontent.com/23649474/175023547-e928db04-f54e-4a4e-8797-d7d036b87dc7.png)\r\n\r\nWith this commit, they will be fixed to the bottom of the page, which looks even nicer IMO:\r\n\r\n![image](https://user-images.githubusercontent.com/23649474/175023848-f139dda0-e999-4d25-aa97-0bea0366853e.png)\r\n",
                "html_url": "https://github.com/denoland/fresh/pull/271",
                "comments": []
            },
            {
                "pr_number": 272,
                "title": "chore: update default preact version",
                "body": null,
                "html_url": "https://github.com/denoland/fresh/pull/272",
                "comments": []
            }
        ],
        "1.0.0-rc.2": []
    }
}