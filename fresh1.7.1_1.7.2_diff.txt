diff --git a/src/runtime/entrypoints/main.ts b/src/runtime/entrypoints/main.ts
index 9357aed58f3..255476861db 100644
--- a/src/runtime/entrypoints/main.ts
+++ b/src/runtime/entrypoints/main.ts
@@ -868,9 +868,18 @@ const originalHook = options.vnode;
 options.vnode = (vnode) => {
   assetHashingHook(vnode);
 
-  // Mark active or ancestor links
-  if (vnode.type === "a") {
-    setActiveUrl(vnode, location.pathname);
+  if (typeof vnode.type === "string") {
+    // Mark active or ancestor links
+    if (vnode.type === "a") {
+      setActiveUrl(vnode, location.pathname);
+    }
+
+    if (CLIENT_NAV_ATTR in vnode.props) {
+      const value = vnode.props[CLIENT_NAV_ATTR];
+      if (typeof value === "boolean") {
+        vnode.props[CLIENT_NAV_ATTR] = String(value);
+      }
+    }
   }
 
   if (originalHook) originalHook(vnode);
@@ -927,13 +936,16 @@ function maybeUpdateHistory(nextUrl: URL) {
 
 document.addEventListener("click", async (e) => {
   let el = e.target;
-  if (el && el instanceof HTMLElement) {
+  if (el && (el instanceof HTMLElement || el instanceof SVGElement)) {
     const originalEl = el;
 
     // Check if we clicked inside an anchor link
     if (el.nodeName !== "A") {
       el = el.closest("a");
     }
+    if (el === null) {
+      el = originalEl.closest("button");
+    }
 
     if (
       // Check that we're still dealing with an anchor tag
@@ -984,33 +996,22 @@ document.addEventListener("click", async (e) => {
           indicator.value = false;
         }
       }
-    } else {
-      let button: HTMLButtonElement | HTMLElement | null = originalEl;
-      // Check if we clicked on a button
-      if (button.nodeName !== "A") {
-        button = button.closest("button");
-      }
-
-      if (
-        button !== null && button instanceof HTMLButtonElement &&
-        (button.type !== "submit" || button.form === null)
-      ) {
-        const partial = button.getAttribute(PARTIAL_ATTR);
-
-        // Check if the user opted out of client side navigation.
-        if (
-          partial === null ||
-          !checkClientNavEnabled(button)
-        ) {
-          return;
-        }
+    } else if (
+      el && el instanceof HTMLButtonElement &&
+      (el.type !== "submit" || el.form === null)
+    ) {
+      const partial = el.getAttribute(PARTIAL_ATTR);
 
-        const partialUrl = new URL(
-          partial,
-          location.href,
-        );
-        await fetchPartials(partialUrl);
+      // Check if the user opted out of client side navigation.
+      if (partial === null || !checkClientNavEnabled(el)) {
+        return;
       }
+
+      const partialUrl = new URL(
+        partial,
+        location.href,
+      );
+      await fetchPartials(partialUrl);
     }
   }
 });
diff --git a/src/server/router.ts b/src/server/router.ts
index ae0a17a72b1..5c804b40394 100644
--- a/src/server/router.ts
+++ b/src/server/router.ts
@@ -189,9 +189,14 @@ export function getParamsAndRoute(
       const res = route.pattern.exec(url);
 
       if (res !== null) {
+        const params: Record<string, string> = {};
+        for (const [key, value] of Object.entries(res.pathname.groups)) {
+          params[key] = value === undefined ? "" : value;
+        }
+
         return {
           route: route,
-          params: res.pathname.groups,
+          params,
           isPartial,
         };
       }
diff --git a/tests/fixture_partials/fresh.gen.ts b/tests/fixture_partials/fresh.gen.ts
index ec5922e4450..318edbdeb00 100644
--- a/tests/fixture_partials/fresh.gen.ts
+++ b/tests/fixture_partials/fresh.gen.ts
@@ -32,6 +32,18 @@ import * as $client_nav_opt_out_injected from "./routes/client_nav_opt_out/injec
 import * as $client_nav_opt_out_page_a from "./routes/client_nav_opt_out/page-a.tsx";
 import * as $client_nav_opt_out_page_b from "./routes/client_nav_opt_out/page-b.tsx";
 import * as $client_nav_opt_out_page_c from "./routes/client_nav_opt_out/page-c.tsx";
+import * as $client_nav_opt_out_island_layout from "./routes/client_nav_opt_out_island/_layout.tsx";
+import * as $client_nav_opt_out_island_index from "./routes/client_nav_opt_out_island/index.tsx";
+import * as $client_nav_opt_out_island_partial from "./routes/client_nav_opt_out_island/partial.tsx";
+import * as $client_nav_opt_out_island_success from "./routes/client_nav_opt_out_island/success.tsx";
+import * as $client_svg_button_layout from "./routes/client_svg_button/_layout.tsx";
+import * as $client_svg_button_fail from "./routes/client_svg_button/fail.tsx";
+import * as $client_svg_button_index from "./routes/client_svg_button/index.tsx";
+import * as $client_svg_button_success from "./routes/client_svg_button/success.tsx";
+import * as $client_svg_link_layout from "./routes/client_svg_link/_layout.tsx";
+import * as $client_svg_link_fail from "./routes/client_svg_link/fail.tsx";
+import * as $client_svg_link_index from "./routes/client_svg_link/index.tsx";
+import * as $client_svg_link_success from "./routes/client_svg_link/success.tsx";
 import * as $deep_partial_index from "./routes/deep_partial/index.tsx";
 import * as $deep_partial_injected from "./routes/deep_partial/injected.tsx";
 import * as $deep_partial_update from "./routes/deep_partial/update.tsx";
@@ -128,6 +140,7 @@ import * as $InvalidSlot from "./islands/InvalidSlot.tsx";
 import * as $KeyExplorer from "./islands/KeyExplorer.tsx";
 import * as $LazyLink from "./islands/LazyLink.tsx";
 import * as $Logger from "./islands/Logger.tsx";
+import * as $OptOutLink from "./islands/OptOutLink.tsx";
 import * as $Other from "./islands/Other.tsx";
 import * as $PartialTrigger from "./islands/PartialTrigger.tsx";
 import * as $PassThrough from "./islands/PassThrough.tsx";
@@ -135,7 +148,7 @@ import * as $PropIsland from "./islands/PropIsland.tsx";
 import * as $SignalProp from "./islands/SignalProp.tsx";
 import * as $Spinner from "./islands/Spinner.tsx";
 import * as $Stateful from "./islands/Stateful.tsx";
-import { type Manifest } from "$fresh/server.ts";
+import type { Manifest } from "$fresh/server.ts";
 
 const manifest = {
   routes: {
@@ -169,6 +182,22 @@ const manifest = {
     "./routes/client_nav_opt_out/page-a.tsx": $client_nav_opt_out_page_a,
     "./routes/client_nav_opt_out/page-b.tsx": $client_nav_opt_out_page_b,
     "./routes/client_nav_opt_out/page-c.tsx": $client_nav_opt_out_page_c,
+    "./routes/client_nav_opt_out_island/_layout.tsx":
+      $client_nav_opt_out_island_layout,
+    "./routes/client_nav_opt_out_island/index.tsx":
+      $client_nav_opt_out_island_index,
+    "./routes/client_nav_opt_out_island/partial.tsx":
+      $client_nav_opt_out_island_partial,
+    "./routes/client_nav_opt_out_island/success.tsx":
+      $client_nav_opt_out_island_success,
+    "./routes/client_svg_button/_layout.tsx": $client_svg_button_layout,
+    "./routes/client_svg_button/fail.tsx": $client_svg_button_fail,
+    "./routes/client_svg_button/index.tsx": $client_svg_button_index,
+    "./routes/client_svg_button/success.tsx": $client_svg_button_success,
+    "./routes/client_svg_link/_layout.tsx": $client_svg_link_layout,
+    "./routes/client_svg_link/fail.tsx": $client_svg_link_fail,
+    "./routes/client_svg_link/index.tsx": $client_svg_link_index,
+    "./routes/client_svg_link/success.tsx": $client_svg_link_success,
     "./routes/deep_partial/index.tsx": $deep_partial_index,
     "./routes/deep_partial/injected.tsx": $deep_partial_injected,
     "./routes/deep_partial/update.tsx": $deep_partial_update,
@@ -278,6 +307,7 @@ const manifest = {
     "./islands/KeyExplorer.tsx": $KeyExplorer,
     "./islands/LazyLink.tsx": $LazyLink,
     "./islands/Logger.tsx": $Logger,
+    "./islands/OptOutLink.tsx": $OptOutLink,
     "./islands/Other.tsx": $Other,
     "./islands/PartialTrigger.tsx": $PartialTrigger,
     "./islands/PassThrough.tsx": $PassThrough,
diff --git a/tests/fixture_partials/islands/OptOutLink.tsx b/tests/fixture_partials/islands/OptOutLink.tsx
new file mode 100644
index 00000000000..88b191560e1
--- /dev/null
+++ b/tests/fixture_partials/islands/OptOutLink.tsx
@@ -0,0 +1,9 @@
+export function OptOutLink(props: { href: string; partial: string }) {
+  return (
+    <div f-client-nav={false}>
+      <a class="opt-out-link" href={props.href} f-partial={props.partial}>
+        link
+      </a>
+    </div>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_nav_opt_out_island/_layout.tsx b/tests/fixture_partials/routes/client_nav_opt_out_island/_layout.tsx
new file mode 100644
index 00000000000..f2aee217b04
--- /dev/null
+++ b/tests/fixture_partials/routes/client_nav_opt_out_island/_layout.tsx
@@ -0,0 +1,23 @@
+import { PageProps } from "$fresh/server.ts";
+import { Partial } from "$fresh/runtime.ts";
+import { Fader } from "../../islands/Fader.tsx";
+
+export default function AppLayout({ Component }: PageProps) {
+  return (
+    <html>
+      <head>
+        <meta charset="utf-8" />
+        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+        <title>fresh title</title>
+      </head>
+      <body f-client-nav>
+        <Partial name="body">
+          <Fader>
+            <Component />
+          </Fader>
+        </Partial>
+        <pre id="logs" />
+      </body>
+    </html>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_nav_opt_out_island/index.tsx b/tests/fixture_partials/routes/client_nav_opt_out_island/index.tsx
new file mode 100644
index 00000000000..5c2178515f3
--- /dev/null
+++ b/tests/fixture_partials/routes/client_nav_opt_out_island/index.tsx
@@ -0,0 +1,19 @@
+import { RouteConfig } from "$fresh/server.ts";
+import { OptOutLink } from "$fresh/tests/fixture_partials/islands/OptOutLink.tsx";
+import CounterA from "../../islands/CounterA.tsx";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function ModeDemo() {
+  return (
+    <div>
+      <OptOutLink
+        href="/client_nav_opt_out_island/success"
+        partial="/client_nav_opt_out_island/partial"
+      />
+      <CounterA />
+    </div>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_nav_opt_out_island/partial.tsx b/tests/fixture_partials/routes/client_nav_opt_out_island/partial.tsx
new file mode 100644
index 00000000000..69802347e26
--- /dev/null
+++ b/tests/fixture_partials/routes/client_nav_opt_out_island/partial.tsx
@@ -0,0 +1,9 @@
+import { RouteConfig } from "$fresh/server.ts";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function PageA() {
+  return <h1 class="fail">FAIL</h1>;
+}
diff --git a/tests/fixture_partials/routes/client_nav_opt_out_island/success.tsx b/tests/fixture_partials/routes/client_nav_opt_out_island/success.tsx
new file mode 100644
index 00000000000..5350e9db354
--- /dev/null
+++ b/tests/fixture_partials/routes/client_nav_opt_out_island/success.tsx
@@ -0,0 +1,15 @@
+import { RouteConfig } from "$fresh/server.ts";
+import CounterA from "../../islands/CounterA.tsx";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function PageA() {
+  return (
+    <div>
+      <h1 class="success">Success</h1>
+      <CounterA />
+    </div>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_svg_button/_layout.tsx b/tests/fixture_partials/routes/client_svg_button/_layout.tsx
new file mode 100644
index 00000000000..f2aee217b04
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_button/_layout.tsx
@@ -0,0 +1,23 @@
+import { PageProps } from "$fresh/server.ts";
+import { Partial } from "$fresh/runtime.ts";
+import { Fader } from "../../islands/Fader.tsx";
+
+export default function AppLayout({ Component }: PageProps) {
+  return (
+    <html>
+      <head>
+        <meta charset="utf-8" />
+        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+        <title>fresh title</title>
+      </head>
+      <body f-client-nav>
+        <Partial name="body">
+          <Fader>
+            <Component />
+          </Fader>
+        </Partial>
+        <pre id="logs" />
+      </body>
+    </html>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_svg_button/fail.tsx b/tests/fixture_partials/routes/client_svg_button/fail.tsx
new file mode 100644
index 00000000000..69802347e26
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_button/fail.tsx
@@ -0,0 +1,9 @@
+import { RouteConfig } from "$fresh/server.ts";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function PageA() {
+  return <h1 class="fail">FAIL</h1>;
+}
diff --git a/tests/fixture_partials/routes/client_svg_button/index.tsx b/tests/fixture_partials/routes/client_svg_button/index.tsx
new file mode 100644
index 00000000000..e6ba83ac88c
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_button/index.tsx
@@ -0,0 +1,51 @@
+import { RouteConfig } from "$fresh/server.ts";
+import CounterA from "../../islands/CounterA.tsx";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function ModeDemo() {
+  return (
+    <div>
+      <button type="button" f-partial="/client_svg_link/success">
+        <svg
+          width="100"
+          height="100"
+          viewBox="-256 -256 512 512"
+          version="1.1"
+          xmlns="http://www.w3.org/2000/svg"
+          xmlnsXlink="http://www.w3.org/1999/xlink"
+        >
+          <path
+            class="update"
+            d="M0,-256 221.7025033688164,-128 221.7025033688164,128 0,256 -221.7025033688164,128 -221.7025033688164,-128z"
+            fill="#673ab8"
+          />
+          <ellipse
+            cx="0"
+            cy="0"
+            stroke-width="16px"
+            rx="75px"
+            ry="196px"
+            fill="none"
+            stroke="white"
+            transform="rotate(52.5)"
+          />
+          <ellipse
+            cx="0"
+            cy="0"
+            stroke-width="16px"
+            rx="75px"
+            ry="196px"
+            fill="none"
+            stroke="white"
+            transform="rotate(-52.5)"
+          />
+          <circle cx="0" cy="0" r="34" fill="white" />
+        </svg>
+      </button>
+      <CounterA />
+    </div>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_svg_button/success.tsx b/tests/fixture_partials/routes/client_svg_button/success.tsx
new file mode 100644
index 00000000000..5350e9db354
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_button/success.tsx
@@ -0,0 +1,15 @@
+import { RouteConfig } from "$fresh/server.ts";
+import CounterA from "../../islands/CounterA.tsx";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function PageA() {
+  return (
+    <div>
+      <h1 class="success">Success</h1>
+      <CounterA />
+    </div>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_svg_link/_layout.tsx b/tests/fixture_partials/routes/client_svg_link/_layout.tsx
new file mode 100644
index 00000000000..f2aee217b04
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_link/_layout.tsx
@@ -0,0 +1,23 @@
+import { PageProps } from "$fresh/server.ts";
+import { Partial } from "$fresh/runtime.ts";
+import { Fader } from "../../islands/Fader.tsx";
+
+export default function AppLayout({ Component }: PageProps) {
+  return (
+    <html>
+      <head>
+        <meta charset="utf-8" />
+        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+        <title>fresh title</title>
+      </head>
+      <body f-client-nav>
+        <Partial name="body">
+          <Fader>
+            <Component />
+          </Fader>
+        </Partial>
+        <pre id="logs" />
+      </body>
+    </html>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_svg_link/fail.tsx b/tests/fixture_partials/routes/client_svg_link/fail.tsx
new file mode 100644
index 00000000000..69802347e26
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_link/fail.tsx
@@ -0,0 +1,9 @@
+import { RouteConfig } from "$fresh/server.ts";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function PageA() {
+  return <h1 class="fail">FAIL</h1>;
+}
diff --git a/tests/fixture_partials/routes/client_svg_link/index.tsx b/tests/fixture_partials/routes/client_svg_link/index.tsx
new file mode 100644
index 00000000000..ae74ea3bd2e
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_link/index.tsx
@@ -0,0 +1,51 @@
+import { RouteConfig } from "$fresh/server.ts";
+import CounterA from "../../islands/CounterA.tsx";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function ModeDemo() {
+  return (
+    <div>
+      <a href="/client_svg_link/fail" f-partial="/client_svg_link/success">
+        <svg
+          width="100"
+          height="100"
+          viewBox="-256 -256 512 512"
+          version="1.1"
+          xmlns="http://www.w3.org/2000/svg"
+          xmlnsXlink="http://www.w3.org/1999/xlink"
+        >
+          <path
+            class="update"
+            d="M0,-256 221.7025033688164,-128 221.7025033688164,128 0,256 -221.7025033688164,128 -221.7025033688164,-128z"
+            fill="#673ab8"
+          />
+          <ellipse
+            cx="0"
+            cy="0"
+            stroke-width="16px"
+            rx="75px"
+            ry="196px"
+            fill="none"
+            stroke="white"
+            transform="rotate(52.5)"
+          />
+          <ellipse
+            cx="0"
+            cy="0"
+            stroke-width="16px"
+            rx="75px"
+            ry="196px"
+            fill="none"
+            stroke="white"
+            transform="rotate(-52.5)"
+          />
+          <circle cx="0" cy="0" r="34" fill="white" />
+        </svg>
+      </a>
+      <CounterA />
+    </div>
+  );
+}
diff --git a/tests/fixture_partials/routes/client_svg_link/success.tsx b/tests/fixture_partials/routes/client_svg_link/success.tsx
new file mode 100644
index 00000000000..5350e9db354
--- /dev/null
+++ b/tests/fixture_partials/routes/client_svg_link/success.tsx
@@ -0,0 +1,15 @@
+import { RouteConfig } from "$fresh/server.ts";
+import CounterA from "../../islands/CounterA.tsx";
+
+export const config: RouteConfig = {
+  skipAppWrapper: true,
+};
+
+export default function PageA() {
+  return (
+    <div>
+      <h1 class="success">Success</h1>
+      <CounterA />
+    </div>
+  );
+}
diff --git a/tests/partials_test.ts b/tests/partials_test.ts
index 34b80ef0c28..0857702d778 100644
--- a/tests/partials_test.ts
+++ b/tests/partials_test.ts
@@ -921,6 +921,64 @@ Deno.test("allow opting out of client navigation if parent opted in", async () =
   );
 });
 
+Deno.test("allow opting out of client navigation in island", async () => {
+  await withPageName(
+    "./tests/fixture_partials/main.ts",
+    async (page, address) => {
+      const initialUrl = `${address}/client_nav_opt_out_island`;
+      await page.goto(initialUrl);
+      await page.waitForSelector(".island");
+
+      await page.click(".island-a button");
+      await waitForText(page, ".output-a", "1");
+
+      await Promise.all([
+        page.waitForNavigation(),
+        page.click(".opt-out-link"),
+      ]);
+      await page.waitForSelector(".island");
+      await page.waitForSelector(".success");
+      await waitForText(page, ".output-a", "0");
+    },
+  );
+});
+
+Deno.test("allow SVG inside partial links", async () => {
+  await withPageName(
+    "./tests/fixture_partials/main.ts",
+    async (page, address) => {
+      const initialUrl = `${address}/client_svg_link`;
+      await page.goto(initialUrl);
+      await page.waitForSelector(".island");
+
+      await page.click(".island-a button");
+      await waitForText(page, ".output-a", "1");
+
+      await page.click(".update");
+      await page.waitForSelector(".success");
+      await waitForText(page, ".output-a", "1");
+    },
+  );
+});
+
+Deno.test("allow SVG inside partial buttons", async () => {
+  await withPageName(
+    "./tests/fixture_partials/main.ts",
+    async (page, address) => {
+      const initialUrl = `${address}/client_svg_button`;
+      await page.goto(initialUrl);
+      await page.waitForSelector(".island");
+
+      await page.click(".island-a button");
+      await waitForText(page, ".output-a", "1");
+
+      await page.click(".update");
+      await page.waitForSelector(".success");
+      await waitForText(page, ".output-a", "1");
+    },
+  );
+});
+
 Deno.test("restore scroll position", async () => {
   await withPageName(
     "./tests/fixture_partials/main.ts",
diff --git a/versions.json b/versions.json
index c5b2b4fd2c7..220c7ac9715 100644
--- a/versions.json
+++ b/versions.json
@@ -1,4 +1,5 @@
 [
+  "1.7.2",
   "1.7.1",
   "1.7.0",
   "1.6.8",
