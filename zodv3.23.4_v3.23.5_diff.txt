diff --git a/README_ZH.md b/README_ZH.md
index ad19b414a..9656ebda8 100644
--- a/README_ZH.md
+++ b/README_ZH.md
@@ -326,7 +326,7 @@ pnpm add zod          # pnpm
 
 ### 从`deno.land/x` (Deno)安装
 
-和 Node 不同，Demo 依靠一个直接的 URL 导入而非像 npm 这样的包管理器。可以这样导入最新版本的 Zod:
+和 Node 不同，Deno 依靠一个直接的 URL 导入而非像 npm 这样的包管理器。可以这样导入最新版本的 Zod:
 
 ```ts
 import { z } from "https://deno.land/x/zod/mod.ts";
diff --git a/deno/lib/__tests__/enum.test.ts b/deno/lib/__tests__/enum.test.ts
index 819d3264f..af3bcc9ad 100644
--- a/deno/lib/__tests__/enum.test.ts
+++ b/deno/lib/__tests__/enum.test.ts
@@ -83,3 +83,8 @@ test("error map in extract/exclude", () => {
     );
   }
 });
+
+test("readonly in ZodEnumDef", () => {
+  let _t!: z.ZodEnumDef<readonly ["a", "b"]>;
+  _t;
+});
diff --git a/deno/lib/types.ts b/deno/lib/types.ts
index 10633145b..199d1eafe 100644
--- a/deno/lib/types.ts
+++ b/deno/lib/types.ts
@@ -4139,7 +4139,7 @@ export class ZodLiteral<T> extends ZodType<T, ZodLiteralDef<T>, T> {
 export type ArrayKeys = keyof any[];
 export type Indices<T> = Exclude<keyof T, ArrayKeys>;
 
-export type EnumValues<T extends string = string> = [T, ...T[]];
+export type EnumValues<T extends string = string> = readonly [T, ...T[]];
 
 export type Values<T extends EnumValues> = {
   [k in T[number]]: k;
diff --git a/package.json b/package.json
index acea309be..976509794 100644
--- a/package.json
+++ b/package.json
@@ -1,6 +1,6 @@
 {
   "name": "zod",
-  "version": "3.23.4",
+  "version": "3.23.5",
   "author": "Colin McDonnell <colin@colinhacks.com>",
   "repository": {
     "type": "git",
diff --git a/src/__tests__/enum.test.ts b/src/__tests__/enum.test.ts
index e529e9ce4..75c79abfd 100644
--- a/src/__tests__/enum.test.ts
+++ b/src/__tests__/enum.test.ts
@@ -82,3 +82,8 @@ test("error map in extract/exclude", () => {
     );
   }
 });
+
+test("readonly in ZodEnumDef", () => {
+  let _t!: z.ZodEnumDef<readonly ["a", "b"]>;
+  _t;
+});
diff --git a/src/types.ts b/src/types.ts
index e62e61f12..2aec55df2 100644
--- a/src/types.ts
+++ b/src/types.ts
@@ -4139,7 +4139,7 @@ export class ZodLiteral<T> extends ZodType<T, ZodLiteralDef<T>, T> {
 export type ArrayKeys = keyof any[];
 export type Indices<T> = Exclude<keyof T, ArrayKeys>;
 
-export type EnumValues<T extends string = string> = [T, ...T[]];
+export type EnumValues<T extends string = string> = readonly [T, ...T[]];
 
 export type Values<T extends EnumValues> = {
   [k in T[number]]: k;
